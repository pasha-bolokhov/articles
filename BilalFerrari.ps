%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: arXiv:hep-th/9706145 v4   15 Dec 1997
%%Pages: 58
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -z -R -K1 ma13.dvi -o
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 2004.01.23:1959
%%BeginProcSet: texc.pro
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR /setpagedevice{pop}N
/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if
/setpagedevice{pop}N
/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: hps.pro
/HPSdict 20 dict dup begin/braindeaddistill 50 def/rfch{dup length 1 sub
1 exch getinterval}bind def/splituri{dup(#)search{exch pop}{()exch}
ifelse dup(file:)anchorsearch{pop exch pop 3 -1 roll pop false}{pop 3 -1
roll exch pop true}ifelse}bind def/lookuptarget{exch rfch dup
/TargetAnchors where{pop TargetAnchors dup 3 -1 roll known{exch get true
}{pop(target unknown:)print == false}ifelse}{pop pop
(target dictionary unknown\012)print false}ifelse}bind def/savecount 0
def/stackstopped{count counttomark sub/savecount exch store stopped
count savecount sub 1 sub dup 0 gt{{exch pop}repeat}{pop}ifelse}bind def
/tempstring 256 string def/targetvalidate{1 index dup length 255 gt exch
dup(/)search{pop pop pop exch pop true exch}{pop}ifelse cvn tempstring
cvs token pop pop length 0 ne or not}bind def/targetdump-hook where{pop}
{/targetdump-hook{dup mark exch gsave initmat setmatrix{{mark/Dest 4 2
roll targetvalidate{aload pop exch pop/Page 3 1 roll/View exch[exch
/FitH exch]/DEST pdfmark}{cleartomark}ifelse}forall}stackstopped pop
grestore}bind def}ifelse/baseurl{mark exch 1 dict dup 3 -1 roll/Base
exch put/URI exch/DOCVIEW{pdfmark}stackstopped pop}bind def
/externalhack systemdict/PDF known def/oldstyle true def/initmat matrix
currentmatrix def/actiondict 2 dict dup/Subtype/URI put def
/weblinkhandler{dup 3 1 roll mark 4 1 roll/Title 4 1 roll splituri 3 -1
roll dup length 0 gt{cvn/Dest exch 4 2 roll}{pop}ifelse{externalhack{
/HTTPFile exch}{actiondict dup 3 -1 roll/URI exch put/Action exch}
ifelse}{externalhack{/HTTPFile exch}{/File exch/Action/GoToR}ifelse}
ifelse counttomark 2 sub -1 roll aload pop/Rect 4 1 roll/Border 3 1 roll
/Color exch oldstyle{/LNK}{/Subtype/Link/ANN}ifelse gsave initmat
setmatrix{pdfmark}stackstopped grestore}bind def/externalhandler where{
pop}{/externalhandler{2 copy{weblinkhandler}exec{/externalhack
externalhack not store 2 copy{weblinkhandler}exec{/externalhack
externalhack not store/oldstyle false store 2 copy{weblinkhandler}exec{
(WARNING: external refs disabled\012)print/externalhandler{pop pop}bind
store externalhandler}{pop pop}ifelse}{pop pop/externalhack externalhack
not store}ifelse}{pop pop/externalhandler{weblinkhandler pop}bind store}
ifelse}bind def}ifelse/pdfmnew{dup type/stringtype eq{externalhandler}{
exch dup rfch exch 3 -1 roll lookuptarget{mark 4 1 roll/Title 4 1 roll
aload pop exch pop/Page 3 1 roll/View exch[exch/FitH exch]5 -1 roll
aload pop/Rect 4 1 roll/Border 3 1 roll/Color exch/LNK gsave initmat
setmatrix pdfmark grestore}{pop pop}ifelse}ifelse}bind def/pdfmold{dup
type/stringtype eq{externalhandler}{exch dup rfch exch 3 -1 roll
lookuptarget{mark 4 1 roll/Title 4 1 roll aload pop exch pop/Page 3 1
roll/View exch[exch/FitH exch]5 -1 roll aload pop pop 0 3 getinterval
/Rect 3 1 roll/Border exch/LNK gsave initmat setmatrix pdfmark grestore}
{pop pop}ifelse}ifelse}bind def/pdfm where{pop}{/pdfm
/currentdistillerparams where{pop currentdistillerparams dup
/CoreDistVersion known{/CoreDistVersion get}{0}ifelse dup
braindeaddistill le{(WARNING: switching to old pdfm because version =)
print ==/pdfmold}{pop/pdfmnew}ifelse load}{/pdfmark where{pop{dup type
/stringtype eq{externalhandler}{2 copy mark 3 1 roll{pdfmnew}
stackstopped{2 copy mark 3 1 roll{pdfmold}stackstopped{
(WARNING: pdfm disabled\012)print/pdfm{pop pop}store}{
(WARNING: new pdfm failed, switching to old pdfm\012)print/pdfm/pdfmold
load store}ifelse}{/pdfm/pdfmnew load store}ifelse pop pop}ifelse}}{{
pop pop}}ifelse}ifelse bind def}ifelse end def

%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (ma13.dvi)
@start
%DVIPSBitmapFont: Fa cmmi5 5 1
/Fa 1 107 df<13C013801300A41207EA19801211EA0300A41206A4128C12F00A137F8E
0C>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt10 10 8
/Fb 8 117 df<387FFFC0B5FC7EEA1C01A490C7FCA2131CA2EA1FFCA3EA1C1CA290C7FC
14E0A5EA7FFFB5FC7E13197F9816>69 D<387F0FE038FF8FF0387F0FE0381C0780EB0F00
130E5B133C5B5B5BEA1DF0121F7F1338EA1E1C121C7FA27FA2EB0380387F07E038FF8FF0
387F07E01419809816>75 D<EA7FF8EAFFFE6C7E381C0F80130314C01301A31303148013
0F381FFF005B13F8001CC7FCA7127F487E6CC7FC12197F9816>80
D<EA03F8EA0FFCEA1FFEEA3C1EEA780CEA70005AA57EEA70071278EA3E0EEA1FFCEA0FF8
EA03F010127D9116>99 D<1203EA0780A2EA0300C7FCA4EAFF80A31203ACEAFFFC13FE13
FC0F1A7C9916>105 D<EA7FC012FF127F1201B3EA7FFFB512806C130011197E9816>108
D<EAFC7CEAFDFEB5FC381F0780381E03C0EA1C01EB00E0A6EB01C0EA1E03381F0780EBFF
00EA1DFEEA1C7890C7FCA6B47EA3131B7F9116>112 D<12035AA4EA7FFFB5FCA20007C7
FCA75BEB0380A3EB8700EA03FE6C5A6C5A11177F9616>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti10 10 5
/Fc 5 119 df<13F8EA0704120CEA1802EA38041230EA7008EA7FF0EAE000A5EA600413
08EA30101360EA0F800F127C9113>101 D<EB78C0EA01C5EA03031206000E1380120C12
1CA238380700A4130EA3EA181EEA0C7CEA079CEA001CA25BA2EAC030EAE070EAC1C0007F
C7FC121A7E9113>103 D<EA01801203EA0100C7FCA7121C12261247A2128EA2120E5AA3
5AA21271A31272A2123C091C7C9B0D>105 D<EA383EEA4CC3384D0380124E129E129C12
1CA238380700A3130E00701340A2131C1480EAE00C3860070012127C9117>110
D<EA1C06EA2E0EEA4E06A2EA8E02A2121CA2EA3804A313081230A21310EA3820EA1840EA
0F800F127C9113>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr7 7 3
/Fd 3 52 df<120C121C12EC120CAFEAFFC00A137D9211>49 D<121FEA60C01360EAF070
13301260EA0070A2136013C012011380EA02005AEA08101210EA2020EA7FE012FF0C137E
9211>I<EA0FC0EA3070EA7038A31200133013E0EA0FC0EA007013381318131C126012F0
1318EAE038EA6070EA1FC00E137F9211>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx9 9 2
/Fe 2 83 df<EB3FC03801E0783807C03E380F000F481480003EEB07C0A2007E14E0007C
130300FC14F0A8007C14E0A26CEB07C0130F391F188F80390F104F003807D07E3801F078
39003FF010EB003CEC3FF0A2EC1FE0A2EC0FC0EC07801C217E9921>81
D<B512C014F8380F807E80801580A41500143E14FCEBFFE01381EB80F01478147CA3147E
A3150C143F39FFF81F18EC07F01E1A7E9921>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy7 7 3
/Ff 3 113 df<1204A3EAC460EAF5E0EA3F80EA0E00EA3F80EAF5E0EAC460EA0400A30B
0D7E8D11>3 D<1204120EA2121CA31238A212301270A21260A212C0A2070F7F8F0A>48
D<154015C0EC0180A2EC0300A21406A25C5CA25CA25CA200305B12D838180180120C49C7
FC120613066C5AA2EA0198A2EA00F0A21360A21A1E7F811B>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmex10 10 7
/Fg 7 81 df<140C141814381430146014E014C01301EB0380A2EB0700A2130EA25BA25B
A21378137013F0A25B1201A2485AA4485AA3120F90C7FCA35AA2121EA3123EA4123CA312
7CA81278A212F8B1164B748024>48 D<12C01260127012307E121C120C120E7EA26C7EA2
6C7EA26C7EA21370A213781338133CA2131C131EA27FA4EB0780A314C01303A314E0A213
01A314F0A41300A314F8A81478A2147CB1164B7F8024>I<12F8B11278A2127CA8123CA3
123EA4121EA3121FA27EA37F1207A36C7EA46C7EA212007FA2137013781338A27FA27FA2
7FA2EB0380A2EB01C0130014E01460143014381418140C164B748224>64
D<147CB11478A214F8A814F0A31301A414E0A31303A214C0A313071480A3EB0F00A4131E
A2131C133CA2133813781370A25BA2485AA2485AA248C7FCA2120E120C121C12185A1270
12605A164B7F8224>I<12F8B3A9051B748024>I<12F8B3A9051B6E8024>I<B712F0A200
70C7EA0FF8007814006C1538001C151C6C150C000F15046C15066C6C14026D14006C7E12
00137013787F131C131E7F7F6D7EA291C8FC5B13065B5B133813305B5B120149140248C8
120600061504000E150C000C151C4815384815F80070140F007FB612F0B7FC272A7E7F2C
>80 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi7 7 7
/Fh 7 116 df<3807FFE03800E0703801C018140CA2140EEA0380A43807001CA3143800
0E1330147014E0EB01C0381C0700EAFFFC17147F931B>68 D<EA0780EA1840EA3020EA60
4012C0EAFF80EAC0005AA2EAC0201340EA6180EA3E000B0D7E8C10>101
D<1318136C137C136C13C0A3EA07F8EA00C0EA0180A5EA0300A512021206A2126612E45A
12700E1A7F9310>I<1206120712061200A41238124CA2128C12981218A212301232A212
64A2123808147F930C>105 D<1330133813301300A4EA01C0EA0260EA04301360120812
00A213C0A4EA0180A4EA630012E312C612780D1A81930E>I<3830F87C38590C86384E0D
06EA9C0EEA980C1218A248485A15801418A23960301900140E190D7F8C1D>109
D<1207EA1880EA19C0EA3180EA3800121E7EEA0380124112E1EAC1001282127C0A0D7E8C
10>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 10 6
/Fi 6 122 df<B61280A219027D8A20>0 D<153081A381A281811680ED00C0B712F8A2C9
12C0ED0380160015065DA25DA35D25167E942A>33 D<D807E0133FD80FF8EBF1803A183E
0180403A200F030020264007841310EB03CC268001D81308EB00F0A21478A214DC264001
9E1310140F3A20060780203A100C03E0C03A0C7800FF80D807E0EB3F0025127E912A>49
D<EA03F8EA0C0E38300780382003C0486C7E486C7EEC7040EC3880EC0F0091C7FC124014
0F0030EB1880000CEB30403803C070C7FC1500A280A28000F87F121E1207EA03806C6C5A
3800F03CEB3870EB1FE01A1D7E9C1E>61 D<496C141001031530A21760496C14E0160101
0514031607A26EEB0DC001091419010814331673496C13E3ED01C3913870038301201403
DA78061380150C903940381807EC3C3815709038801CE0EC1FC0D801001380EC0F000062
130E00FE010414C04890C713F0EE03C0007892C7FC2C1F7F9C32>77
D<12021207A61202A3EA7270EAFFF8EA7270EA0200A21207B11202A60D267E9C12>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy6 6 4
/Fj 4 113 df<EA8008EAC018EA6030EA3060EA18C0EA0D80EA0700A2EA0D80EA18C0EA
3060EA6030EAC018EA80080D0E7A8C18>2 D<120CA2EACCC012EDEA7F80EA0C00EA7F80
EAEDC012CCEA0C00A20A0B7D8B10>I<1208121CA21238A312301270A21260A212C0A206
0D7E8D09>48 D<140114031406A2140C1418A21430A2146014C0A2EB0180127038B00300
121813066C5AA26C5AA26C5A5BEA01E05B1200181A7D8119>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmex10 12 38
/Fk 38 115 df<130813101320134013C0EA0180EA0300A21206A25AA2121C12181238A2
12301270A4126012E0AF12601270A412301238A21218121C120CA27EA27EA2EA0180EA00
C013401320131013080D3B798117>0 D<7E12407E7E12187E7EA27EA2EA0180A213C012
0013E0A213601370A413301338AF13301370A4136013E0A213C012011380A2EA0300A212
06A25A5A12105A5A5A0D3B7E8117>I<14C0EB0700131C5B5B136013E0B2485AA2485A00
0FC7FC123812C01238120FEA03806C7EA26C7EB2136013707F7F1307EB00C0123B7B811D
>8 D<12C01238120FEA03806C7EA26C7EB2136013707F7F1307EB00C0EB0700131C5B5B
136013E0B2485AA2485A000FC7FC123812C0123B7B811D>I<12C0B3AE0220798011>12
D<146014C0EB0180EB03001306130E5B131813385B136013E0485AA2485AA2120790C7FC
A25A120E121EA2121CA2123CA21238A21278A5127012F0B312701278A51238A2123CA212
1CA2121EA2120E120F7EA27F1203A26C7EA26C7E136013707F1318131C7F13067FEB0180
EB00C01460135977811E>16 D<12C012607E7E7E120E7E7E7F6C7E12007F1370A27FA213
3C131CA2131E130E130FA27FA21480A21303A214C0A5130114E0B314C01303A51480A213
07A21400A25BA2130E131E131CA2133C1338A25BA25B5B1201485A90C7FC5A120E120C5A
5A5A5A13597F811E>I<EC0180EC030014065C5C5C5C14E0495A5C130349C7FC130EA25B
A25B1378137013F05B12015BA212035B1207A290C8FC5AA2120E121EA3121C123CA41238
1278A7127012F0B3A312701278A71238123CA4121C121EA3120E120FA27E7FA212037F12
01A27F12007F1370137813387FA27FA27F6D7E1301806D7E14608080808080EC01801977
768125>I<12C012607E7E7E7E7E7F6C7E12007F13707FA27FA27F130F7F801303801301
A280130080A214701478A21438143CA3141C141EA4140E140FA7801580B3A315005CA714
0E141EA4141C143CA314381478A2147014F0A25C13015CA213035C130791C7FC5B130E5B
A25BA25B5B5B1201485A90C8FC12065A5A5A5A5A19777F8125>I<EAFFF8A3EAE000B3B3
B3B3B3B3A5EAFFF8A30D7774811A>I<EAFFF8A3EA0038B3B3B3B3B3B3A5EAFFF8A30D77
80811A>I<15C0EC0180EC03005C140E140C5C14385C146014E0495AA2495A130791C7FC
5B130E131E131C133C13381378A25BA3485AA3485AA3485AA3120F90C8FCA35AA2121EA3
123EA4123CA2127CA8127812F8B3AA1278127CA8123CA2123EA4121EA3121FA27EA37F12
07A36C7EA36C7EA36C7EA31378A21338133C131C131E130E130F7F8013036D7EA26D7E14
60147080141880140E8080EC0180EC00C01A94758127>32 D<12C012607E12387E120C7E
12076C7E12017F6C7EA2137013781338133C131C131E130E130F7F80A26D7EA36D7EA36D
7EA31478A3147C143CA3143EA2141EA3141FA480A21580A8140715C0B3AA1580140FA815
00A25CA4141EA3143EA2143CA3147C1478A35CA3495AA3495AA3495AA291C7FC5B130E13
1E131C133C1338137813705BA2485A5B120348C8FC12065A121C5A12305A5A1A947F8127
>I<EAFFFEA3EAE000B3B3B3B3B3B3B3B0EAFFFEA30F9473811D>I<EAFFFEA3EA000EB3B3
B3B3B3B3B3B0EAFFFEA30F9480811D>I<1530156015E0EC01C015801403EC0700140EA2
5C143C14385CA25C13015C1303A2495AA249C7FCA2131EA35BA2137C1378A213F85BA212
01A25B1203A3485AA4120F5BA4121FA290C8FCA35AA4123EA4127EA8127CA312FCB11C5A
72802C>48 D<12C0126012707E1218121C7E7EA26C7E7F12016C7EA2137013781338133C
A27FA27FA26D7EA36D7EA2801301A2801300A280A21478147CA380A4143F80A41580A214
0FA315C0A41407A415E0A81403A315F0B11C5A7F802C>I<1306131E133C137813F0EA01
E0EA03C01207EA0F80A2EA1F00A2123EA2127EA2127C12FCB3AA0F2D6D7E2C>56
D<12C012F01278123E7EEA0F80EA07C0EA03E0A2EA01F013F8120013FC137C137EA3133E
133FB3A9102D777E2C>I<12FCB3AA127C127EA2123EA27EA2EA0F80A2EA07C01203EA01
E0EA00F01378133C131E13060F2D6D802C>I<133FB3A9133E137EA3137C13FC13F81201
13F0EA03E0A2EA07C0EA0F80EA1F00123E12785A12C0102D77802C>I<133FB3AA133E13
7EA3137C13FC13F8A2EA01F013E0120313C0EA0780EA0F00121E5A5A12E0A212787E7E7E
EA0780EA03C013E0120113F0EA00F8A213FC137C137EA3133E133FB3AA105C77802C>I<
12FCB3AA127C127EA3123EA27EA27E13801207EA03C013E01201EA00F01378131C130EA2
131C137813F0EA01E0120313C0EA0780120F13005AA2123EA2127EA3127C12FCB3AA0F5C
6D802C>I<12FCB1127CA3127EA8123EA4123FA47EA37FA2120FA47F1207A46C7EA31201
7FA21200A27F1378A2137C133CA27FA37FA26D7EA26D7EA213018013001470A280143C14
1C80A280EC0380140115C0EC00E0156015301C5A72822C>64 D<EC03F0B115E0A31407A8
15C0A4140FA41580A3141FA21500A45C143EA45CA3147814F8A25CA213015CA213035CA2
495AA349C7FCA2131EA25BA21338137813705BA2485A12035B48C8FCA2120E5A12181238
5A12605A1C5A7F822C>I<12FCB3AE062072802C>I<12FCB3AE062069802C>I<160FEE18
80EE31C0EE63E016E3A2923801C1C0EEC000A24B5AA21507A293C7FCA25DA3151EA4153E
153CA3157CA3157815F8A54A5AA41403A25D141F147F903801E7F890380387FC90380607
E6010C13C39039180FC180A20130EBC0C0A201601460EC1F80A5EC3F0001305CA2011849
5AA290260C3E03C7FC9038067E06903803FE1C010113789038007FE01580027CC8FC14FC
A25CA4495AA55C1303A35CA313075CA449C9FCA3130EA2131E131CA35BA2EA7030EAF870
136013E0EA70C0EA2180001ECAFC2B6F7D7F1C>73 D<B812C0A20078C813E0007C150F6C
15036CED00F06C16706D15306C6C1518000316087F6C6C15046C6C15001378137C7F131E
7F806D7E1303806D7E6D7E1478A21430147014605C495A49C9FC5B13065B5B1338491504
0160150C491508484815180003163890C91270000616F048150148ED07E0003815FF003F
B7FC4816C0B8FC2E327D7F35>80 D<B8FCA23A1FC00003F8000F15F0000715E0B3B3A648
6CEB07F0486CEB0FF8D8FFFEEB7FFFA228327D7F2F>I<140FEC30C0EC60E014C1A2ECC0
C001011300A25C1303A71307A691C7FC5BA9130E131EA6131CA713181338A2EA603012F0
5BEAE040EA6180001FC8FC1B377D7F18>I<BA12E085D87F80C812076DED003F003FEF07
F86C6C16006C6C177C6D171C0007846C6C17066D17020001846C7E6D6CEE00806E170013
3F6D7E80130F6D7E6D7EA26D7E6D7E81147F6E7E81141F6E7E6E7E8114036E7E8180157E
153C15385D5D14015D4A5A4ACBFC140E5C143C14385C5C495A495A130791CB1280010EEF
01005B495F49170601F0170E49171E48485F484817FC48CAEA03F8000E171F001EEE07FF
001FB95A5A5ABA5A41467D7F48>88 D<BA1280A3000F90C8387FF800000317E06C5F6C5F
B3B3B3A4486D4A7E486D497F000F01F0010713F8B6017FEBFF80A339467D7F40>I<160F
EE1880EE31C0EE63E016E3A2923801C1C0EEC000A24B5AA21507A293C7FCA25DA3151EA4
153E153CA3157CA3157815F8A54A5AA41403A25DA21407A45D140FA54A5AA54AC8FCA514
3E147EA4147CA214FCA25CA4495AA55C1303A35CA313075CA449C9FCA3130EA2131E131C
A35BA2EA7030EAF870136013E0EA70C0EA2180001ECAFC2B6F7D7F1C>I<EAFFC0A2EAC0
00B3B3B3B3ADEAFFC0A20A59748118>104 D<EAFFC0A21200B3B3B3B3AD12FFA20A597F
8118>I<1704170CA21718A31730A31760A317C0A3EE0180A3EE0300A31606A45EA35EA3
5EA35EA35EA34B5AA34BC7FCA31202000714065A5AD837805B1267124700875CEA03C0A2
5D6C7EA25DA26C7E5DA213784A5AA2133CA24AC8FCA2131E1406A2130F5CA3EB0798A3EB
03F0A35C1301A25C1300A22E5A7B8132>113 D<1704170CA21718A41730A51760A417C0
A4EE0180A4EE0300A41606A55EA45EA45EA45EA45EA54B5AA44BC7FCA3120200071406A2
5A5A5DEA2780A21247128700075C6C7EA35D6C7EA35DA26C7EA25DA21378A24A5AA3133C
A24AC8FCA3131E1406A3130F5CA4EB0798A4EB03F0A56D5AA45C1300A22E787B8132>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi6 6 8
/Fl 8 116 df<EA0FFF38030180EB00C000061360A21420A2481360A314404813C0EB01
8014001306EA301CEAFFF013117D9019>68 D<13781318A21330A31207EA18E0EA306012
60A2EAC0C0A213C81241EA62D0EA3C600D117E9010>100 D<EA0780EA184012301260EA
7F80EAC000A3EA4020EA20C0EA1F000B0B7E8A0F>I<13E0EA01B013A0EA0300A3EA1FE0
EA03001206A65AA41208125812D012600C167D900F>I<1204120C1200A5123012581298
A21230A212601264A21268123006127E910B>105 D<1320A21300A5EA0380EA04C01208
A21200EA0180A4EA0300A4124612CC12780B1780910D>I<3871F1F0389A1A18EA9C1CEA
9818121838303030A214321462386060641438170B7E8A1B>109
D<120FEA10801221EA2000123E7EEA01801280EAC0001283127C090B7D8A0F>115
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy9 9 13
/Fm 13 122 df<B512FEA217027D891E>0 D<126012F0A2126004047D8A0B>I<6C13C0EA
C00138600300EA30066C5A6C5A6C5A6C5A6C5AA2EA0360EA0630487E487E487E487E38C0
01C0EA800012127A911E>I<1203A4EAE31CEA7338EA1FE0EA0780A2EA1FE0EA7338EAE3
1CEA0300A40E107E9013>I<1308130CABB61280A2D8000CC7FCAAB61280A2191A7E981E>
6 D<B61280A2D8000CC7FCAAB61280A2D8000CC7FCAB1308191A7E921E>I<4A7EA26E7E
A21560A2818181B71280A2C8EA0C005D5D5DA25DA24A5AA221147E9226>33
D<1206120FA3121EA2121CA2123C1238A31270A31260A212E012C008137F940A>48
D<3907C001F0391FF0078C39307C0C0239601E180138400F303A80076000806D5AA26D7E
A2EB03703A4006780100496C5A3920181F063918F007FC3907C001F021107E8F26>I<EB
7FE0EA03FF38078000000CC7FC5A5AA25AA25AA2B512E0A200C0C7FCA21260A27EA27E7E
EA07803803FFE0EA007F13187D941A>I<12C0A21260A37EA37EA37EA37EA37EA3EA0180
A3EA00C0A31360A31330A31318A3130C13040E257E9B13>110 D<15021506150CA21518
A21530A21560A215C0A2EC0180A2EC0300A21406A25C120C003C5B124E008E5B12075CA2
6C6C5AA23801C180A2D800E3C7FCA21376A2133CA21318A21F267E8120>112
D<12021207A51202A3EA7270EAFFF8EA7270EA0200A21207AE1202A50D217E9912>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr6 6 8
/Fn 8 120 df<121FEA3180EA60C0EA4040EAC060A8EA4040EA60C0EA3180EA1F000B10
7F8F0F>48 D<1218127812981218AC12FF08107D8F0F>I<121FEA6180EA40C0EA806012
C01200A213C0EA0180EA030012065AEA10201220EA7FC012FF0B107F8F0F>I<121FEA21
80EA60C0A212001380EA0100121FEA00801340136012C0A2EA8040EA6080EA1F000B107F
8F0F>I<EA0180A212031205120D121912111221124112C1EAFFE0EA0180A4EA0FE00B10
7F8F0F>I<EA01E0EA0060A5120FEA30E0EA606012C0A51260EA30E0EA1F780D117F9011>
100 D<EA0F20EA30E0EA606012C0A51260EA30E0EA1F601200A4EA01F80D107F8A10>
113 D<38F9F3C03860E18000301300EA31211331EA1932EA1A12131AEA0E1CEA0C0CEA04
08120B7F8A16>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx12 12 49
/Fo 49 122 df<EB0FFF137F3801F83FEA03E0EA07C0EA0F8080A7B6FCA2380F801FB239
7FF0FFE0A21B237FA21F>13 D<13181330136013C01201EA0380EA0700A2120E121E121C
123CA35AA412F85AAB7E1278A47EA3121C121E120E7EA2EA0380EA01C012001360133013
180D317BA416>40 D<12C012607E7E121C7E7EA2EA038013C0120113E0A3EA00F0A413F8
1378AB13F813F0A4EA01E0A313C012031380EA0700A2120E5A12185A5A5A0D317DA416>
I<1238127C12FEA3127C123807077C8610>46 D<13FE3807FFC0380F83E0381F01F0383E
00F8A248137CA312FC147EAD007C137CA36C13F8A2381F01F0380F83E03807FFC03800FE
0017207E9F1C>48 D<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>I<EA
03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0A2EB
07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFFF05A
5A5AB5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F0314
F0120014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE127EB4
FCA314FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E013011303
A21307130F131FA21337137713E7EA01C71387EA03071207120E120C12181238127012E0
B6FCA2380007E0A790B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014005B
13F8EA33C00030C7FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8A212
38127C12FEA200FC13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F1C>
I<EB1F80EBFFE03803E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EAFC08
EB7FC0EBFFE038FD80F038FF00F848137CA248137EA4127CA3003C137C123E001E13F86C
13F0380783E03803FFC0C6130017207E9F1C>I<12601278387FFFFEA214FC14F8A214F0
38E0006014C038C00180EB0300A2EA00065B131C131813381378A25BA31201A31203A76C
5A17227DA11C>I<13FE3803FFC0380703E0380E00F05A1478123C123E123F1380EBE0F0
381FF9E0EBFFC06C13806C13C06C13E04813F0381E7FF8383C1FFCEA7807EB01FEEAF000
143E141EA36C131C007813387E001F13F0380FFFC00001130017207E9F1C>I<EA01FE38
07FF80380F83E0381E01F0EA3E004813F8147800FC137CA3147EA4007C13FEA2EA3E0138
1E037EEA0FFEEA07FCEA0020EB007CA2121E003F13F8A214F0EB01E0381E03C0381C0F80
380FFE00EA03F817207E9F1C>I<1238127C12FEA3127C12381200A81238127C12FEA312
7C123807167C9510>I<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA2
01307F140F01707FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A2
3AFFE007FFF8A225227EA12A>65 D<B67E15F03907F001F86E7E157EA2157FA5157E15FE
5DEC03F890B55AA29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612
F815C022227EA128>I<D903FE138090381FFF819038FF01E33901F8003FD803E0131F48
48130F48481307121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E1503
6C6C1400120F6C6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA1
28>I<B67E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0
A3ED07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612F8A238
07F001EC007815381518151CA2150CA21418A21500A214381478EBFFF8A2EBF078143814
18A491C7FCA8B512C0A21E227EA123>70 D<D903FE134090391FFFC0C090387F00F1D801
F8133F4848130FD807C01307000F1403485A48C71201A2481400127EA200FE1500A79138
0FFFFC127E007F9038001FC0A27EA26C7E6C7E6C7E6C7ED801FC133F39007F80E790381F
FFC30103130026227DA12C>I<EB07FC90383FFF809038FC07E03903F001F848486C7E48
48137E48487FA248C7EA1F80A24815C0007E140FA200FE15E0A9007E15C0007F141FA26C
15806D133F001F15006C6C137E6C6C5B6C6C485A3900FC07E090383FFF80D907FCC7FC23
227DA12A>79 D<B6FC15E03907F007F0EC01FC1400157EA2157FA5157EA215FC1401EC07
F090B512E0150001F0C7FCADB57EA220227EA126>I<B512FEECFFC03907F007F0EC01F8
6E7E157E157FA6157E5D4A5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA81606EC00
FEEDFF0CB538803FF8ED0FF027227EA12A>82 D<3801FE023807FF86381F01FE383C007E
007C131E0078130EA200F81306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC00
0313FEEA003F1303EB007F143FA200C0131FA36C131EA26C133C12FCB413F838C7FFE000
80138018227DA11F>I<007FB61280A2397E03F80F00781407007014030060140100E015
C0A200C01400A400001500B3A248B512F0A222227EA127>I<003FB512E0A29038801FC0
383E003F003C14800038EB7F00485B5C1301386003FC5C130700005B495A131F5C133F49
5A91C7FC5B491360485A12035B000714E0485A5B001FEB01C013C0383F8003007F1307EB
003FB6FCA21B227DA122>90 D<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200A2
133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B>
97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497EEC0F80A215C0A81580141F0180
1300EBC03E381EE07C381C3FF838180FC01A237EA21F>I<EBFF80000713E0380F83F0EA
1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0
C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F007E003E13
3E127E127C12FCA8127CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<
13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127C
A2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1
F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<38
01FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EB
FF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F8048
1307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>I<B4FCA2121FABEB
07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E12
7FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FABECFF80A2
EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F806D7E6D7E1301806D7E147C14
3C39FFE0FFC0A21A237EA21E>107 D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07
F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0
A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A
167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C13
7CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF838
1FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC0
90C8FCA8EAFFE0A21A207E951F>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7
FCADEAFFF0A213167E9517>114 D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7
FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0A238F00700EAFC0EEAEFFC
EAC7F011167E9516>I<487EA41203A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB83
00EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F003EAF147E14FE380F81BE39
07FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C
13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA21B167F951E>
I<3AFFE3FF07F8A23A1F007800C09038807C01000F1580A23A07C07E030014DE5D3903E1
DF06148FD801F1138CEBF307A2D800FF13D8EBFE0315F890387C01F0A2013C5BEB3800A2
25167F9528>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C
6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B1278EAFC3813305BEA
69C0EA7F80001FC8FC1B207F951E>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 66
/Fp 66 127 df<130CA3131EA3133F132FA2EB4F801347A2EB87C01383A2380103E01301
A200027F1300A2487F1478A248137C143C1218003C133E39FF01FFC01A1D7F9C1D>3
D<B612F0390F000F00B3A839FFF0FFF01C1C7F9B1F>5 D<EB7E1F3901C1B180390303E3
C0000713C3000EEBC180903801C000A6B512FC380E01C0B0387F87FC1A1D809C18>11
D<137E3801C180EA0301380703C0120EEB018090C7FCA5B512C0EA0E01B0387F87F8151D
809C17>I<EB7FC0EA01C1EA03031207EA0E01A7B5FCEA0E01B0387FCFF8151D809C17>I<
12E0A212F01238121C120E120207077C9C15>18 D<120EA2121E1238127012E012800707
779C15>I<126012F012F812681208A31210A2122012401280050C7C9C0C>39
D<1380EA0100120212065AA25AA25AA35AA412E0AC1260A47EA37EA27EA27E12027EEA00
80092A7C9E10>I<7E12407E12307EA27EA27EA37EA41380AC1300A41206A35AA25AA25A
12205A5A092A7E9E10>I<126012F0A212701210A41220A212401280040C7C830C>44
D<EAFFE0A20B0280890E>I<126012F0A2126004047C830C>I<EA03C0EA0C30EA1818EA30
0CA2EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2EA1818EA0C30EA07E0101D7E
9B15>48 D<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>I<EA07C0EA1830EA201CEA
400C130EEAF00F12F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA03
00EA0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA
781E130E131E1238EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8
A3EAF00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2131C133CA2135C13DC139C
EA011C120312021204120C1208121012301220124012C0B512C038001C00A73801FFC012
1C7F9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA2C30EA3018131CEA200E1200
130FA3126012F0A3EA800EEA401E131CEA2038EA1870EA07C0101D7E9B15>I<13F0EA03
0CEA0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EAE430EAE818EAF00C130EEAE0
061307A51260A2EA7006EA300E130CEA1818EA0C30EA03E0101D7E9B15>I<1240387FFF
801400A2EA4002485AA25B485AA25B1360134013C0A212015BA21203A41207A66CC7FC11
1D7E9B15>I<EA03E0EA0C30EA1008EA200C13061260A21270A2EA7C0CEA3E18EA3FB0EA
1FE0EA07F013F8EA18FCEA307EEA601E130FEAC0071303A4EA60021304EA300CEA1C10EA
07E0101D7E9B15>I<EA03C0EA0C30EA1818EA300C1270EA600EEAE006A21307A51260EA
700F1230EA1817EA0C27EA07C7EA0006A2130EEA300C127813181270EA2030EA10C0EA0F
80101D7E9B15>I<B612E0A2C9FCA8B612E0A21B0C7E8F20>61 D<1306A3130FA3EB1780
A2EB37C01323A2EB43E01341A2EB80F0A338010078A2EBFFF83802003CA3487FA2000C13
1F80001E5BB4EBFFF01C1D7F9C1F>65 D<B512C0380F00788080140E140FA4140E141E5C
14F8EBFFF0EB003C8080801580A5EC0F00A2141E1478B512E0191C7F9B1D>I<90381F80
80EBE0613801801938070007000E13035A14015A00781300A2127000F01400A800701480
1278A212386CEB0100A26C13026C5B380180083800E030EB1FC0191E7E9C1E>I<B512FC
380F003C140C1404A214061402A213011400A35B13FF13037FA3140113001402A31406A2
140C143CB512FC181C7E9B1C>69 D<B512F8380F007814181408A2140C1404A213011400
A35B13FF13037FA490C7FCA8EAFFF8161C7E9B1B>I<90381F8080EBE061380180193807
0007000E13035A14015A00781300A2127000F01400A6ECFFF0EC0F80007013071278A212
387EA27E6C130B380180113800E06090381F80001C1E7E9C21>I<39FFF0FFF0390F000F
00AC90B5FCEB000FAD39FFF0FFF01C1C7F9B1F>I<B46CEBFF80000FECF800A2390BC001
78A33809E002A23808F004A3EB7808A3EB3C10A3EB1E20A3EB0F40A2EB0780A3EB030012
1C3AFF8307FF80211C7E9B26>77 D<B4EB1FF0390F8003809038C00100120BEA09E0EA08
F0A21378133C133E131E130F14811307EB03C1EB01E114F113001479147D143D141FA280
8080121CB46C7E1C1C7F9B1F>I<B51280380F00E01478143C141C141EA5141C143C1478
14E0EBFF8090C7FCACEAFFF0171C7E9B1C>80 D<B5FC380F01E0EB007880141C141EA414
1C143C5CEB01E001FFC7FCEB01E0EB0070147880A61510A2141CA239FFF00E20C7EA03C0
1C1D7E9B1F>82 D<3807E080EA1C19EA30051303EA600112E01300A36C13007E127CEA7F
C0EA3FF8EA1FFEEA07FFC61380130FEB07C0130313011280A300C01380A238E00300EAD0
02EACC0CEA83F8121E7E9C17>I<007FB512C038700F010060130000401440A200C01420
1280A300001400B1497E3803FFFC1B1C7F9B1E>I<39FFF01FF0390F000380EC0100B3A2
6C1302138000035BEA01C03800E018EB7060EB0F801C1D7F9B1F>I<3AFFE1FFC0FF3A1F
003E003C001E013C13186C6D1310A32607801F1320A33A03C0278040A33A01E043C080A3
3A00F081E100A39038F900F3017913F2A2017E137E013E137CA2013C133C011C1338A201
18131801081310281D7F9B2B>87 D<12FEA212C0B3B312FEA207297C9E0C>91
D<12FEA21206B3B312FEA20729809E0C>93 D<EA1FC0EA3070EA78387F12301200A2EA01
FCEA0F1C12381270126000E01340A3EA603C38304E80381F870012127E9115>97
D<12FC121CAA137CEA1D87381E0180381C00C014E014601470A6146014E014C0381E0180
38190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260
EA70021230EA1804EA0C18EA03E00F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807
EA30031270126012E0A6126012701230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0
EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE000A41260EA70021230EA1804EA0C
18EA03E00F127F9112>I<13F8EA018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7F
E00F1D809C0D>I<EB03803807C4C0EA1C783838388038301800EA701CA4EA3018EA3838
6C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA2003386001C0EAC000A33860018038
300300EA1C0EEA07F8121C7F9215>I<12FC121CAA137C1387EA1D03001E1380121CAD38
FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>I<12FC
121CAAEB0FE0EB0780EB06005B13105B5B13E0121DEA1E70EA1C781338133C131C7F130F
148038FF9FE0131D7F9C16>107 D<12FC121CB3A9EAFF80091D7F9C0C>I<39FC7E07E039
1C838838391D019018001EEBE01C001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7CEA
1C87EA1D03001E1380121CAD38FF9FF014127F9117>I<EA03F0EA0E1CEA1806487E0070
1380EA600100E013C0A600601380EA700300301300EA1806EA0E1CEA03F012127F9115>
I<EAFC7CEA1D87381E0180001C13C0EB00E0A21470A614E0A2EB01C0001E1380381D0700
EA1CFC90C7FCA7B47E141A7F9117>I<3803E080EA0E19EA1805EA3807EA7003A212E0A6
1270A2EA38071218EA0E1BEA03E3EA0003A7EB1FF0141A7F9116>I<EAFCE0EA1D38EA1E
78A2EA1C301300ACEAFFC00D127F9110>I<EA1F90EA2070EA4030EAC010A212E0EAF800
EA7F80EA3FE0EA0FF0EA00F8EA8038131812C0A2EAE010EAD060EA8FC00D127F9110>I<
1204A4120CA2121C123CEAFFE0EA1C00A91310A5120CEA0E20EA03C00C1A7F9910>I<38
FC1F80EA1C03AD1307120CEA0E1B3803E3F014127F9117>I<38FF07E0383C0380381C01
00A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A3134013127F9116>I<
39FF3FC7E0393C0703C0001CEB01801500130B000E1382A21311000713C4A213203803A0
E8A2EBC06800011370A2EB8030000013201B127F911E>I<38FF0FE0381E0700EA1C06EA
0E046C5AEA039013B0EA01E012007F12011338EA021C1204EA0C0E487E003C138038FE1F
F014127F9116>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A2
13C8EA01D0A2EA00E0A31340A25BA212F000F1C7FC12F312661238131A7F9116>I<EA1C
04EA3F08EA43F0EA80E00E047D9B15>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmmi10 10 16
/Fq 16 118 df<007E1360000E13E0A3381C01C0A2EB03801400485A130E130C5B485A5B
EA71C00073C7FC12FC12F013127E9115>23 D<3801FFF85A120F381E1E00EA180EEA3806
1270A2EAE00EA3130C131C13185BEA60606C5A001FC7FC15127E9118>27
D<126012F0A212701210A41220A212401280040C7C830C>59 D<1320A6137000C0131838
7C71F0380FFF803803FE00EA00F8A2EA01DC138CEA0306EA0202EA0603380C0180EA0800
1514809315>63 D<48B512F839003C0078013813181510A35BA214081500495AA21430EB
FFF03801C020A4390380404014001580A23907000100A25C1406000E133EB512FC1D1C7E
9B1F>69 D<3801FFC038003C001338A45BA45BA4485AA4485AA448C7FCA45AEAFFE0121C
7E9B12>73 D<3A01FFC07F803A003C001E000138131815205D5DD97002C7FC5C5C5CEBE0
4014C0EBE1E013E23801C47013D0EBE03813C0EA038080A280EA0700A280A2488039FFE0
3FF0211C7E9B23>75 D<D801FE14FFD8003E14F0012EEB01E01502A21504014EEB09C0A2
01471311A20187EB23801543A215833A0107010700A2EB0382A20002EB840E1488A21490
0004EBA01CA2EB01C0120C001CEB803C3AFF8103FF80281C7E9B28>77
D<D801FCEBFF80D8001CEB1C00012E13181510A2132701475B13431480A2903881C040A3
EB80E0D801005B1470A300020139C7FCA3141D48131E140EA2120C001C1304EAFF80211C
7E9B21>I<EA01E3EA0717EA0C0F1218EA380E12301270A2485AA4EB3880A3EA60783831
9900EA1E0E11127E9116>97 D<EA0FC01201A2485AA448C7FCA4EA0E07EB0880EB11C013
23381C4780EB8300001DC7FC121EEA3FC0EA38E01370A2EA7071A31372EAE032EA601C12
1D7E9C16>107 D<39381F81F0394E20C618394640E81CEB80F0EA8F00008E13E0120EA2
391C01C038A315703938038071A215E115E23970070064D83003133820127E9124>109
D<EA3C1F384E6180384681C0EA4701128F128E120EA2381C0380A3EB070000381310A213
0E1420387006403830038014127E9119>I<EA3C3CEA4E42EA4687EA470FEA8E1E130CEA
0E00A25AA45AA45A123010127E9113>114 D<EA01F0EA060CEA0C04130EEA180CEA1C00
121FEA0FE013F0EA03F8EA0038EA201CEA701812F01310EA8030EA6060EA1F800F127E91
13>I<001C13C0EA27011247A238870380A2120EA2381C0700A438180E20A3EA1C1E380C
26403807C38013127E9118>117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr9 9 29
/Fr 29 127 df<1318A3133CA3134EA31387A338010380A2000313C0EA0201A2000413E0
1300A24813F01470A200181378123838FE01FF181A7F991B>3 D<EBFE7C380381C63806
03CE000E1384001C1380A6B512F0381C0380AE38FF8FF0171A809916>11
D<1380EA010012025A120C120812185AA35AA412E0AA1260A47EA37E1208120C12047E7E
EA008009267D9B0F>40 D<7E12407E7E12181208120C7EA37EA41380AA1300A41206A35A
1208121812105A5A5A09267E9B0F>I<130CACB61280A2D8000CC7FCAC191A7E951E>43
D<EA07E0EA1C38EA381CEA300CEA700EEA6006A2EAE007AAEA6006A2EA700EEA300CEA38
1CEA1C38EA07E010187F9713>48 D<12035AB4FC1207B3A2EA7FF80D187D9713>I<EA0F
80EA1060EA2030EA4038EA803CEAC01C12E01240EA003C1338A21370136013C0EA018013
001202EA040412081210EA3008EA3FF8127F12FF0E187E9713>I<EA07E0EA1838EA201C
EA601EEA700EEA201E1200131CA213381370EA07E0EA0038131C130E130FA212E0A212C0
EA400EEA601CEA1838EA07E010187F9713>I<1318A21338137813F813B8EA01381202A2
12041208121812101220124012C0B5FCEA0038A6EA03FF10187F9713>I<EA3018EA3FF0
13E01380EA2000A5EA2FC0EA3060EA2030EA00381318131CA2124012E0A2EA8018EA4038
1330EA30E0EA0F800E187E9713>I<EA01F8EA0704EA0C06EA180E123013001270126012
E0EAE3E0EAE418EAE80CEAF00EEAE0061307A31260A2EA7006EA300EEA180CEA0C38EA07
E010187F9713>I<1240EA7FFF13FEA2EA4004EA80081310A2EA00201340A21380120113
005AA25A1206A2120EA5120410197E9813>I<EA07E0EA1818EA300CEA20061260A21270
EA780CEA3E18EA1F30EA07C0EA03E0EA0CF8EA307CEA601E130FEAC0071303A3EA6002EA
2004EA1818EA07E010187F9713>I<EA07E0EA1C30EA3018EA700CEA600EEAE006A21307
A31260EA700FEA3017EA1827EA07C7EA00071306130E130C12701318EA6030EA3060EA0F
8010187F9713>I<B61280A2C9FCA6B61280A2190A7E8D1E>61 D<B51280380E00E01470
1438143CA514781470EB01E0380FFFC0380E00F01478143C141C141EA4141C143C147814
F0B512C0171A7F991B>66 D<B51280380E01E0EB007014781438143CA4143814781470EB
01E0380FFF80000EC7FCABEAFFE0161A7F991A>80 D<EA0FC2EA1836EA200EEA600612C0
1302A3EAE0001270127EEA3FE0EA1FF8EA03FCEA007E130E130713031280A3EAC0021306
EAE004EAD818EA87E0101A7E9915>83 D<EA1FC0EA38707FEA101C1200A2EA03FCEA1E1C
1238127012E01480A2133CEA705F381F8F0011107F8F13>97 D<EA07F8EA1C1C1238EA70
0813005AA612701304EA3808EA1C18EA07E00E107F8F11>99 D<133F1307A9EA03E7EA0C
17EA180F487E127012E0A6126012706C5AEA1C373807C7E0131A7F9915>I<EA07C0EA1C
30EA30181270EA600C12E0EAFFFCEAE000A41260EA7004EA3808EA1C18EA07E00E107F8F
11>I<38FC7C1F391D8E6380391E0781C0A2001C1301AB39FF9FE7F81D107F8F20>109
D<EA03E1EA0C13EA180BEA300FEA700712E0A61270A26C5AEA1C37EA07C7EA0007A6EB3F
E013177F8F14>113 D<EA1F20EA60E0EA402012C0A2EAF000127FEA3FC0EA1FE0EA00F0
EA8070133012C01320EAF040EA8F800C107F8F0F>115 D<39FE7F1F8039381C0700003C
1306381C0C04130E380E16081317A238072310149013A33803C1A014E0380180C0A31910
7F8F1C>119 D<38FE3F80383C1E00EA1C086C5AEA0F306C5A6C5A12017F1203EA027048
7E1208EA181CEA381E38FC3FC012107F8F14>I<EA1810EA3E20EA47C0EA81800C047D98
13>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmsy10 12 32
/Fs 32 113 df<B612FCA21E027C8C27>0 D<127012F8A3127005057C8E0E>I<6C13026C
13060060130C6C13186C13306C13606C13C03803018038018300EA00C6136C1338A2136C
13C6EA018338030180380600C048136048133048131848130C4813064813021718789727
>I<801301AFB7FCA23900018000AEB7FCA220227DA027>6 D<B7FCA23900018000AEB7FC
A23900018000AF130020227D9827>I<EB0FF0EB700E39018001800002C7124048142000
0C143000121448001114883920800104A23940400202EB2004EB10083980081001EB0420
EB0240EB0180A2EB0240EB0420EB08103940100802EB2004EB40023920800104A20011C7
128800121448000C1430000414206C144039018001803900700E00EB0FF020227D9C27>
10 D<B7FC7EC9FCA8B7FCA2C9FCA8007FB6FCB7FC20167D9627>17
D<150C153C15F0EC03C0EC0F00143C14F0EB03C0010FC7FC133C13F0EA03C0000FC8FC12
3C12F0A2123C120FEA03C0EA00F0133C130FEB03C0EB00F0143C140FEC03C0EC00F0153C
150C1500A8007FB512F8B612FC1E287C9F27>20 D<12C012F0123C120FEA03C0EA00F013
3C130FEB03C0EB00F0143C140FEC03C0EC00F0153CA215F0EC03C0EC0F00143C14F0EB03
C0010FC7FC133C13F0EA03C0000FC8FC123C127012C0C9FCA8007FB512F8B612FC1E287C
9F27>I<D807E01301EA0FF8EA3FFCD8381E130338700780396003C00639C001E00E9038
00781C48EB3FFCEC1FF0EC07E0200B7D9127>24 D<037013E09238E001C0913903800700
91380F001E021C1338027013E0903901E003C09026038007C7FC90380E001C013C137801
7013E03901C003802607800FC8FC380E001C0038137038F001E0A238380070000E131C38
07800F3901C0038039007000E0013C1378010E131C9038038007903901E003C090390070
00E0021C1338020F131E9138038007913900E001C092387000E02B207D9B32>28
D<38E001C0387000E0001C1338000F131E380380073900E001C090387800F0011C133801
07130E903903C00780903900E001C09138380070021E133C0207130E913901C003809139
00F001E0A2913901C00380913907000E00021E133C023813709138E001C0903903C00780
902607000EC7FC011C1338017813F09038E001C026038007C8FC380F001E001C13380070
13E048485A2B207D9B32>I<4B7EA46F7EA2166082A2161C8282B812E0A2C9EA0700160E
5E1630A25E5EA24B5AA42B1A7D9832>33 D<D807E01301EA0FF8EA3FFCD8381E13033870
0780396003C00639C001E00E903800781C48EB3FFCEC1FF0EC07E0C9FCA9007FB6FCB7FC
20167D9627>39 D<156081A281A2818181B77E16E0C91270161CEE0F80EE03E0EE0780EE
1E0016381660B75A5EC80003C7FC15065D5DA25DA25D2B1C7D9932>41
D<01061303A2496D7EA2496D7E01388001301460498090B612F848810007C81207000EED
03800038ED00E000F01678003816E06CED01C00006ED03006C6C140E6CB612FC6C5D0160
C712306D5C6D5CA26D495AA26D49C7FCA22D1C7E9932>44 D<D803F8EB01F8D807FEEB0F
FE3A1E3F801C033B3807C03001803A2003E06000486C6C481340903800F98000C0017FC7
1220487F143E806E7E141F6F13600040D933E01340EC61F06CD9C0F813803A3001807C03
3B1807003F8F00D80FFEEB0FFCD803F0EB03F82B157D9432>49 D<EB1FFF137F3801E000
EA03800006C7FC5A5A5AA25AA35AA2B6FCA200C0C7FCA21260A37EA27E7E7E6C7EEA01E0
38007FFF131F181E7C9A21>I<1403A21406A2140CA21418A21430A21460A214C0A3EB01
80A2EB0300A21306A25BA25BA25BA25BA25BA2485AA248C7FCA31206A25AA25AA25AA25A
A25A1240183079A300>54 D<EC07C0000FEB3FE03810C0F9392061C1F038607300D84036
7F013C1378157C0060143C0020143E0010141E001880120C0004EC0780D8063EEB0F0000
02143C15F090383FFFC092C7FC38423E0F124612446E7EEA383C1200A6EA703812E00020
1483D81030138690386003CC39084001F839078000F021257EA324>60
D<EA01FC38060780381803E0382001F0486C7E147C487FEC1E02140FEC078CEC01F091C7
FC1240A26CEB01F00018EB07080006EB0F043901E00E02C7121E1500A280A2EC0780EC03
C0A200FCEB01E0121FEA0780EA03E0EA00F090387803C090383C078090381F1F00EB07FC
1F237DA224>I<143F903801FF80010713C0EB0E07EB30030160138013C038018007D803
001300481306000E130E141848131091C7FC123C1238A212781270A212F0A76C13031406
007C5B5C6C5B383F80C06CB45A6C48C7FCEA03F81A2480A21A>67
D<0218151002781530186014F818E017016E1403EF07C002BC140FEB013C171F173B023E
1473010215E3021E01011380EE03C301041587021FEB0707160E496C131C1638DB807813
00011014F091390781E00FED83C00120EBC780EDCF0090384003FE5D9038C001F801805B
00616D5A007FC75A4891C713F04817E0EF0780003C93C7FC34257EA23C>77
D<90380181F890380207FE90380C0FFF903910303F80903960600FC09038C0C007D80181
13032603038013E000071300D80E071301130E121C131848C7FCA21278007015C0A200F0
14031680A2150716001506150E6C5C151800785C007C5C007E5C6C495A261F8006C7FC38
0FE03C3807FFF06C13C0C648C8FC23247DA228>79 D<EC1FC0ECFFF04913F890380701FC
90380C007C49133C5B0170133801F013201500A27F7F137E6D7EEB1FE0EB0FF8EB03FCEB
00FE143FEC1F80EC0FC00006130748130312385A158012F0EC07006C13065C007E5B387F
80F0383FFFC0000F90C7FCEA03F81E247FA21E>83 D<0040144000C014C0B3A40060EB01
80A26CEB03006C1306000E131C380780783801FFE038007F801A1F7D9D21>91
D<EB03C0EB1E0013385B5BB1485A485A000FC7FC12F8120FEA03806C7E6C7EB113707F13
1EEB03C012317DA419>102 D<12F8120FEA03806C7E6C7EB113707F131EEB03C0EB1E00
13385B5BB1485A485A000FC7FC12F812317DA419>I<1320136013C0A3EA0180A3EA0300
A21206A35AA35AA25AA35AA35AA21260A37EA37EA27EA37EA37EA2EA0180A3EA00C0A313
6013200B327CA413>I<12C0A21260A37EA37EA27EA37EA37EA2EA0180A3EA00C0A31360
A213C0A3EA0180A3EA0300A21206A35AA35AA25AA35AA35AA20B327DA413>I<12C0B3B3
AD02317AA40E>I<160116031606A2160CA21618A21630A21660A216C0A2ED0180A2ED03
00A21506A25DA25DA25D1206001E5C122F004F5CEA87800007495AEA03C04AC7FCA23801
E006A26C6C5AA2EB7818A26D5AA26D5AA26D5AA26D5AA26DC8FCA228327D812A>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmmi12 12 65
/Ft 65 126 df<133FEBE180390380E0203907006040000E1370481330003CEB3880A248
EB3900A2143A5A143C1438A212701478003013B83938031840D81C1C13803907E007001B
157E941F>11 D<147CEB018390380201801304010813C013101320A213401580EB800315
005C38010006EB07ECEB0830EB0FCC3802000C80A214075AA448130EA35C001813180014
5B5C00125B38210380D820FCC7FC90C8FCA25AA45AA41A2D7FA21C>I<3801E001EA07F8
380FFC02121F38300E04EA600638400308EA8001A200001310EB009014A0A314C0A31480
A31301A3EB0300A41306A31304A218207F9419>I<EB0F80EB3FF013401460EBC000A413
60A21370A27FA27F133E13CEEA038FEA0607120C001C1380123813031270A300E013005B
A21306EA600E130C12305BEA1C30EA07C014247EA316>I<137EEA0380EA0700120E5A5A
12781270EAFFF0EAF000A25AA51270A2EA3806EA1C18EA07E00F157D9414>I<13085BA3
EB0FE0EB1820EB27C0EB40005B48C7FC120212061204120C5A12101230A25AA35AA97E7E
1278123FEA1FE0EA0FF8EA01FCEA003C130EA2130CA212046C5AEA01E0132D7DA215>I<
383C07C038461860384720303887403813801300A2000E1370A44813E0A4383801C0A438
70038012301200A2EB0700A4130EA4130C15207E9418>I<130FEB3180EB60C013E03801
C0E013801203EA0700A25A120E121EA2EA1C01123CA3387FFFC0EA7803A33870078012F0
14005B130EA2485A12605BEA70305BEA30C0EA1180000FC7FC13237EA217>I<EA03806C
7E6C7E7F1370A213781338A2133C131CA2131E130EA2130F7FA21480A2130FEB1BC01331
1361EBC1E0EA01C0EA0380EA0700000E13705A5A007813784813385A48131C16237DA21C
>21 D<EBC0060001130EA248485AA448485AA4000E5BA31580001EEBE100A21301EB0262
EA3B0C3839F03C0038C8FCA25AA45AA45A19207F941D>I<00071306007F130E120F000E
131CA214181438481330147014E014C038380180EB030013065B485A5B13C0EA738000EC
C7FC12F017157E9418>I<13085BA3EB0FE0EB7820EBE7C03801C000485A120748C7FCA3
120EA2120FA2EA077EEA0381EA06FE48C7FC5A5A12201260124012C0A57EA21278123FEA
1FC0EA0FF8EA01FCEA007E130E1306A2EA0404EA030CEA00F0132D7EA215>I<000FB5FC
5A5A3870418000401300EA8081A21200EA01831303A21203A21206A2120EA2000C138012
1CA2EA180118157E941C>I<90387FFF8048B5FC5A390783C000EA0E01486C7E5AA25AA3
48485AA3495A91C7FCEA6007130EEA3018EA1870EA07C019157E941C>27
D<380FFFF84813FC4813F8387020001240128013601200A25BA412015BA21203A348C7FC
7E16157E9415>I<14105CA45CA45CA449C7FCEB0FE0EB711C3801C10638030203000E14
80001C1301001814C0EA38041270A339E0080380A2EC070012603870100E00305B5C001C
13E038062380D801FEC7FCEA0020A25BA45BA41A2D7EA21D>30 D<1408A25CA45CA45CA4
001EEB80E000231381D8438013F0148039838100701530EA870100071420EA0E02A3001C
14405B1580EC01001402495A000E5B00065B380388E0C6B4C7FC1310A35BA45BA31C2D7E
A220>32 D<00041470000C14F0000814F84814781538481418A2D840031310A21306A215
20EAC004010C1360010E13C0131E39E0770380397FE3FF005C383F81FC6CC65A1D158094
1E>I<127012F8A3127005057C840E>58 D<127012F812FCA212741204A41208A21210A2
12201240060F7C840E>I<15181578EC01E0EC0780EC1E001478EB03E0EB0F80013CC7FC
13F0EA03C0000FC8FC123C12F0A2123C120FEA03C0EA00F0133CEB0F80EB03E0EB007814
1EEC0780EC01E0EC007815181D1C7C9926>I<14801301A2EB0300A31306A35BA35BA35B
A35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA311317DA418>I<12C012F0
123C120FEA03C0EA00F0133EEB0F80EB01E0EB0078141EEC0780EC01E0EC0078A2EC01E0
EC0780EC1E001478EB01E0EB0F80013EC7FC13F0EA03C0000FC8FC123C12F012C01D1C7C
9926>I<EB0FC0EB3030EB4018497E48487EEBC007120380D801801380C7FCA4EB1F87EB
70473801C02738038017EA0700000EEB1F00121E121C123C0038131E1278A25C5A143814
78147000705BA2495A6C485AD81807C7FCEA0C1CEA03F019257EA31A>64
D<8114018114031407A2140BA2141314331423EC43E0A21481EB0101A21302A213041308
A201107FEB1FFFEB20005BA25BA248C7FC120281481478120C001E14F83AFF800FFF8021
237EA225>I<90B512F090380F001E81ED0780011E1303A216C0A24914801507A2ED0F00
49131E5D5DEC03E090B55A9038F000F0157881485A151C151EA248485BA35D485A5D4A5A
EC0380000F010FC7FCB512F822227DA125>I<027F138090390380810090380E00630138
132749131F49130E485A485A48C7FC481404120E121E5A5D4891C7FCA35AA55A1520A25D
A26C5C12704AC7FC6C130200185B001C5B00061330380381C0D800FEC8FC21247DA223>
I<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35BA449EB03C0A44848
EB0780A216005D4848130E5D153C153848485B5D4A5A0207C7FC000F131CB512F023227D
A128>I<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB7802A2140614
0EEBFFFCEBF00CA33801E008A21502EC0004485AA25D15184848131015305D15E0000F13
07B65A21227DA124>I<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB
7802A21406140EEBFFFCEBF00CA33801E008A391C8FC485AA4485AA4120FEAFFFC21227D
A120>I<027F1340903903C0C08090380E00214913130170130F49EB0700485A485A48C7
FC481402120E121E5A5D4891C7FCA35AA4EC3FFF48EB00F0A34A5A7EA212704A5A7E0018
13076C13096CEB1180380380E0D8007FC8FC22247DA226>I<EBFFF8EB0F00A3131EA45B
A45BA45BA4485AA4485AA4485AA4120FEAFFF815227DA116>73 D<9039FFF801FF010FC7
1278166016C0011EEB010015025D5D4913205D5D0202C7FC495A5C141C147CEBF0BEEBF1
1E13F2EBF80FEA01F001E07F1407A248486C7EA36E7EEA0780811400A2000F497E39FFF8
0FFF28227DA129>75 D<EBFFFCEB0F8091C7FCA2131EA45BA45BA45BA4485AA21520A248
481340A21580A23807800115005C140F000F133EB512FE1B227DA121>I<D9FF80EB03FE
010FEC07C0160BA2D913C0EB1780A2162716470123EC4F00168FA2ED010F0143EB021EEB
41E01504150801815C1510A21520D80101495AEB00F01580ECF10000025D14F2A214F448
9038F801E0A21470120C001EEB60033AFFC0403FFE2F227DA12F>I<9039FF8007FE010F
EB00F016C0D90BC0134001131480A2EB11E0A2903921F001001320A2147801401302147C
143CA2496C5AA3140FD801005B15881407A20002EB03D0A215F01401485C1400A2120C00
1E1440EAFFC027227DA127>I<90B512E090380F0038151E150E011E1307A449130FA315
1E5B153C157815E09038F003C09038FFFE0001F0C7FCA2485AA4485AA4485AA4120FEAFF
F820227DA11F>80 D<903803F81090380E0420903818026090382001E0EB400001C013C0
5B1201A200031480A21500A27FEA01F013FE3800FFE06D7EEB1FF8EB01FCEB003C141C80
A30020130CA3140800601318141000705B5C00C85BD8C603C7FCEA81FC1C247DA21E>83
D<001FB512FE391E01E00E001814061230382003C0A200401404A2EB07801280A2000014
0049C7FCA4131EA45BA45BA45BA41201387FFFC01F227EA11D>I<3A3FFE01FF803A03C0
003C001530151048485BA448C75AA4001E5CA44849C7FCA4481302A400705B12F05C1270
5C5C6C5B5C6C48C8FCEA0606EA01F821237DA121>I<90387FFFFE90387E001E0170133C
4913784913F090388001E000011303010013C0EC07800002EB0F00141EC75A147C14785C
495A495A495A130F91C7FC131E4913205B49134012015B48481380485A380F0001001EEB
03005C485B48137EB512FE1F227DA121>90 D<EB78603801C4E0EA0302380601C0120E12
1C123C383803801278A338F00700A31408EB0E101270131E38302620EA18C6380F03C015
157E941A>97 D<EA03C0EA3F801203A348C7FCA4120EA45A137CEA1D86EA1E03003C1380
123814C0A21270A438E00780A3EB0F00130EEA601CA2EA3030EA18E0EA0F8012237EA215
>I<133FEBE080380380C0EA0701EA0E03121C003CC7FCA25AA35AA400701340A2383001
8038380200EA1C1CEA07E012157E9415>I<141E14FC141CA31438A41470A414E01378EA
01C4EA0302380601C0120E121C123C383803801278A338F00700A31408EB0E101270131E
38302620EA18C6380F03C017237EA219>I<137EEA038138070080120E5A5A38780100EA
7006EAFFF800F0C7FCA25AA41480A238700300EA3004EA1838EA0FC011157D9417>I<14
1EEC638014C71301ECC30014801303A449C7FCA4EBFFF8010EC7FCA65BA55BA55BA41360
13E0A25BA21271EAF18090C8FC1262123C192D7EA218>I<EB0F86EB384EEB602EEBE03C
3801C01CEA03801207EB00385AA3001E1370A414E0120E1301EA060238030DC0EA01F1EA
0001A2EB0380A338700700EAF0065BEA6038EA3FE0171F809417>I<13E0A21201EA00C0
1300A9121E1223EA4380A21283EA8700A21207120EA35AA3EA38201340127013801230EA
3100121E0B227EA111>105 D<147014F0A214601400A9130FEB3180EB41C01381A2EA01
01A238000380A4EB0700A4130EA45BA45BA3EA7070EAF0605BEA6380003EC7FC142C81A1
14>I<13F0EA0FE01200A3485AA4485AA448C7FC1478EB0184EB021C380E0C3C1310EB20
18EB4000485A001FC7FC13E0EA1C38487EA27F140838701C10A3EB0C20EAE006386003C0
16237EA219>I<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA31380EA
E100A31262A2123C0B237EA20F>I<393C07E01F3A46183061803A47201880C03A87401D
00E0EB801E141C1300000E90383801C0A4489038700380A2ED070016044801E01308150E
A2ED0610267001C01320D83000EB03C026157E942B>I<383C07C0384618603847203038
87403813801300A2000E1370A44813E0A2EB01C014C1003813C2EB038214841301007013
88383000F018157E941D>I<133EEBC180380380C0380700E0120E4813F0123CA25AA338
F001E0A214C0130300701380EB07001306EA381C6C5AEA07E014157E9417>I<3803C0F0
3804631CEB740EEA0878EB7007A2140FEA00E0A43801C01EA3143C38038038A2EBC07014
E038072180EB1E0090C7FCA2120EA45AA3B47E181F819418>I<EB7C103801C230380301
7000071360380E00E05A123C383801C01278A338F00380A4EB070012705BEA3017EA186E
EA0F8EEA000EA25BA45BA33803FF80141F7E9416>I<EA3C0F384630C0EA4741EA8783A2
EB018090C7FC120EA45AA45AA45A123012157E9416>I<137E138138030080EA0201EA06
03140090C7FC120713F0EA03FC6CB4FCEA003FEB07801303127000F01300A2EAE002EA40
04EA3018EA0FE011157E9417>I<136013E0A4EA01C0A4EA0380EAFFFCEA0380A2EA0700
A4120EA45AA31308EA3810A21320EA184013C0EA0F000E1F7F9E12>I<001E1318002313
38EA438014701283A2EA8700000713E0120EA3381C01C0A314C2EB0384A21307380C0988
EA0E113803E0F017157E941C>I<3801E0F03806310C38081A1C0010133CEA201C141814
00C65AA45BA314083860E01012F0142038E1704038423080383C1F0016157E941C>120
D<001E131800231338EA438014701283EA8700A2000713E0120EA3381C01C0A4EB0380A2
1307EA0C0B380E1700EA03E7EA0007A2130E1260EAF01C1318485AEA8060EA41C0003FC7
FC151F7E9418>I<EBE0103803F0203807F86038060FC038080080EB0100EA00025B5B5B
5B13C048C7FC1202481340481380EA1001383F8300EA61FEEA40FCEA807814157E9417>
I<120312044813FC3810030638300C033920100180EA6020014013C0EAC080EAC10012C2
12C4EC038012C812E800F0EB070014063878300E383C201C5C385E1060384F0F80D84780
C7FC124312831281A30083C8FCA21286128C12701A217C951F>125
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmmi9 9 37
/Fu 37 121 df<EA01F038070C08380C0E10EA1807123000701320126000E01340A21480
1400A3EA601B383063A0380F81C015107F8F19>11 D<EB07C0EB1860EB2030EB40181380
1438EA0100A2000213301460EB3EC0EB218038043EC0130014E0A25AA4381801C0148013
0338140700EA261CEA21F00020C7FCA25AA45A1521809916>I<000F1340383F8080EA7F
C0387BC100EAC061EA802212001314A21318A31310A31330A35BA4134012177E8F14>I<
EA01F0EA0600121C5A5AA2EAFFC0EAE000A51260EA3008EA1830EA0FC00D107F8F10>15
D<EA703EEA58C7389D0380129E129CA238380700A4EA700EA4485A12601200A25BA41330
11177E8F13>17 D<1340A3137EEA01C2EA033EEA0700120E5AA5EA0DF0EA0608EA0BF0EA
100012305AA25AA27E7E127C123FEA1FE0EA07F0EA01F8EA00381318EA0630EA01E00F21
7F9911>24 D<381FFFE05A4813C038410800EA8218EA02101206A21204EA0C38A2121C12
18EA383C131CEA301813107E8F16>I<381FFF805A481300EA408012801201A348C7FCA3
5AA3120E120611107E8F11>28 D<001813304813381220006013181240133000801310A2
13601430142038C0E06038F7F9C038FF3F80127E383C0E0015107F8F18>33
D<126012F0A212701210A31220A21240A2040B7D830B>59 D<1406141E1478EB01E0EB07
80EB1E00133813E0EA03C0000FC7FC123C12F0A2123C120FEA03C0C67E1338131EEB0780
EB01E0EB0078141E140617187D941E>I<1304130C1318A31330A31360A313C0A3EA0180
A3EA0300A31206A35AA35AA35AA35AA35AA20E257E9B13>I<7FA5487EA238F9CF80383F
FE00EA0FF8EA03E0A2EA0770EA0630487EEA0808487E11117F9113>63
D<3803FFFC38007007EC0380EC01C09038E000E0A315F0485AA439038001E0A315C03807
0003A21580EC0700000E130E141E14385C48485AB5C7FC1C1A7E9920>68
D<0003B512C038007001140015405BA43901C02000A3146048B45A13801440A248485A14
01A21402120E14061404140C481338B512F81A1A7E991C>I<903807E04090383C18C0EB
E0053801C0033903800180EA0700120E5A003C14001238007890C7FCA25AA3903801FF80
9038001C00A400705B123012386C1378380703903801FC101A1A7E991E>71
D<3903F001FE39007800701520135C019C1340138EA3D801071380A2EB0380A2390201C1
00A3EB00E14813E21472A2143A48133CA2141C121800381308B4FC1F1A7E991F>78
D<3803FFF83800700FEC0780140301E013C0A43901C007801500141E14783803FFC0EB80
60801438EA0700A4000E1378A21540158048133C39FFC01F001A1A7E991D>82
D<397FE03FC0390E000E001404A2485BA4485BA4485BA4485BA35CA249C7FCEA60026C5A
EA1818EA07E01A1A7E991A>85 D<0003B5FCEBC007EB000E0002131C0006133800041370
14E0EB01C01200EB0380EB0700130E5B5B13781370EBE010EA01C0EA038038070020120E
001E1360001C13C0EA380138700780B5FC181A7E991A>90 D<EA03E6EA0617EA1C0E1238
12301270EA601C12E0A3133912C012E0EA6079EA219AEA1E0E10107F8F14>97
D<127E120EA35AA45AA2EA39E0EA3E10EA7818EA701C130C131C12E0A313181338EAC030
EAE070EA60E0EA2180EA1F000E1A7F9910>I<EA01F0EA070C120CEA181CEA3008EA7000
126012E0A413041308EA6010EA3060EA0F800E107F8F11>I<EB0FC01301A3EB0380A4EB
0700A2EA03E7EA0617EA1C0E123812301270EA601C12E0A3133912C012E0EA6079EA219A
EA1E0E121A7F9914>I<EA01F0EA0608EA1C04123812701308EAFFF0EAE000A41304EA60
081310EA3060EA0F800E107F8F12>I<EB07C0EB0C60EB1CE0EB18C0EB3800A45BA2EA07
FFEA0070A25BA5485AA6485AA390C7FCA2126712E65A127813217E9913>I<1203138013
00C7FCA7123C124EA2128EA2129C121CA25AA212391271A21272A2123C091A7E990D>
105 D<1302130713061300A71370EA0198EA021CA21204A2EA0038A41370A413E0A4EA01
C01261EAE380EAC700127C1021809910>I<EA1F801203A348C7FCA4120EA21307EB1980
EA1C231341EB8000001DC7FC123EEA3FC0EA38E01370EA7071A31372EAE032EA601C111A
7F9914>I<39383E0F80394CC330C0398F03C0E0A2008E1380A2391C0701C0A3EC0380D8
380E1388A2EC0708151039701C032039300C01C01D107E8F22>109
D<EA703EEA58C7389D0380129E129CA238380700A3130E00701340A2131C1480EAE00C38
60070012107E8F17>I<38070780380598403809E060EBC07014301470EA0380A3146038
0700E014C01301EB0380380E8600137C90C7FCA25AA4B4FC1417828F13>112
D<EA30F0EA5918EA9E38EA9C181300A25AA45AA45A12600D107E8F11>114
D<EA03E0EA06181208EA18381330EA1C00EA1FC0EA0FE0EA07F0EA0070133012E0A2EA80
60EA40C0EA3F000D107E8F12>I<1206120EA45AA2EAFFE0EA1C005AA45AA4EAE080A2EA
E100A2126612380B177E960E>I<EA3803004C1380384E0700128E129CA2EA1C0E1238A3
38701C80A3EA303C38184D00EA0F8711107E8F16>I<380787803808C8C0EA10F1EA20E0
1400A2EA01C0A4EA0381A212C3EAE582EAC584EA787812107F8F16>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmti12 12 61
/Fv 61 123 df<EC0FF0EC380CEC600EECC01E1301EC801C01031300A349C7FCA590B512
F090380E0070A215E0A25BA2EC01C0A31338EC0380A315889038700710A4EC03209038E0
01C091C7FCA25BA21201EA718012F100F3C8FC1262123C1F2D82A21B>12
D<91380FF3809138383F00EC607F14C001011337EC800E1303A35DEB0700A35D90B512F8
90380E0038A25DA35B5DA449485AA315C24A5A1370A215881401EC00F04990C7FCA35BA2
1271EAF18090C9FC1262123C212D82A21D>I<EA018012031207EA0E00120C5A5A5A5A09
096FA219>19 D<120C121E123FA2121D1202A31204A212081210122012401280080F75A2
0F>39 D<1480EB010013025B5B5B13305B5BA2485A48C7FCA21206A2120E120C121C1218
A212381230A21270A21260A212E0A35AAD12401260A21220123012107E113278A414>I<
13087F130613021303A27F1480AD1303A31400A25BA21306A2130E130CA2131C13181338
1330A25BA25B485AA248C7FC120612045A5A5A5A5A113280A414>I<120E121EA41202A2
1204A21208A21210122012401280070F7D840F>44 D<EAFFF0A213E00C037C8B11>I<12
7012F8A212F012E005057A840F>I<EB0F80EB30C0EBE0603801C070EA038013005A5A12
0E121EA2001C13F0123CA3387801E0A438F003C0A31480EAE007A214005B130E5BA25BEA
60706C5A001FC7FC14227AA019>48 D<13011303A21306131E132EEA03CEEA001CA41338
A41370A413E0A4EA01C0A4EA0380A41207EAFFFC10217AA019>I<EB0FC0EB1060EB6038
EB8018141CEA01003802201E13101204A33808203CA2EB40381478EB80F0380700E03800
01C0EB030013061318132013C048C7FC1202481310481330481320481360385F80C0EA63
FF0040138038807F00131E17227CA019>I<EB0FC0EB3070EBC0183801001C120248130C
EB401CEA0820A3EB403813C038070070C71260EB01C0EB070013FC1307EB0380A2EB01C0
A31303126012F01480EAE00700801300130E5BEA4038EA20F0EA1F8016227BA019>I<14
181438A21470A314E0A314C01301148013031400A21306A25BA25B1310EB3180EB61C0EB
438013831201EA03033802070012041208EA3FC7EA403E38800FF038000E00A25BA45BA3
1330152B7EA019>I<EB4004EB7038EBFFF014E0EBBF80EB800048C7FCA41202A2133E13
C338050180000613C01204000013E0A6387003C012F0A238E00780008013005B130EEA40
1C5BEA30E0EA0F8016227BA019>I<380278023804FC041207000F1308EB0C18381E0470
381803A03830006000201340006013C000401380EA8001EA000314005B1306130EA25BA2
133C13381378A25BA3485AA312035BA26C5A172279A019>55 D<001FB6FCA2C9FCA8B612
F8A2200C7B9125>61 D<1403A25CA25CA25C142FA2EC4F80A21487A2EB01071302A21304
A21308131813101320A290387FFFC0EB40031380EA0100A21202A25AA2120C003CEB07E0
B4EB3FFC1E237DA224>65 D<90B512E090380F0038151C151E011E130E150FA349130E15
1EA2153C4913781570EC01E0EC078090B5FC9038F001E0EC00F01578485A1538153CA248
481378A315F0485AEC01E0EC03C0EC0700380F001EB512F020227DA122>I<027F138090
390380810090380E00630138132749131F49130E485A485A48C7FC481404120E121E5A5D
4891C7FCA35AA55A1520A25DA26C5C12704AC7FC6C130200185B001C5B00061330380381
C0D800FEC8FC212479A223>I<90B512F090380F003C150E81011EEB0380A2ED01C0A25B
16E0A35BA449EB03C0A44848EB0780A216005D4848130E5D153C153848485B5DEC03804A
C7FC000F131CB512F023227DA125>I<90B6128090380F00071501A2131EA21600A25BA2
140192C7FCEB7802A21406140EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248
485B15605D1401380F0007B65A21227DA121>I<90B6FC90380F000F1503A2131EA21502
A25BA214011500EB7802A21406140EEBFFFCEBF00CA33801E008A391C7FC485AA4485AA4
120FEAFFF820227DA120>I<027F138090390380810090380E00630138132749131F4913
0E485A485A48C7FC481404120E121E5A5D4891C7FCA35AA4EC3FFC48EB01E0A34A5AA27E
12704A5A7E0018130F001C131300060123C7FC380381C1D800FEC8FC212479A226>I<90
39FFF87FFC90390F000780A3011EEB0F00A449131EA4495BA490B512F89038F00078A348
485BA44848485AA44848485AA4000F130739FFF07FF826227DA124>I<EBFFF8EB0F00A3
131EA45BA45BA45BA4485AA4485AA4485AA4120FEAFFF015227DA113>I<EBFFFCEB0F80
91C7FCA2131EA45BA45BA45BA4485AA21520A248481340A21580A23807800115005C140F
000F133EB512FE1B227DA11F>76 D<D9FF80EB07FC010FEC0F801617A20117EC2F00EB13
C0164F168F0123149EED011EA215020143495AA21508EB41E00181495A1520A21540D801
015C1580ECE100A23A0200F201E0A214F414F8484A5A14F0A2000C13E0001EEBC007D8FF
80EB7FF82E227DA12C>I<01FFEB0FFC90390F8001E01680ECC0000113EB0100A2EB11E0
A201211302EB20F0A39038407804A3143C01805B143E141EA23901001F10140FA2EC0790
000214A0A2EC03E0A2485C1401A2120C001E6D5AB47E26227DA124>I<90B512E090380F
0038151E150E011E1307A449130FA3151E5B153C157815E09038F003C09038FFFE0001F0
C7FCA2485AA4485AA4485AA4120FEAFFF020227DA121>80 D<14FE903807838090380C00
E0013813704913385B4848133C4848131C48C7FC48141E121EA25AA25AA348143CA31538
15785A15F0A2EC01E015C01403D8F01E13803970610700EB810E00385B001C5B000E13E0
39078380403801FD00EA0001EC808014811500EB0387EB01FEA25CEB00F01F2D79A225>
I<90B512C090380F0070153C151C011E130EA2150FA249131EA3153C4913381570EC01E0
EC07809038FFFC00EBF00E80EC0380D801E013C0A43903C00780A43907800F001501A2EC
0702120F39FFF0038CC812F020237DA124>I<903801F02090380E0C4090381802C0EB30
01136001E0138013C01201A200031400A291C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB
03FCEB007C143C80A30020131CA3141800601338143000705B5C38C80180D8C607C7FCEA
81FC1B247DA21B>I<001FB512F8391E03C03800181418123038200780A200401410A2EB
0F001280A200001400131EA45BA45BA45BA4485AA41203B5FC1D2277A123>I<3BFFE07F
F00FF83B1F000F8003C0001E913800018017001602A2001F5DA26C495BA2022F5BA29138
4F802002475B14875EEB010701030181C7FC130201041382A201081384158C0110138815
90132001A013A013C0D8078013C0A201005BA2000691C8FC140212042D2376A131>87
D<D8FFF013FF001FC712786C143015407F00071480EC0100EBC0020003130614046D5A00
015B5C13F05C00005B01F9C7FC13FB137A137C1378A45BA4485AA4485AEA3FFC202276A1
24>89 D<EBF8C0EA0185EA0705380E0380A2121C123C383807001278A3EAF00EA31410EB
1C201270133C38305C40138C380F078014157B9419>97 D<EA03C0EA1F801203A3EA0700
A4120EA45A13F8EA1D0CEA1E0EEA3C06EA3807A2130F1270A4EAE01EA3133C1338A2EA60
7013E0EA31C0EA1F0010237BA216>I<137EEA01C138030180EA0703EA0E07121C003CC7
FC12381278A35AA45B12701302EA300CEA1830EA0FC011157B9416>I<143CEB03F8EB00
38A31470A414E0A4EB01C013F9EA0185EA0705380E0380A2121C123C383807001278A3EA
F00EA31410EB1C201270133C38305C40138C380F078016237BA219>I<13F8EA0384EA0E
02121C123C1238EA7804EAF018EAFFE0EAF000A25AA41302A2EA6004EA7018EA3060EA0F
800F157A9416>I<143E144714CFEB018F1486EB0380A3EB0700A5130EEBFFF0EB0E00A3
5BA55BA55BA55BA45B1201A2EA718012F100F3C7FC1262123C182D82A20F>I<EB1F18EB
30B813E03801C070A2EA03801207EB00E05AA3381E01C0A4EB0380120E1307EA060BEB17
00EA01E7EA0007A2130EA3EA701CEAF0185BEA60E0EA3F80151F7E9416>I<13F0EA0FE0
1200A3485AA4485AA448C7FC131FEB2180EBC0C0380F00E0A2120EA2381C01C0A4383803
80A3EB070400701308130E1410130600E01320386003C016237DA219>I<13C0EA01E013
C0A2C7FCA8121E12231243A25AA3120EA25AA35AA21340EA7080A3EA71001232121C0B21
7BA00F>I<13F0EA07E01200A3485AA4485AA448C7FCEB01E0EB0210EB0470380E08F013
10EB2060EB4000EA1D80001EC7FCEA1FC0EA1C70487EA27F142038703840A3EB188012E0
38600F0014237DA216>107 D<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45A
A45AA3127112E2A4126412380B237CA20C>I<391C0F80F8392610C10C39476066063987
807807A2EB0070A2000EEBE00EA44848485AA3ED38202638038013401570168015303A70
07003100D83003131E23157B9428>I<38380F80384C30C0384E4060388E8070EA8F0012
8EA24813E0A4383801C0A3EB03840070138814081307EB031012E0386001E016157B941B
>I<137EEA01C338038180380701C0120E001C13E0123C12381278A338F003C0A2148013
0700701300130E130CEA3018EA1870EA07C013157B9419>I<3801C1F038026218380474
1C3808780CEB700EA2141EEA00E0A43801C03CA3147838038070A2EBC0E0EBC1C0380723
80EB1E0090C7FCA2120EA45AA3EAFFC0171F7F9419>I<EBF840380184C0EA0705380E03
80A2121C123C383807001278A3EAF00EA45B1270133CEA305C5BEA0F381200A25BA45BA3
EA0FFC121F7B9416>I<EA1C1F38262080384741C0EA87831303EB018090C7FC120EA45A
A45AA45A123012157B9415>I<13FCEA018338020080EA0401EA0C03140090C7FC120F13
F0EA07FC6C7EEA003E130F7F1270EAF006A2EAE004EA4008EA2030EA1FC011157D9414>
I<13C01201A4EA0380A4EA0700EAFFF8EA0700A2120EA45AA45AA31310EA7020A2134013
80EA3100121E0D1F7C9E10>I<001E1360002313E0EA4380EB81C01283EA8701A2380703
80120EA3381C0700A31408EB0E101218121CEB1E20EA0C263807C3C015157B941A>I<38
1C0180382603C0EA47071303EA8701EA8E00A2000E13805AA338380100A31302A25B5B12
18EA0C30EA07C012157B9416>I<001EEB60E00023EBE0F0384380E1EB81C000831470D8
87011330A23907038020120EA3391C070040A31580A2EC0100130F380C0B023806138438
03E0F81C157B9420>I<3803C1E0380462103808347038103CF0EA203814601400C65AA4
5BA314203861C04012F1148038E2C100EA4462EA383C14157D9416>I<001E1330002313
70EA438014E01283EA8700A2380701C0120EA3381C0380A4EB0700A35BEA0C3EEA03CEEA
000EA25B1260EAF0381330485AEA80C0EA4380003EC7FC141F7B9418>I<3801E0203803
F0603807F8C038041F80380801001302C65A5B5B5B5B5B48C7FC12024813803808010048
5AEA3F06EA61FEEA40FCEA807013157D9414>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmcsc10 12 16
/Fw 16 115 df<127012F8A3127005057A8410>46 D<1340EA01C0120712FF12F91201B3
A8387FFF80A211217AA01C>49 D<EA03F8EA0FFE38181F80382007C0EA4003EB01E012F8
00FC13F01300A21278EA3001000013E0A2130314C0EB07801400130E5B5B5B5B138048C7
FC000213105A5A481330481320387FFFE0B5FCA214217CA01C>I<13FCEA07FF380E07C0
381801E0121C003E13F01300A2EA1E01120C000013E014C01303EB0700130EEA01FE3800
0780EB01C0EB00E014F01478147CA21230127812FCA214784813F8004013F0383001E038
1C07C0380FFF803801FC0016227DA01C>I<14C0A2130113031307130513091311133113
2113411381EA01011203120212041208121812101220124012C0B6FCA2380001C0A7EB3F
FEA218217EA01C>I<144014E0A3497EA2497EEB0278A2497EA3497EA2497EA3496C7EA2
01407F1403A290B57EA239018001F090C7FCA200021478A34880A2001E143E3AFFC003FF
E0A223237DA229>65 D<B512FCECFF8039078007E0EC01F0EC00F8A2157CA5157815F8EC
01F0EC03E0EC1F8090B5120090388003E0EC01F0EC00F8157C153C153EA5153C157C15F8
1401EC07E0B612C0ECFE001F227DA126>I<B612F0A238078001EC0070153015101518A2
1508A21410A21500A214301470EBFFF0A2EB807014301410A491C7FCA8EAFFFEA21D227D
A123>70 D<1304130EA3131FA2EB2F801327A2EB43C0A2EBC3E01381A248C67EA2487F13
FF38020078487FA3487F1218003C131F00FEEB7FE01B1A7F991F>97
D<B57E381E01E0EB0070808080A280A21580A81500A25C140E5C5C5C495AB51280191A7E
991F>100 D<B512F8381E007814181408140C1404A3EB0200A31306EA1FFEEA1E061302
A3EB0002A314061404A2140C143CB512FC171A7E991C>I<EAFFC0EA1E00B3A6EAFFC00A
1A7E990F>105 D<39FFC01FC0391E000F00140C5C14101460148049C7FC13025B130C13
1E133E134FEB8F80EA1F07381E03C08013016D7E80147880143E143F39FFC07FC01A1A7E
9920>107 D<EAFFE0001FC7FC121EAF1410A314301420146014E01301B5FC141A7E991A>
I<00FEEB3F80001FEB0E00EB80041217EA13C0EA11E013F012101378137C133C131E130F
14841307EB03C4EB01E4A2EB00F4147CA2143C141C140C123800FE1304191A7E991F>
110 D<EAFFFE381E03C0EB00E0801478A55C5CEB03C0D81FFEC7FC381E0380EB01E01300
80A615401470EC388039FFC01F001A1A7E991E>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr10 14.4 11
/Fx 11 85 df<13FE3807FF80380E07E0381803F0382001F8130048137CA200F8137E7E
143EA30078137EC7FC147CA214F8A2EB01F014E0EB03C0EB07801400130E5B5B5B13605B
38018002EA0300000613045A5A0010130C383FFFFC4813F8B5FCA217287DA71E>50
D<B712FEA27ECAFCA9007FB612FEB7FCA2270F7D952E>61 D<1418A3143CA2147EA314BF
149FA29038010F80A390380207C0A3496C7EA2010C7FEB0801A201107F1400A249137C90
383FFFFCA2903840003EA3497FA20001158090C7120FA2000215C015071207D81F80EB0F
E0D8FFF090B5FCA2282A7EA92D>65 D<B67E15F03907E000FC0003147E81ED1F80150F16
C0A61680151F1600153E5D4A5A90B512E09038E000F8153EED1F80150FED07C016E01503
16F0A6ED07E0A2ED0FC0ED1F80ED3F00000714FEB612F815E024297EA82A>I<02FF1310
0107EBE03090381FC07890393E000C7001F8EB06F0484813034848130148481300484814
70A248C812305A123E1610127EA2007C150012FCA9127C127E1610123EA2123F6C15206C
7E16606C6C14406C6C14806C6C13016C6CEB0300013E130E90381FC038903807FFE00100
1380242B7DA92B>I<B71280A23907E0001F00031407ED01C01500A21640A416205CA216
00A25CA2140F90B5FCA2EBE00F1403A2801610A391C7FC1620A41660A216E01501ED03C0
0007141FB7FCA224297EA829>69 D<B7FCA23907E0003F00031407ED03801501A21500A4
16405CA21600A25CA2140F90B5FCA2EBE00F1403A280A491C8FCAA487EB512C0A222297E
A827>I<D8FFE0EB1FFF7FD803F8EB01F00002EC00E0017C1440137E133E7F80130F6D7E
8013036D7E801300147C147E143E801580140FEC07C0EC03E0A2EC01F0EC00F8A2157C15
3EA2151FED0FC0A215071503A200071401486C1300EAFFF8164028297EA82D>78
D<B512FEECFFC03907E003F00003EB00FC153E8182150F82A65E4BC7FC151E5D15F8EC03
E0D9FFFEC8FC9038E00780EC01E06E7E1578157C153C153EA4153FA417801680151F486C
90380F8100B5388007C1ED03C2C912FC292A7EA82C>82 D<EBFE013803FF83380F81E338
1E003748131F00387F00787F127000F07FA3807EA26C90C7FC127E127FEA3FF0EA1FFE38
0FFFE06C13F86C7FC66C7EEB07FFEB007FEC1F80140FEC07C0A26C1303A47E1580A26C13
076C14006C130E00EE5B38C3C07838C1FFF038803FC01A2B7DA921>I<007FB612F8A239
7C007C00007015380060151800401508A200C0150CA2481504A5C71400B3A614FE90387F
FFFCA226297EA82B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmmi10 14.4 1
/Fy 1 79 df<D93FF8903807FFC08001009138007C00D9017E1430023E1420A28001025D
6E7EA281D904075CA26E7EA201086D48C7FC140115F81400491402157CA2157E49EB3E04
153F151FA249EB0F88A216C815074914F01503A2150148C75BA2481400487ED8FFF81440
A232297EA830>78 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz cmbx10 14.4 48
/Fz 48 122 df<49B4FC011F13C090387F80F09038FC00F83801F8010003497EEA07F0A3
6E5A6E5A92C7FCA4B612FCA33807F001B3A33A7FFF1FFFC0A3222A7FA926>12
D<903801FFFC131FEB7F81EBFC01EA01F81203EA07F0A9B6FCA33807F001B3A33A7FFF1F
FFC0A3222A7FA926>I<121C127FA2EAFF8013C0A2127FA2121C1200A2EA0180A3EA0300
A212065A5A5A12200A157B8813>44 D<121C123E127FEAFF80A3EA7F00123E121C09097B
8813>46 D<130E131E137EEA07FE12FFA212F81200B3AB387FFFFEA317277BA622>49
D<EBFF80000313F0000F13FC381F03FE383800FF007CEB7F8000FEEB3FC07E15E0141FA2
127E003C133FC7FC15C0A2EC7F80150014FE5C495A495A5CEB078049C7FC131E4913E013
705B3901C001C0EA0380EA070048B5FC5A5A5AB61280A31B277DA622>I<EB7F803803FF
F0487F380F81FEEA1F00486C7EEC7F80A3121FEA0F00C7EAFF00A25C495A5CEB07F0EBFF
C014F0EB01FC6D7E147F1580EC3FC0A215E0A2123C127EB4FCA215C0147F007E1480007C
1400383F01FE6CB45A000713F0C613801B277DA622>I<140E141E143E147E14FEA21301
1303EB077E130EA2131C1338137013E0A2EA01C0EA0380EA0700120EA25A5A5A5AB612F8
A3C7EAFE00A890383FFFF8A31D277EA622>I<00081303381F803FEBFFFE5C5C5C5C1480
49C7FC001CC8FCA6EB7FC0381DFFF8381F80FC381E003E0008133FC71380EC1FC0A215E0
A21218127C12FEA315C05A0078EB3F80A26CEB7F00381F01FE380FFFF800035BC613801B
277DA622>I<121C123E127FEAFF80A3EA7F00123E121CC7FCA9121C123E127FEAFF80A3
EA7F00123E121C091B7B9A13>58 D<EC03804A7EA24A7EA34A7EA24A7EA3EC73FCA2ECF3
FE14E101017F14C0A2010380EC807F010780EC003FA2010E6D7EA2011E80011C130F011F
B5FC4980A29039780007FC0170130301F080491301A2000181497F00031680D8FFFE011F
13FEA32F297EA834>65 D<B612FCEDFF80823A03F8001FF06F7E6F7E1503A2821501A315
035EA24B5A4B5A4B5AEDFFC090B548C7FCEDFFE09039F80007F0ED03FC6F7EA26F7EA217
80A617005D4B5A4B5AED1FF8B75A16C04BC7FC29297DA831>I<91393FF00180903903FF
FE03010FEBFF8790393FF007DF9039FF8001FF4848C7127F4848143FD807F0141F000F15
0F48481407A2485A1603127F5B93C7FC12FFA9127FA26DEC0380123FA26C7EEE07006C7E
0007150ED803FC141E6C6C5C6C6C6C13F890393FF007E0010FB55A010391C7FC9038003F
F829297CA832>I<B612F8EDFF8016E03A03FC001FF8ED07FCED01FE6F7EEE7F80EE3FC0
161F17E0A2EE0FF0A417F8AA17F0A3EE1FE0A217C0163FEE7F801700ED01FE4B5AED1FF8
B712E0168003FCC7FC2D297DA835>I<B712F0A33903FC000FED03F81501150016781638
A3EDE03C161CA302011300A2140790B5FCA3EBFC071401A202001307A3160E1500A2161E
A2161C163C167C16FC1501150FB712F8A328297EA82D>I<91393FF00180903903FFFE03
010FEBFF8790393FF007DF9039FF8001FF4848C7127F4848143FD807F0141F000F150F48
481407A2485A1603127F5B93C7FC12FFA892387FFFFC127FA26D9038007F80123FA26C7E
A26C7E6C7E6C7E6C7E6C6C6C13FF90393FF003DF010FB5128F010314079039003FF8012E
297CA836>71 D<B512FCA33801FE00B3B1B512FCA316297EA81A>73
D<D8FFFE92381FFFC0A26D5D0003EFF000A2D9BF801477A2D99FC014E7A2D98FE0EB01C7
A2D987F0EB0387A3D983F8EB0707A2D981FC130EA2D980FE131CA26E133880A291383F80
70A291381FC0E0A291380FE1C0A3913807F380A2913803FF00A26E5AA26E5AA2D8FFFE4A
B512C01578A23A297DA841>77 D<D8FFFCECFFFE7F7F00036DEB0380A2EBBFC0EB9FE080
EB8FF81387EB83FCEB81FE8001801380EC7FC0143FEC1FE0EC0FF015F8EC07FC1403EC01
FEEC00FF1683ED7FC3ED3FE3151FED0FF3ED07FB16FF818181167FA2163F161F160FD8FF
FE14071603A22F297DA836>I<B612F815FF16C03A03FC003FE0ED0FF0ED07F816FC1503
16FEA716FC150716F8ED0FF0ED3FE090B61280EDFE0001FCC8FCB0B512F0A327297DA82F
>80 D<ECFFE0010713FC90393FC07F8090397F001FC0D801FCEB07F048486D7E48486D7E
000F8148486D7EA24848EC7F80A2007F16C0A249143FA200FF16E0AA007F16C0A26D147F
003F1680A26C6CECFF00141F3A0FF03F81FE0007903860C1FC3A03F8C063F8D801FCEB37
F0D800FFEB3FE090393FE07F8090260FFFFEC7FC01001560EC001E151F92380F81E016FF
17C0A28117808117006F5AED00782B357CA834>I<B612E015FE6F7E3A03FC007FE0ED0F
F06F7E82150382A65E4B5AA2ED1FE0ED7FC090B500FEC7FC15F89038FC00FC157F6F7EA2
6F7E82A582A3170716F8150F0307130EB539F003FE1C923801FFF89238003FF030297DA8
34>I<90387F80603903FFF0E04813F9380F807F381F001F003E1307481303140112FCA2
14007EA26C140013C0EA7FFEEBFFE06C13FC6C7F6CEBFF806C14C07EC66C13E0010713F0
EB007FEC0FF8140714030060130112E0A36C14F0A26C13036C14E0B4EB07C09038E01F80
00F3B5120000E15B38C01FF01D297CA826>I<007FB712C0A39039803FC03FD87E001407
00781503A20070150100F016E0A2481500A5C71500B3A4017FB512E0A32B287EA730>I<
3B7FFFF80FFFF0A3000190C7EA78006C6D5B6D6C485A5E90383FE0036D6C485A6D6C48C7
FC150E903807FC1E6D6C5A5D903801FF706D13F06E5A5D6E7E6E7EA281814A7E147BECF1
FF02E07F010180903803C07F49486C7E4A6C7E5B011E6D7E496D7E01386D7E1378496D7E
48486D1380B5D8801F13FEA32F297EA834>88 D<3803FF80000F13F0381F01F8383F807E
A280D81F001380120EC7FCA3EB0FFF90B5FC3807FC3FEA0FE0EA3F8013005A12FEA4007E
137F007F13DF393F839FFC380FFF0F3801FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1
FE9038E7FF809038FE07E09038F801F0496C7E497F81157FA31680A71600A315FE5D6D48
5A6D485A90389E0FE090380FFF80260E01FCC7FC212A7EA926>I<EB3FF8EBFFFE3803F0
1F3907E03F80EA0FC0EA1F80003FEB1F00387F000E91C7FCA25AA77EA27F003FEB01C012
1F390FC003803907E007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EC3FF8A31403AC
EB1FE3EBFFFB3803F83F3807E00F380FC007381F8003123FEA7F00A35AA77EA3EA3F8012
1F000F13073807C00F3A03F03FFF803800FFF3EB3FC3212A7EA926>I<EB3FE03801FFF8
3803F07E3807C01FD80F801380001F130F003F14C0EA7F00140715E05AA290B5FCA290C8
FCA37EA36C6C13E0121F390FC001C03907E003803903F81F003800FFFEEB1FF01B1B7E9A
20>I<EB07F0EB3FFCEBFE3E3801F87F120313F01207143E1400A7B512C0A33807F000B3
A3387FFF80A3182A7EA915>I<9038FF81F00003EBE7F8390FC1FE7C381F80FC9038007C
3848EB7E1048EB7F00A66C137E6C137CEB80FC380FC1F8381FFFE0001813800038C8FCA2
123C123E383FFFF86C13FF15806C14C06C14E0001F14F0383C0007007CEB01F8481300A4
007CEB01F0003C14E0001FEB07C0390FC01F803903FFFE0038007FF01E287E9A22>I<EA
FFE0A3120FAC147F9038E1FFC09038E787E09038EE03F013F88113F0A213E0B03AFFFE3F
FF80A3212A7DA926>I<1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFF
E0A3120FB3A3EAFFFEA30F2B7DAA14>I<EAFFE0A3120FB3B2EAFFFEA30F2A7DA914>108
D<3BFFC07F800FF0903AC1FFE03FFC903AC383F0707E3B0FC603F8C07F903ACC01F9803F
01D8D9FF00138001F05BA201E05BB03CFFFE1FFFC3FFF8A3351B7D9A3A>I<38FFC07F90
38C1FFC09038C787E0390FCE03F013D88113F0A213E0B03AFFFE3FFF80A3211B7D9A26>
I<EB3FE03801FFFC3803F07E390FC01F80391F800FC0003F14E0EB00074814F0A34814F8
A86C14F0A2393F800FE0A2001F14C0390FC01F803907F07F003801FFFC38003FE01D1B7E
9A22>I<38FFE1FE9038E7FF809038FE07E0390FF803F0496C7E496C7E818181A21680A7
16005DA25D4A5A01F05B6D485A9038FE0FE09038EFFF80D9E1FCC7FC01E0C8FCA9EAFFFE
A321277E9A26>I<90381FC0389038FFF0783903F838F83807E00D380FC007121F383F80
03127FA213005AA77EA21380123F001F1307EA0FC03807E01F3803F03B3800FFF3EB3FC3
EB0003A991383FFF80A321277E9A24>I<38FFC1F0EBC7FCEBCE3E380FD87FA213F0143E
141CEBE000B0B5FCA3181B7E9A1C>I<3803FE30380FFFF0EA1E03EA380048137012F0A2
7E00FE1300EAFFE0EA7FFEEBFF806C13E06C13F0000713F8C6FCEB07FCEA600000E0137C
143C7E14387E6C137038FF01E038F7FFC000C11300161B7E9A1B>I<1370A413F0A31201
1203A21207381FFFF0B5FCA23807F000AD1438A61203EBF870000113603800FFC0EB1F80
15267FA51B>I<39FFE03FF8A3000F1303B214071207140F3A03F03BFF803801FFF33800
3FC3211B7D9A26>I<3AFFFE03FF80A33A0FF0007800000714706D13F000035CEBFC0100
015CA26C6C485AA2EBFF07017F90C7FC148FEB3F8E14CEEB1FDCA2EB0FF8A36D5AA26D5A
A26D5A211B7F9A24>I<3BFFFC3FFC0FFEA33B0FE007E000E03B07F003F001C0A29039F8
07F80300031680A23B01FC0EFC0700A291381EFE0F3A00FE1C7E0EA29039FF383F1E017F
141C147890393FF01FB8A29138E00FF8011F5CA26D486C5AA36D486C5AA22F1B7F9A32>
I<39FFFC0FFFA33907F003C0D803F85B3801FC076C6C48C7FCEBFF1E6D5AEB3FF86D5AA2
130F130780497E497E131EEB3C7F496C7E496C7ED801E07F3803C00F6E7E3AFFF01FFF80
A3211B7F9A24>I<3AFFFE03FF80A33A0FF0007800000714706D13F000035CEBFC010001
5CA26C6C485AA2EBFF07017F90C7FC148FEB3F8E14CEEB1FDCA2EB0FF8A36D5AA26D5AA2
6D5AA2495AA2EA3807007C90C8FCEAFE0F130E5B133CEA7C78EA3FE0EA0F8021277F9A24
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FA cmtt12 12 33
/FA 33 122 df<1218123E127E127F123F121F1207120EA2121C12FC12F81260080D7785
1A>44 D<387FFFC0B512E0A26C13C013047D901A>I<1230127812FCA212781230060676
851A>I<14C0EB01E0A2130314C013071480130F1400A25B131E133E133C137C1378A213
F85B12015B12035BA212075B120F90C7FC5A121EA2123E123C127C127812F85AA2126013
277DA21A>I<EA01F0EA07FC487EEA1F1FEA1C0738380380A2387001C0A338E000E0A9EA
F001007013C0A2EA780300381380EA3C07001C1300EA1F1FEA0FFE6C5AEA01F0131E7D9D
1A>I<13C01201A212031207120F127F12FD12711201B2EA7FFFA3101E7B9D1A>I<EA03F8
EA0FFE381FFF80383C07C0387801E0EA70004813707EA21260C7FCA214E0A2EB01C01303
EB0780EB0F00131E5B5B5BEA03E0485A48C7FC001E13705A387FFFF0B5FC7E141E7D9D1A
>I<EA03FCEA0FFF003F13C0383C03E0EA78001470A2C7FCA214E01301EB07C03803FF80
140014C0380003E01300147014781438A2126012F01478481370007013E0EA7E03383FFF
C0000F1300EA01FC151E7E9D1A>I<EB0F80131F133BA2137313F313E3EA01C312031383
1207EA0F03120E121E123C1238127812F0B512FEA338000380A6EB3FF8EB7FFCEB3FF817
1E7F9D1A>I<383FFFC05AA20070C7FCA8EA71F8EA7FFEEBFF80387E07C0EA7801383000
E0C7FC1470A3126012F014E0EAE001387003C0387C0F80383FFF00EA0FFEEA03F0141E7D
9D1A>I<137E3801FF804813C0380781E0EA0F01121E383C00C0003813005AA3EAE1F8EA
E7FEB5FC38FE078038F803C0EAF001EB00E05AA31270A2EB01C01238383C0380EA1E0F38
0FFF00EA07FCEA01F0131E7D9D1A>I<12E0B512F8A214F038E000E0EB01C0EA0003EB07
80EB0F00130E5BA25BA25BA25BA3485AA4485AA8151F7E9E1A>I<EA01FCEA07FF001F13
C01307383C01E0387800F000701370A3007813F0003813E0381E03C0380FFF803803FE00
487E381F8FC0383C01E0387800F000701370481338A46C137800701370007813F0383E03
E0381FFFC000071300EA01FC151E7E9D1A>I<EA01F0EA07FCEA1FFEEA3E0F38380780EA
7003EB01C012E0A2EB00E0A313011270EA7803EA3C0FEA1FFFEA0FFCEA03F0380001C0A3
EB0380126038F007005B133EEA7FFCEA3FF0EA0FC0131E7D9D1A>I<133E3801FF804813
C03807C1E0EA0F00381E0F70383C3FF0EA387F387070F8EBE078A238E1C038A83870E070
A2EB70E0EA387F383C3FC0381E0F00380F00383807C0F83803FFF06C13E038003F00151E
7E9D1A>64 D<EA1FF0EA3FFC487EEA780FEA300738000380A2137FEA07FF121FEA3F83EA
7803127012E0A3EA7007EA780F383FFFFCEA1FFDEA07F016157D941A>97
D<127E12FE127E120EA6133EEBFF80000F13E0EBC1F0EB8070EB0038120E141CA7000F13
381478EB80F0EBC1E0EBFFC0000E138038063E00161E7F9D1A>I<EB0FC0131F130F1301
A6EA01F1EA07FDEA0FFFEA1E0FEA3C07EA7803EA700112E0A7EA7003A2EA3807EA3E0F38
1FFFF83807FDFC3801F1F8161E7E9D1A>100 D<EA01F8EA07FF481380381E07C0EA3C01
387800E01270481370A2B512F0A300E0C7FC1270A2007813707E381F01F0380FFFE00003
13803800FE0014157D941A>I<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4387FFFF0
B5FCA23800E000AF383FFF804813C06C1380151E7F9D1A>I<127E12FE127E120EA6133E
EBFF80000F13C013C1EB80E01300120EAC387FC3FC38FFE7FE387FC3FC171E7F9D1A>
104 D<13C0487EA26C5A90C7FCA6EA7FE0A31200AF387FFF80B512C06C1380121F7C9E1A
>I<12FEA3120EA6EB0FFC131F130FEB03C0EB0780EB0F00131E5B5B13FC120F13DE138F
380E07801303EB01C014E0EB00F038FFE3FEA3171E7F9D1A>107
D<EA7FE012FF127F1200B3A6387FFFC0B512E06C13C0131E7D9D1A>I<EA7E3E38FEFF80
007F13C0EA0FC1EB80E01300120EAC387FC3FC38FFE7FE387FC3FC17157F941A>110
D<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB0038120E141CA7000F13381478EB80F0
EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC0487E6C5A16207F941A>112
D<3801F8E0EA07FEEA0FFFEA1E07EA3C03EA78011270EAE000A613011270EA7803123CEA
1E0FEA0FFFEA07FCEA01F0C7FCA8EB0FFEA317207E941A>I<387F81F838FF8FFC387F9F
FE3803FE1EEBF80CEBE000A25B5BAAEA7FFFB5FC7E17157F941A>I<3807FB80EA1FFF12
7FEA7807EAE003A30078C7FCEA7FC0EA1FFCEA07FE38003F801307386001C012E0A2EAF0
0338FC0780B51200EAEFFEEAE3F812157C941A>I<487E1203A6387FFFE0B5FCA2380380
00AA1470A43801C1E013FF6C1380EB3F00141C7F9B1A>I<387E07E0EAFE0FEA7E07EA0E
00AD1301EA0F033807FFFC6C13FE3800FCFC17157F941A>I<387FC7F8EBCFFCEBC7F838
0703C038038380EBC700EA01EFEA00FE137C13781338137C13EE120113C7380383800007
13C0EA0F01387FC7FC00FF13FE007F13FC17157F941A>120 D<387F83FC38FFC7FE387F
83FC380E00E0A27EEB01C0A2EA0381EB838013C31201EBC700EA00E7A213E61366136E13
3CA31338A35BA2EA30F0EA78E01271EA7FC06C5A001EC7FC17207F941A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FB cmr12 12 90
/FB 90 127 df<1460A214F0A2497E1478EB027C143CEB043E141EEB081F8001107F1407
01207F140301407F140101807F140048C77E15780002147C153C48143E151E48141F8148
158015074815C01503007FB612E0A2B712F024237EA229>1 D<5B497EA3497EA4EB09E0
A3EB10F0A3EB2078A3497EA3497EA348487EA30002EB0780A348EB03C0A3000C14E0121E
39FF801FFE1F237FA222>3 D<B7FC390F8001F0000714E0B3AC390FC003F039FFFC3FFF
20227EA125>5 D<90381FC1F090387037189038C03E3C3801807C000313783907003800
A9B612C03907003800B2143C397FE1FFC01E2380A21C>11 D<EB1FC0EB7020EBC0103801
803800031378EA0700143091C7FCA7B512F8380700781438B2397FE1FF80192380A21B>
I<EB1FD8EB7038EBC078EA0180120338070038A9B512F838070038B3397FF3FF80192380
A21B>I<90380FC07F90397031C0809039E00B00402601801E13E00003EB3E013807003C
91381C00C01600A7B712E03907001C011500B23A7FF1FFCFFE272380A229>I<1207A212
0F121E121C1238126012401280080976A218>19 D<B5128011017D9C18>22
D<137CEA018738030380000713C0EA0601000E13E0A514C0EB0380A2EB0E00EAFE38EA0E
06EB0380EB01C0A2EB00E014F0A214701478A61470A2EB70E014C0EB718038FE1F001523
7FA218>25 D<127012F8A71270AC1220A61200A5127012F8A3127005247CA30E>33
D<EA7038EAF87CEAFC7EA2EA743AEA0402A4EA0804A2EA1008A2EA2010EA40200F0F7EA2
18>I<127012F812FCA212741204A41208A21210A212201240060F7CA20E>39
D<132013401380EA01005A12061204120CA25AA25AA312701260A312E0AE1260A3127012
30A37EA27EA2120412067E7EEA0080134013200B327CA413>I<7E12407E7E12187E1204
1206A27EA2EA0180A313C01200A313E0AE13C0A312011380A3EA0300A21206A21204120C
5A12105A5A5A0B327DA413>I<497EB0B612FEA23900018000B01F227D9C26>43
D<127012F812FCA212741204A41208A21210A212201240060F7C840E>I<EAFFF8A20D02
808B10>I<127012F8A3127005057C840E>I<14801301A2EB0300A31306A35BA35BA35BA3
5BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA311317DA418>I<EA01F0EA07
1CEA0C06487E00381380A2387001C0A400F013E0AE007013C0A3EA780300381380A2381C
0700EA0C06EA071CEA01F013227EA018>I<13801203120F12F31203B3A9EA07C0EAFFFE
0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0A2008013E012F0EAF801A3EA
2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213205A5A0018136048
1340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA100F38200780004013C0127813
031307123800001380A214005B130C1338EA03F0EA001C130FEB0780A2EB03C0A214E012
20127012F8A200F013C01240EB0780122038100F00EA0C1CEA03F013227EA018>I<1303
A25BA25B1317A21327136713471387120113071202120612041208A212101220A2124012
C0B512F838000700A7EB0F80EB7FF015217FA018>I<00101380381E0700EA1FFF5B13F8
EA17E00010C7FCA6EA11F8EA120CEA1C07381803801210380001C0A214E0A4127012F0A2
00E013C01280EA4003148038200700EA1006EA0C1CEA03F013227EA018>I<137EEA01C1
38030080380601C0EA0C03121C381801800038C7FCA212781270A2EAF0F8EAF30CEAF406
7F00F81380EB01C012F014E0A51270A3003813C0A238180380001C1300EA0C06EA070CEA
01F013227EA018>I<12401260387FFFE014C0A23840008038C0010012801302A2485A5B
A25B5BA21360134013C0A21201A25B1203A41207A76CC7FC13237DA118>I<EA01F8EA06
0EEA0803381001801220386000C0A31270A238780180003E1300EA3F02EA1FC4EA0FF812
036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A1460A40060134014C06C1380
38180300EA0E0EEA03F013227EA018>I<EA01F0EA060C487EEA1807383803801270A238
F001C0A314E0A5127013031238EA1805120CEA0619EA03E1380001C0A3EB0380A2123038
7807001306EA700CEA20186C5AEA0FC013227EA018>I<127012F8A312701200AB127012
F8A3127005157C940E>I<127012F8A312701200AB127012F8A312781208A41210A31220
1240A2051F7C940E>I<B612FEA2C9FCA8B612FEA21F0C7D9126>61
D<EA07E0EA1838EA201CEA400EEA800F12F0A31200130E131C13381330136013C0A21380
A212011300A6C7FCA5EA0380EA07C0A3EA038010237DA217>63 D<497EA3497EA3EB05E0
A2EB09F01308A2EB1078A3497EA3497EA2EBC01F497EA248B51280EB0007A20002EB03C0
A348EB01E0A348EB00F0121C003EEB01F839FF800FFF20237EA225>65
D<B512F8380F800E0007EB0780EC03C015E0140115F0A515E01403EC07C0EC0F80EC3E00
EBFFFE9038800780EC03C0EC01E015F0140015F8A6EC01F0A2EC03E0EC07C0000FEB0F00
B512FC1D227EA123>I<903807E0109038381830EBE0063901C0017039038000F048C7FC
000E1470121E001C1430123CA2007C14101278A200F81400A812781510127C123CA2001C
1420121E000E14407E6C6C13803901C001003800E002EB381CEB07E01C247DA223>I<B5
12F0380F801E00071307EC0380EC01C0EC00E015F01578A2157C153CA3153EA9153CA215
7C1578A215F015E01401EC03C0EC0700000F131EB512F01F227EA125>I<B612C0380F80
070007130114001540A215601520A314201500A3146014E013FF138014601420A3150814
00A21510A31530A2157015E0000F1303B6FC1D227EA121>I<B612C0380F800700071301
14001540A215601520A314201500A3146014E013FF138014601420A491C7FCA9487EEAFF
FE1B227EA120>I<903807F00890383C0C18EBE0023901C001B839038000F848C7127848
1438121E15185AA2007C14081278A200F81400A7EC1FFF0078EB00F81578127C123CA27E
A27E7E6C6C13B86C7E3900E0031890383C0C08903807F00020247DA226>I<39FFFC3FFF
390FC003F039078001E0AE90B5FCEB8001AF390FC003F039FFFC3FFF20227EA125>I<EA
FFFCEA0FC0EA0780B3ACEA0FC0EAFFFC0E227EA112>I<3803FFE038001F007FB3A61270
12F8A2130EEAF01EEA401C6C5AEA1870EA07C013237EA119>I<D8FFFCEBFF80D80FC0EB
7C006C48133015205D5D4AC7FC14025C5C5C5C5C5CEB81C0EB83E01385EB88F01390EBA0
78EBC03C13808080A26E7E8114036E7EA26E7E81486C7F3AFFFC07FF8021227EA126>I<
EAFFFCEA1F806CC7FCB3A21401A41403A214021406A2141E48137EB512FE18227DA11E>
I<D8FFC0EB03FF000F15F0000715E0D805E01305A2D804F01309A301781311A36D1321A3
6D1341A26D1381A39038078101A3EB03C2A2EB01E4A3EB00F8A31470120E001FEC03F03A
FFE0203FFF28227EA12D>I<39FF8007FF3907C000F81570D805E01320EA04F0A2137813
7C133C7F131F7FEB0780A2EB03C0EB01E0A2EB00F014F81478143C143E141E140FA2EC07
A0EC03E0A21401A21400000E1460121FD8FFE0132020227EA125>I<EB0FE0EB783CEBE0
0E3903C0078039078003C0390F0001E0000E1300001E14F0481478A2007C147CA2007814
3CA200F8143EA90078143C007C147CA2003C1478003E14F8001E14F06CEB01E0A2390780
03C03903C007803900E00E00EB783CEB0FE01F247DA226>I<B512F0380F803C0007130F
EC078015C0140315E0A615C014071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC1B22
7EA121>I<EB0FE0EB783CEBE00E3903C0078039078003C0390F0001E0000E1300001E14
F0003E14F8003C1478007C147CA20078143CA200F8143EA90078143C007C147CA2003C14
78A2391E0380F0390E0420E0380F080139078813C03903C817803900E80E0090387C3C02
EB0FECEB000CA2EC0E06EC0F0EEC07FCA215F81403EC01E01F2D7DA226>I<B512E0380F
803C0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0EB80708080141E140E14
0FA481A3168015C014073A0FC003C10039FFFC01E2C8127C21237EA124>I<3803F02038
0C0C60EA1802383001E0EA70000060136012E0A21420A36C1300A21278127FEA3FF0EA1F
FE6C7E0003138038003FC0EB07E01301EB00F0A214707EA46C1360A26C13C07E38C80180
38C60700EA81FC14247DA21B>I<007FB512F839780780780060141800401408A300C014
0C00801404A400001400B3A3497E3801FFFE1E227EA123>I<39FFFC07FF390FC000F86C
4813701520B3A5000314407FA2000114806C7E9038600100EB3006EB1C08EB03F020237E
A125>I<D8FFF0EB7FC0D81F80EB1F006CC7120C7F00071408A26C6C5BA36C6C5BA26D13
6000001440A201785BA2137CD93C01C7FCA2EB1E02A36D5AA2148CEB0788A2EB03D0A214
F06D5AA26D5AA322237FA125>I<3BFFF03FFC03FE3B1F8007E000F86C486C4813701720
6E7ED807801540A24A7E2603C0021480A39039E004780100011600A2EC083CD800F01402
A2EC101E01785CA2EC200F013C5CA20260138890391E400790A216D090391F8003F0010F
5CA2EC00016D5CA20106130001025C2F237FA132>I<D8FFF0EB7FC0D81F80EB1F00000F
140C000714087F00035C6C6C5B7F00005C6D13C0017C5BD93C01C7FC133EEB1E02EB1F06
EB0F84EB078814D8EB03D014E01301AC1303EB3FFE22227FA125>89
D<387FFFFE387E003E0078133C007013781260004013F012C0EB01E0388003C0A2EB0780
1200EB0F005B131E5BA25BA25B1201EBE001EA03C0A2EA07801403EA0F00001E1302A248
1306140E48131E00F8137EB512FE18227DA11E>I<12FEA212C0B3B3A912FEA207317BA4
0E>I<EA0804EA1008EA2010A2EA4020A2EA8040A4EAB85CEAFC7EA2EA7C3EEA381C0F0F
7AA218>I<12FEA21206B3B3A912FEA207317FA40E>I<1204120E121F121BEA3180EA60C0
EAC060EA80200B087AA218>I<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7EA
1E07123C1278127000F01308A3130FEA7817383C2390380FC1E015157E9418>97
D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C141EA7141C14
3C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA0703380C078012
1C383803000078C7FC127012F0A712700078134012386C1380380C0100EA0706EA01F812
157E9416>I<14E0130F13011300ABEA01F8EA0704EA0C02EA1C01EA38001278127012F0
A7127012781238EA1801EA0C0238070CF03801F0FE17237EA21B>I<EA01FCEA0707380C
0380381C01C01238007813E0EA700012F0B5FC00F0C7FCA512700078132012386C13406C
138038070300EA00FC13157F9416>I<133E13E33801C780EA0387130748C7FCA9EAFFF8
0007C7FCB27FEA7FF0112380A20F>I<14703803F198380E1E18EA1C0E38380700A20078
1380A400381300A2EA1C0EEA1E1CEA33F00020C7FCA212301238EA3FFE381FFFC06C13E0
383000F0481330481318A400601330A2003813E0380E03803803FE0015217F9518>I<12
0E12FE121E120EABEB1F80EB60C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B>I<
121C123EA3121CC7FCA8120E127E121E120EB1EAFFC00A227FA10E>I<13E0EA01F0A3EA
00E01300A81370EA07F012001370B3A51260EAF0E013C0EA6180EA3F000C2C83A10F>I<
120E12FE121E120EABEB03FCEB01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E13
0E7F1480EB03C0130114E0EB00F014F838FFE3FE17237FA21A>I<120E12FE121E120EB3
ADEAFFE00B237FA20E>I<390E1FC07F3AFE60E183803A1E807201C03A0F003C00E0A200
0E1338AF3AFFE3FF8FFE27157F942A>I<380E1F8038FE60C0381E80E0380F0070A2120E
AF38FFE7FF18157F941B>I<EA01FCEA0707380C0180381800C0003813E0481370A200F0
1378A700701370007813F0003813E0381C01C0380E038038070700EA01FC15157F9418>
I<EA0E1F38FE61C0381E8060380F0070000E1338143CA2141EA7143CA21438000F137038
0E80E0EB41C0EB3F0090C7FCA9EAFFE0171F7F941B>I<3801F82038070460EA0E02EA1C
01003813E0EA7800A25AA71278A2EA3801121CEA0C02EA070CEA01F0C7FCA9EB0FFE171F
7E941A>I<EA0E3CEAFE46EA1E8FEA0F0F13061300120EAD120FEAFFF010157F9413>I<EA
0F88EA3078EA601812C01308A212E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA801C13
0CA212C01308EAE018EAD030EA8FC00E157E9413>I<1202A41206A3120E121E123EEAFF
FCEA0E00AB1304A6EA07081203EA01F00E1F7F9E13>I<000E137038FE07F0EA1E00000E
1370AD14F0A238060170380382783800FC7F18157F941B>I<38FF80FE381E0078143000
0E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A3131017157F
941A>I<39FF8FF87F393E01E03C001CEBC01814E0000E1410EB0260147000071420EB04
301438D803841340EB8818141CD801C81380EBD00C140E3900F00F00497EA2EB6006EB40
0220157F9423>I<38FF83FE381F00F0000E13C06C1380EB8100EA0383EA01C2EA00E413
78A21338133C134E138FEA0187EB0380380201C0000413E0EA0C00383E01F038FF03FE17
157F941A>I<38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A23801C1
00A2EA00E2A31374A21338A31310A25BA35B12F05B12F10043C7FC123C171F7F941A>I<
383FFFC038380380EA300700201300EA600EEA401C133C1338C65A5B12015B38038040EA
07005A000E13C04813805AEA7801EA7007B5FC12157F9416>I<EA0E02EA3F04EA2388EA
41F8EA80E00F057CA018>126 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

HPSdict begin
/TargetAnchors
0 dict dup begin
end targetdump-hook def
TeXDict begin
%%EndSetup
%%Page: 1 1
gsave %matrix defaultmatrix setmatrix
90 rotate 265 -39 moveto /Times-Roman findfont 20 scalefont setfont
0.3 setgray (arXiv:hep-th/9706145 v4   15 Dec 1997) show grestore
1 0 bop 1515 144 a FB(LPTENS-97/2)1515 210 y FA(hep-th@xxx)o(/9)o(706)o
(145)1515 276 y FB(June)16 b(1997)322 433 y Fz(The)f(BPS)i(Sp)r(ectra)f
(and)h(Sup)r(erconformal)f(P)n(oin)n(ts)399 516 y(in)g(Massiv)n(e)g
Fy(N)36 b Fx(=)30 b(2)16 b Fz(Sup)r(ersymmetric)d(QCD)858
707 y Fw(Adel)i(Bilal)957 840 y FB(and)810 998 y Fw(Frank)g(Ferrari)195
1186 y Fv(CNRS)h(-)h(L)n(ab)n(or)n(atoir)n(e)c(de)k(Physique)g(Th)o
(\023)-24 b(eorique)16 b(de)h(l')1227 1173 y(\023)1220
1186 y(Ec)n(ole)g(Normale)g(Sup)o(\023)-24 b(erieur)n(e)1776
1156 y Fu(?)482 1269 y Fv(24)16 b(rue)g(Lhomond,)g(75231)f(Paris)h(Ce)n
(dex)h(05,)f(F)l(r)n(anc)n(e)270 1352 y FA(adel.bilal@)o(phy)o(siq)o
(ue)o(.en)o(s.f)o(r,)d(frank.fer)o(rar)o(i@p)o(hys)o(iq)o(ue.)o(ens)o
(.f)o(r)828 1843 y Fx(ABSTRA)n(CT)83 1957 y FB(W)l(e)20
b(presen)o(t)f(a)i(detailed)e(study)i(of)f(the)g(analytic)f(structure,)
i(BPS)f(sp)q(ectra)g(and)h(sup)q(erconformal)0 2020 y(p)q(oin)o(ts)12
b(of)g(the)g Ft(N)19 b FB(=)14 b(2)e(susy)g(SU\(2\))g(gauge)h(theories)
f(with)f Ft(N)1117 2028 y Fu(f)1156 2020 y FB(=)j(1)p
Ft(;)8 b FB(2)p Ft(;)g FB(3)13 b(massiv)o(e)d(quark)h(h)o(yp)q(erm)o
(ultiplets.)0 2082 y(W)l(e)k(compute)f(the)g(curv)o(es)h(of)g(marginal)
f(stabilit)o(y)g(with)h(the)g(help)f(of)i(the)f(explicit)e(solutions)i
(for)h(the)f(lo)o(w)0 2144 y(energy)k(e\013ectiv)o(e)f(actions)i(in)f
(terms)f(of)i(standard)h(elliptic)c(functions.)31 b(W)l(e)19
b(sho)o(w)i(that)f(only)f(a)h(few)f(of)0 2206 y(these)i(curv)o(es)g
(are)h(relev)m(an)o(t.)37 b(As)22 b(a)g(generic)f(example,)f(the)i
(case)f(of)h Ft(N)1396 2215 y Fu(f)1445 2206 y FB(=)h(2)f(with)f(t)o(w)
o(o)h(equal)f(bare)0 2269 y(masses)d(is)f(studied)h(in)g(depth.)27
b(W)l(e)18 b(determine)d(the)j(precise)f(existence)f(domains)i(for)g
(eac)o(h)g(BPS)g(state,)0 2331 y(and)c(sho)o(w)g(ho)o(w)f(they)g(are)g
(compatible)e(with)i(the)g(R)o(G)g(\015o)o(ws.)21 b(A)o(t)13
b(the)g(sup)q(erconformal)f(p)q(oin)o(t,)i(where)f(t)o(w)o(o)0
2393 y(singularities)e(coincide,)g(w)o(e)g(pro)o(v)o(e)g(that)h(\(for)f
Ft(N)886 2402 y Fu(f)925 2393 y FB(=)j(2\))e(the)f(massless)g(sp)q
(ectrum)f(consists)i(of)g Fv(four)f FB(distinct)0 2455
y(BPS)i(states)h(and)f(is)g Ft(S)s FB(-in)o(v)m(arian)o(t.)20
b(This)13 b(is)g(due)g(to)g(the)g(mono)q(drom)o(y)f(around)i(the)f(sup)
q(erconformal)f(p)q(oin)o(t)0 2518 y(b)q(eing)18 b Ft(S)s
FB(,)f(pro)o(viding)g(strong)h(evidence)e(for)h(exact)g
Ft(S)s FB(-dualit)o(y)g(of)g(the)g(SCFT.)h(F)l(or)f(all)g
Ft(N)1682 2527 y Fu(f)1707 2518 y FB(,)g(w)o(e)g(compute)0
2580 y(the)f(slop)q(es)h Ft(!)h FB(of)f(the)f Ft(\014)s
FB(-functions)f(at)i(the)f(\014xed)g(p)q(oin)o(t)g(couplings)g(and)h
(sho)o(w)g(that)g(they)e(are)i(related)e(to)0 2642 y(the)h(anomalous)g
(dimensions)f Ft(\013)i FB(of)f Ft(u)e FB(=)g Fs(h)p
FB(tr)8 b Ft(\036)866 2624 y Fr(2)888 2642 y Fs(i)16
b FB(b)o(y)g Ft(!)g FB(=)e(2\()p Ft(\013)d Fs(\000)g
FB(1\).)p 0 2724 698 2 v 58 2777 a Fq(?)21 b Fp(Unit)o(\023)-20
b(e)23 b(Propre)h(de)f(Rec)o(herc)o(he)i(701)d(du)h(CNRS,)f(asso)q(ci)o
(\023)-20 b(ee)24 b(\022)-21 b(a)23 b(l')1179 2767 y(\023)1175
2777 y(Ecole)f(Normale)f(Sup)o(\023)-20 b(erieure)25
b(et)e(\022)-21 b(a)23 b(l'Univ)o(ersit)o(\023)-20 b(e)100
2827 y(P)o(aris-Sud.)p eop
%%Page: 2 2
2 1 bop 771 160 a Fz(1.)19 b(In)n(tro)r(duction)83 263
y FB(Man)o(y)c(new)g(insigh)o(ts)g(in)o(to)g(the)g(ph)o(ysics)g(of)h
(strongly)f(coupled)g(gauge)i(theories)d(ha)o(v)o(e)h(b)q(een)g
(obtained)0 325 y(b)o(y)h(the)f(study)i(of)f Ft(N)j FB(=)14
b(2)i(sup)q(ersymmetric)d(Y)l(ang-Mills)i(theories)h([1,2].)k(Tw)o(o)d
(particularly)e(in)o(teresting)0 387 y(phenomena)k(that)h(o)q(ccur)h
(in)e(these)h(four-dimensional)f(theories)g(are)h(the)g(discon)o(tin)o
(uities)e(of)i(the)g(BPS)0 449 y(sp)q(ectra)e([3,4,5])g(on)g(the)g
(Coulom)o(b)f(branc)o(h)h(and)h(the)f(o)q(ccurrence)f(of)h(sup)q
(erconformal)g(p)q(oin)o(ts)g(that)g(are)0 511 y(b)q(eliev)o(ed)c(to)j
(lead)f(to)h(non-trivial)e(in)o(teracting)h(4D)g(sup)q(erconformal)g
(\014eld)g(theories)g(\(SCFT\))g([6,7].)83 589 y(In)i(the)g(presen)o(t)
g(pap)q(er)h(w)o(e)f(study)g(the)h(probably)f(simplest)f(case)h(where)g
(b)q(oth)h(phenomena)f(o)q(ccur:)0 651 y(the)13 b(SU)o(\(2\))h
(theories)e(with)h(massiv)o(e)e(quark)i(h)o(yp)q(erm)o(ultiple)o(ts.)18
b(The)12 b(discon)o(tin)o(uities)f(of)j(the)e(BPS)h(sp)q(ectra)0
713 y(and)j(the)g(prop)q(erties)g(at)g(the)f(sup)q(erconformal)g(p)q
(oin)o(ts)h(are)g(of)g(course)g(closely)f(related)g(and)h(our)g(study)g
(of)0 776 y(the)g(\014rst)h(will)e(shed)h(imp)q(ortan)o(t)f(new)i(ligh)
o(t)e(on)i(the)f(second,)g(and)h(vice)e(v)o(ersa.)83
854 y(The)j(main)e(ingredien)o(ts)g(in)i(the)f(study)h(of)f(the)h
Ft(N)j FB(=)16 b(2)i(gauge)g(theories)g(are)f(dualit)o(y)g(and)h
(holomor-)0 916 y(phicit)o(y)12 b(of)i(the)g(lo)o(w-energy)f
(e\013ectiv)o(e)f(action.)21 b(The)14 b(prop)q(erties)f(of)i(the)e
(latter)h(are)f(enco)q(ded)h(in)g(a)g(\(h)o(yp)q(er\))0
978 y(elliptic)f(curv)o(e)i(whic)o(h)g(also)h(determines)e(the)h(ab)q
(elian)h(c)o(harges)g(of)g(the)g(theory)l(.)21 b(The)15
b(BPS)h(states)g(consti-)0 1040 y(tute)f(a)g(particularly)f(imp)q
(ortan)o(t)g(sector)g(of)h(the)g(Hilb)q(ert)f(space:)20
b(all)15 b(p)q(erturbativ)o(e)f(and)h(kno)o(wn)g(solitonic)0
1102 y(states)j(are)f(BPS)g(states.)24 b(Their)17 b(masses)f(are)i
(determined)c(b)o(y)j(the)g(ab)q(elian)g(c)o(harges)g(and)h(hence)e(b)o
(y)h(the)0 1164 y(\(h)o(yp)q(er\))c(elliptic)e(curv)o(e.)19
b(Quite)12 b(surprisingly)l(,)h(the)g(latter)g(also)g(allo)o(ws)h(us)f
(to)h(extract)e(and)i(determine)d(the)0 1226 y(existence)j(domains)i
(of)g(the)g(BPS)g(states)h(on)f(the)g(Coulom)o(b)f(branc)o(h)h(of)h
(the)f(mo)q(duli)f(space)h Fs(M)p FB(.)21 b(Indeed,)0
1288 y(BPS)13 b(states)h(generically)e(are)h(stable,)h(except)e(on)i
(real)f(co)q(dimension)f(one)h(h)o(yp)q(ersurfaces)h(in)f
Fs(M)g FB(\(i.e.)19 b(real)0 1350 y(dimension)d(one)j(curv)o(es)e(for)h
(SU\(2\)\).)26 b(These)18 b(instabilit)o(y)f(h)o(yp)q(ersurfaces)h(are)
g(determined)d(in)j(terms)e(of)0 1413 y(the)g(ab)q(elian)g(c)o(harges)h
(and)g(the)f(quan)o(tum)e(n)o(um)o(b)q(ers)h(of)i(the)f(BPS)g(state.)83
1491 y(F)l(or)h(the)g(SU\(2\))h(theories)e(without)i(or)f(with)g
Ft(N)976 1500 y Fu(f)1019 1491 y Fv(massless)g FB(quark)g(h)o(yp)q(erm)
o(ultiplets)d(\()p Ft(N)1763 1500 y Fu(f)1803 1491 y
FB(=)i(1)p Ft(;)8 b FB(2)p Ft(;)g FB(3\))0 1553 y(there)21
b(only)g(is)g(a)g Fv(single)i FB(instabilit)o(y)c(curv)o(e)h(on)i
Fs(M)g(')g Fo(C)p FB(.)36 b(This)22 b(curv)o(e)e(is)h(closed)g(and)g
(go)q(es)i(through)0 1615 y(the)16 b(singular)h(p)q(oin)o(ts)g(on)g
Fs(M)p FB(.)k(The)c(BPS)f(sp)q(ectra)h(are)f(di\013eren)o(t)g(inside)g
(and)h(outside)f(the)g(curv)o(e)g([3,4,5].)0 1677 y(W)l(e)i(found)g
(that)h(in)e(the)h(region)g(outside)g(the)g(curv)o(e,)e(part)j(of)f
(whic)o(h)f(is)h(the)g(semiclassical)d(domain,)i(all)0
1739 y(semiclassically)h(exp)q(ected)i(states)h(exist.)35
b(These)21 b(are:)31 b(the)21 b(dy)o(ons)g(\()p Ft(n)1363
1746 y Fu(e)1383 1739 y Ft(;)8 b(n)1434 1746 y Fu(m)1470
1739 y FB(\))22 b(=)g(\(2)p Ft(n;)8 b FB(1\))21 b(for)h
Ft(N)1848 1748 y Fu(f)1895 1739 y FB(=)g(0,)0 1801 y(the)d(quarks)g
(\(1)p Ft(;)8 b FB(0\))19 b(and)h(the)f(dy)o(ons)g(\()p
Ft(n;)8 b FB(1\))19 b(for)h Ft(N)949 1810 y Fu(f)992
1801 y FB(=)e(1)p Ft(;)8 b FB(2)p Ft(;)g FB(3,)21 b(with)d(in)h
(addition)g(dy)o(ons)g(\(2)p Ft(n)14 b FB(+)f(1)p Ft(;)8
b FB(2\))19 b(of)0 1863 y(magnetic)e(c)o(harge)i(t)o(w)o(o)f(for)h
Ft(N)577 1872 y Fu(f)620 1863 y FB(=)f(3.)28 b(There)19
b(also)g(is)f(the)h(W-b)q(oson)h(\(2)p Ft(;)8 b FB(0\))19
b(for)g(all)f Ft(N)1645 1872 y Fu(f)1670 1863 y FB(.)29
b(In)18 b(the)g(region)0 1925 y(inside)g(the)g(instabilit)o(y)f(curv)o
(e,)h(whic)o(h)f(alw)o(a)o(ys)i(is)f(a)h(region)g(of)g(strong)g
(coupling,)g(there)f(only)g(exist)g(the)0 1987 y(states)f(that)h(are)f
(resp)q(onsible)f(for)i(the)e(singularities,)g(i.e.)22
b(the)17 b(states)g(that)h(can)f(b)q(ecome)e(massless.)22
b(F)l(or)0 2049 y Ft(N)39 2058 y Fu(f)86 2049 y FB(=)g(0)f(e.g.,)g
(these)g(are)g(the)g(dy)o(ons)g(\(0)p Ft(;)8 b FB(1\))22
b(and)g(\()p Fs(\000)p FB(2)p Ft(\017;)8 b FB(1\))21
b(while)f(for)h Ft(N)1416 2058 y Fu(f)1463 2049 y FB(=)h(2)f(these)g
(are)g(\(0)p Ft(;)8 b FB(1\))22 b(and)0 2112 y(\()p Fs(\000)p
Ft(\017;)8 b FB(1\).)21 b(Here)15 b Ft(\017)h FB(equals)f(+1)i(in)f
(the)g(upp)q(er)g(and)h Fs(\000)p FB(1)f(in)g(the)g(lo)o(w)o(er)f(half)
h(plane.)21 b(Almost)14 b(all)i(BPS)g(states)0 2174 y(disapp)q(ear)i
(when)e(crossing)h(the)g(curv)o(e)e(from)h(outside)h(to)g(inside:)k
(they)16 b(\\deca)o(y")h(in)o(to)f(the)g(only)h(t)o(w)o(o)f(\(or)0
2236 y(three\))f(existing)f(states.)22 b(In)15 b(particular,)g(there)f
(is)h(no)h(W-b)q(oson)i(inside)c(the)h(curv)o(e,)f(although)i(the)g
(gauge)0 2298 y(symmetry)d(is)j(alw)o(a)o(ys)g(brok)o(en)g(SU\(2\))e
Fs(!)f FB(U\(1\).)83 2376 y(The)24 b(determination)e(of)j(these)e(BPS)h
(sp)q(ectra)h(w)o(as)f(relativ)o(ely)e(easy)i(since)f(there)h(w)o(as)g
(only)g(one)0 2438 y(instabilit)o(y)16 b(curv)o(e.)25
b(The)18 b(generic)f(situation)h(of)g(SU\()p Ft(n)p FB(\))g(is)g(m)o
(uc)o(h)d(more)i(complicated:)22 b(eac)o(h)c(BPS)f(state)0
2500 y(has)c(its)g(o)o(wn)g(family)d(of)j(p)q(ossible)g(instabilit)o(y)
e(h)o(yp)q(ersurfaces.)20 b(A)o(t)12 b(\014rst)h(sigh)o(t)f(it)g(seems)
f(hop)q(eless)i(to)g(study)0 2562 y(this)18 b(general)g(case)h(b)o(y)e
(the)h(metho)q(ds)g(of)h([3,4].)27 b(Ho)o(w)o(ev)o(er,)16
b(a)j(similar)d(situation)j(already)f(o)q(ccurs)h(in)f(the)0
2624 y(SU\(2\))13 b(theories)f(with)g Fv(massive)i FB(h)o(yp)q(erm)o
(ultipl)o(ets.)j(This)c(is)f(the)h(case)f(w)o(e)h(study)g(in)f(the)g
(presen)o(t)g(pap)q(er.)21 b(It)0 2686 y(will)14 b(turn)i(out)g(that)g
(among)g(the)f(m)o(ultitude)e(of)j(p)q(ossible)f(deca)o(y)g(curv)o(es)g
(only)g(a)h(relativ)o(ely)d(small)h(subset)0 2749 y(is)j(relev)m(an)o
(t,)g(and)h(one)f(obtains)i(a)e(v)o(ery)g(clear)f(picture)h(of)h(the)f
(existence)f(domains)h(of)g(the)h(v)m(arious)g(BPS)986
2883 y Fp(1)p eop
%%Page: 3 3
3 2 bop 0 160 a FB(states.)21 b(W)l(e)15 b(are)g(quite)e(con\014den)o
(t)i(that)g(this)g(structure)f(can)h(b)q(e)g(exploited)f(to)h(also)g
(determine)e(the)h(exact)0 222 y(BPS)i(sp)q(ectra)h(at)f(an)o(y)g(p)q
(oin)o(t)h(on)g(the)f(Coulom)o(b)f(branc)o(h)h(of)h(the)f(SU)o(\()p
Ft(n)p FB(\))h(mo)q(duli)e(space.)83 303 y(Another)i(feature,)h(absen)o
(t)f(in)h(the)f(massless)g(SU)o(\(2\))h(theories,)f(but)h(presen)o(t)f
(for)h(the)f(higher)h(SU)o(\()p Ft(n)p FB(\))0 365 y(theories)13
b(or)h(the)f(SU\(2\))h(theories)f(with)g(massiv)o(e)f(h)o(yp)q(erm)o
(ultipl)o(ets,)f(is)i(the)g(existence)f(of)i(sup)q(erconformal)0
428 y(p)q(oin)o(ts.)21 b(These)15 b(can)h(o)q(ccur)f(at)h(sp)q(ecial)f
(p)q(oin)o(ts)g(on)h(the)f(Coulom)o(b)f(branc)o(h)h(in)g(the)g(SU\()p
Ft(n)p FB(\))g(theories)g(where)0 490 y(singular)i(lines)f(in)o
(tersect,)f(or)i(in)f(the)h(massiv)o(e)e(SU)o(\(2\))i(theories)g(at)g
(sp)q(ecial)f(v)m(alues)h(of)g(the)f(masses)g(when)0
552 y(singular)f(p)q(oin)o(ts)g(collide.)k(In)14 b(an)o(y)h(case,)f(at)
h(a)g(sup)q(erconformal)f(p)q(oin)o(t)h(t)o(w)o(o)f(or)h(more)f(m)o
(utually)e(non-lo)q(cal)0 615 y(BPS)17 b(states)h(sim)o(ultaneously)d
(b)q(ecome)h(massless)h([6].)24 b(T)l(o)18 b(study)f(these)h(p)q(oin)o
(ts,)f(it)g(will)f(turn)i(out)g(to)f(b)q(e)0 677 y(most)e(fruitful)h
(to)g(view)g(them)f(as)h(resulting)g(from)f(suc)o(h)h(a)h(coincidence)d
(of)j(individual)e(singularities.)83 758 y(In)21 b(this)g(pap)q(er,)i
(w)o(e)e(will)f(discuss)i(the)f(BPS)g(sp)q(ectra)h(of)f(the)g(SU\(2\))h
(theories)f(with)g Ft(N)1768 767 y Fu(f)1815 758 y FB(=)i(1)p
Ft(;)8 b FB(2)p Ft(;)g FB(3)0 820 y(massiv)o(e)k(quark)h(h)o(yp)q(erm)o
(ultiplets,)e(and)j(presen)o(t)f(an)h(in)f(depth)h(study)f(of)h(the)g
Ft(N)1493 829 y Fu(f)1531 820 y FB(=)g(2)g(theory)g(with)f(equal)0
883 y(bare)k(masses.)23 b(This)18 b(latter)e(case)h(is)g(su\016cien)o
(tly)e(generic)h(to)i(exhibit)d(all)i(in)o(teresting)f(new)h
(phenomena.)0 945 y(W)l(e)g(determine)e(the)j(precise)e(existence)g
(domains)h(for)h(eac)o(h)f(BPS)h(state)g(and)g(con\014rm)e(these)i
(results)f(b)o(y)0 1007 y(man)o(y)g(additional)h(consistency)f(c)o(hec)
o(ks.)25 b(W)l(e)18 b(will)f(also)i(see)f(ho)o(w)g(the)g(whole)g(set)g
(of)g(deca)o(y)g(curv)o(es)f(and)0 1070 y(BPS)g(sp)q(ectra)g(v)o(ery)f
(consisten)o(tly)g(b)q(eha)o(v)o(es)g(under)h(the)g(R)o(G)g(\015o)o(w)g
(from)f(one)h Ft(N)1500 1078 y Fu(f)1542 1070 y FB(theory)g(to)g
(another.)24 b(A)0 1132 y(subtlet)o(y)16 b(presen)o(t)h(in)g(the)g
(massiv)o(e)f(theories)h(is)g(related)g(to)g(the)h(ab)q(elian)f
Ft(s)1419 1139 y Fu(i)1434 1132 y FB(-c)o(harges)h(\()p
Ft(i)d FB(=)h(1)p Ft(;)8 b(:)g(:)g(:)g(N)1880 1141 y
Fu(f)1905 1132 y FB(\))17 b([8])0 1194 y(whic)o(h)h(w)o(e)f(need)h(to)h
(determine)d(for)i(all)g(BPS)g(states.)28 b(Some)17 b(indications)h(on)
g(the)g(BPS)h(sp)q(ectra)f(of)h(the)0 1256 y(massiv)o(e)12
b(theories)i(w)o(ere)g(already)g(obtained)h(in)f([9])f(within)h(the)g
(geo)q(desics)h(approac)o(h)g(from)e(string)i(theory)0
1320 y([10].)21 b(Ho)o(w)o(ev)o(er,)14 b(it)i(only)g(pro)o(vided)f
(some)h(partial)g(and)h(p)q(oin)o(t)o(wise)e(information)h(on)g
Fs(M)p FB(.)1664 1291 y Fu(?)83 1401 y FB(The)e(analytic)f(structure)g
(and)h(the)f(corresp)q(onding)i(mono)q(dromies)d(are)i(fundamen)o(tal)e
(for)i(our)g(study)l(.)0 1464 y(As)19 b(w)o(e)g(follo)o(w)g(the)g(v)m
(arious)h(R)o(G)f(\015o)o(ws,)i(w)o(e)e(reac)o(h)f(v)m(arious)i(sup)q
(erconformal)f(p)q(oin)o(ts)h(where)f(the)g(mon-)0 1526
y(o)q(dromies)h(are)h(giv)o(en)e(b)o(y)h(the)h(pro)q(ducts)g(of)g(the)g
(individual)e(mono)q(dromies)g(of)i(the)f(coinciding)g(singu-)0
1588 y(larities.)26 b(Suc)o(h)18 b(a)h(comp)q(osite)e(mono)q(drom)o(y)g
Ft(M)898 1595 y Fr(sc)951 1588 y FB(is)h(quite)f(sp)q(ecial,)h(acting)g
(e.g.)27 b(as)19 b Ft(S)s FB(-dualit)o(y)f(relating)0
1651 y(m)o(utually)11 b(non-lo)q(cal)j(states)g(as)g(monop)q(oles)f
(and)h(quarks.)20 b(W)l(e)13 b(argue)h(that)g(it)e(should)i(b)q(e)f(an)
h(exact)f(quan-)0 1713 y(tum)h(symmetry)f(of)i(the)h(massless)f(BPS)g
(sector)h(and)g(th)o(us)f(of)h(the)g(sup)q(erconformal)f(\014eld)g
(theories.)20 b(This)0 1775 y(mono)q(drom)o(y)15 b(\(completely\))f(c)o
(haracterises)i(the)g(SCFT)i(allo)o(wing)e(us)h(to)g(compute)f(scaling)
g(dimensions.)0 1837 y(W)l(e)g(sho)o(w)h(that)f(the)g(SCFT)h(is)f
(determined)e(in)i(terms)e(of)j(a)f(single)g(in)o(teger)f
Ft(k)h FB(=)e(1)p Ft(;)8 b FB(2)17 b(or)f(3)h(c)o(haracteristic)0
1900 y(of)j Ft(M)106 1907 y Fr(sc)140 1900 y FB(.)30
b(This)19 b(is)g(reminiscen)o(t)d(to)k(the)f(study)g(of)h(the)f(relev)m
(an)o(t)f(deformations)h(of)g(the)g(singular)g(curv)o(es)0
1962 y Ft(y)26 1944 y Fr(2)69 1962 y FB(=)j Ft(x)157
1944 y Fr(3)199 1962 y FB(in)e([7].)36 b(As)20 b(w)o(e)h(follo)o(w)g
(the)f(R)o(G)h(\015o)o(w)h(further,)f(the)g(singularities)f(separate)i
(again)g(but)f(the)0 2024 y(analytic)d(structure)f(is)h(c)o(hanged,)h
(pro)o(viding)e(us)i(with)f(an)g(explanation)h(of)f(ho)o(w)g(the)g
(nature)h(of)f(certain)0 2087 y(singularities)d(can)i(c)o(hange)f(from)
e(b)q(eing)j(due)f(to)g(a)g(massless)g(quark)g(at)g(w)o(eak)g(coupling)
g(to)g(b)q(eing)g(due)g(to)0 2149 y(a)h(massless)e(dy)o(on)h(at)h
(strong)g(coupling.)83 2230 y(Let)12 b(us)g(outline)f(the)h
(organisation)h(of)f(the)f(presen)o(t)h(pap)q(er)g(and)g(some)f(of)h
(our)g(results:)19 b(\014rst,)13 b(in)e(Section)0 2292
y(2,)18 b(w)o(e)g(recall)e(the)i(elliptic)e(curv)o(es)h(for)h(the)f
(massiv)o(e)f Ft(N)1041 2301 y Fu(f)1083 2292 y FB(=)g(1)p
Ft(;)8 b FB(2)p Ft(;)g FB(3)19 b(theories)f(and)g(discuss)g(the)g(quan)
o(tum)0 2355 y(n)o(um)o(b)q(ers)f(of)i(the)g(BPS)f(states)h(asso)q
(ciated)h(with)f(the)f(singularities)g(and)h(ho)o(w)g(they)f(c)o(hange)
h(under)g(the)0 2417 y(v)m(arious)14 b(R)o(G)g(\015o)o(ws)g(one)g(can)g
(study)l(.)20 b(This)14 b(brings)g(us)g(naturally)g(to)g(a)g
(discussion)g(of)g(the)f(sup)q(erconformal)0 2479 y(p)q(oin)o(ts)j(and)
g(ho)o(w)f(they)g(are)g(classi\014ed)g(b)o(y)g(an)h(in)o(teger)e
Ft(k)i FB(=)e(1)p Ft(;)8 b FB(2)p Ft(;)g FB(3)16 b(through)g(their)f
(mono)q(dromies.)k(Then,)p 0 2560 698 2 v 58 2609 a Fq(?)33
b Fp(Where)13 b(comparable,)d(b)q(oth)j(results)g(agree.)18
b(Although)11 b(there)j(is)e(a)g(sligh)o(t)f(discrepancy)j(with)d(the)i
(published)f(v)o(ersion)100 2659 y(of)i([9],)f(after)j(a)e(\014rst)i
(circulation)e(of)h(the)g(presen)o(t)i(pap)q(er,)e(the)h(authors)f(of)f
([9])g(ha)o(v)o(e)h(informed)e(us)i(that)g(this)g(is)g(only)100
2708 y(due)f(to)f(some)g(error)h(when)g(writing)f(up)h(their)g(pap)q
(er)g(but)g(that)f(they)h(actually)f(agree)h(with)f(our)h(results,)g
(see)h(Section)100 2758 y(4)e(b)q(elo)o(w.)986 2883 y(2)p
eop
%%Page: 4 4
4 3 bop 0 160 a FB(w)o(e)19 b(compute)f(the)i(basic)g(functions)f
Ft(a)729 168 y Fu(D)764 160 y FB(\()p Ft(u)p FB(\))g(and)h
Ft(a)p FB(\()p Ft(u)p FB(\),)g(whic)o(h)f(are)g(the)h(p)q(erio)q(d)g
(in)o(tegrals)f(of)h(a)g(certain)0 222 y(meromorphic)12
b(one-form,)h(in)i(terms)e(of)h(standard)i(elliptic)c(in)o(tegrals)i
(in)h(a)g(form)e(immedi)o(ately)e(suited)j(for)0 285
y(n)o(umerical)i(computations.)30 b(T)l(ec)o(hnical)17
b(details)i(are)g(p)q(ostp)q(oned)i(to)e(the)g(app)q(endices.)30
b(Similar)17 b(results)0 347 y(w)o(ere)h(also)g(obtained)h(indep)q
(enden)o(tly)e(and)i(published)f(recen)o(tly)e(in)i([11,12].)28
b(In)18 b(Section)g(3,)g(w)o(e)g(discuss)0 410 y(general)k(features)g
(of)h(the)f(BPS)g(sp)q(ectra)h(and)g(the)f(deca)o(y)f(curv)o(es)h(for)g
(all)g(the)g(massiv)o(e)f Ft(N)1765 419 y Fu(f)1814 410
y FB(=)j(1)p Ft(;)8 b FB(2)p Ft(;)g FB(3)0 473 y(theories.)20
b(In)15 b(particular,)f(w)o(e)g(discuss)h(the)g(maximal)d(p)q(ossible)j
(set)f(of)h(BPS)g(states)g(compatible)e(with)i(the)0
535 y(R)o(G)h(\015o)o(w.)83 620 y(Section)21 b(4)g(then)g(is)g(an)g(in)
g(depth)g(study)g(of)h(the)e Ft(N)1078 628 y Fu(f)1125
620 y FB(=)i(2)g(theory)f(with)f(t)o(w)o(o)h(equal)g(bare)g(masses)0
686 y Ft(m)p FB(.)30 b(There)19 b(exists)g(a)h(sup)q(erconformal)e(p)q
(oin)o(t)i(when)f Ft(m)g FB(=)1142 666 y Fr(\003)1169
670 y Fn(2)p 1142 674 44 2 v 1155 703 a Fr(2)1191 686
y FB(,)h(and)g(w)o(e)f(discuss)g(separately)g(the)g(cases)0
753 y Ft(m)k(<)131 733 y Fr(\003)158 737 y Fn(2)p 131
741 V 144 770 a Fr(2)202 753 y FB(and)f Ft(m)g(>)433
733 y Fr(\003)460 737 y Fn(2)p 433 741 V 446 770 a Fr(2)482
753 y FB(.)37 b(W)l(e)22 b(\014nd)f(that)h(all)f(curv)o(es)g(and)h
(existence)e(domains)h(of)h(BPS)f(states)h(ha)o(v)o(e)0
820 y(p)q(erfectly)c(smo)q(oth)h(R)o(G)g(\015o)o(ws.)31
b(In)19 b(particular,)h(the)f(crosso)o(v)o(er)f(from)h(small)e(mass)i
(\()p Ft(m)g(<)1740 800 y Fr(\003)1767 804 y Fn(2)p 1740
808 V 1752 837 a Fr(2)1789 820 y FB(\))g(to)h(large)0
887 y(mass)15 b(\()p Ft(m)f(>)251 867 y Fr(\003)278 871
y Fn(2)p 251 876 V 264 904 a Fr(2)300 887 y FB(\))i(is)f(p)q(erfectly)g
(smo)q(oth,)g(except,)f(in)i(a)g(certain)f(sense,)g(at)h(the)g(sup)q
(erconformal)f(p)q(oin)o(t)g Ft(u)1971 894 y Fm(\003)0
964 y FB(itself.)20 b(Also,)15 b(as)i Ft(m)e FB(b)q(ecomes)f(v)o(ery)h
(large,)g(in)h(a)g(basis)h(~)-25 b Ft(a)1052 972 y Fu(D)1087
964 y Ft(;)24 b FB(~)-25 b Ft(a)16 b FB(that)g(\015o)o(ws)g(to)g(the)g
Ft(a)1560 937 y Fr(\()p Fu(N)1606 941 y Fl(f)1625 937
y Fr(=0\))1560 980 y Fu(D)1691 964 y Ft(;)24 b(a)1755
945 y Fr(\()p Fu(N)1801 949 y Fl(f)1820 945 y Fr(=0\))1902
964 y FB(only)0 1026 y(the)18 b(states)h(with)h(~)-26
b Ft(s)17 b FB(=)g(0)i(surviv)o(e)e(under)h(the)g(R)o(G)g(\015o)o(w)g
Ft(m)f Fs(!)g(1)h FB(to)h(the)f(pure)g(gauge)h(theory)f
Ft(N)1857 1035 y Fu(f)1899 1026 y FB(=)g(0.)0 1089 y(A)o(t)e(a)h(giv)o
(en)f(\014xed)g(p)q(oin)o(t)h Ft(u)d Fs(2)h(M)p FB(,)h(almost)g(all)i
(~)-26 b Ft(s)15 b Fs(6)p FB(=)f(0)j(dy)o(ons)g(disapp)q(ear,)h
(already)e(at)h(\014nite)f Ft(m)p FB(,)g(b)q(ecause)0
1151 y(they)h(are)g(\\hit")g(b)o(y)g(their)f(corresp)q(onding)i(deca)o
(y)f(curv)o(es)f(that)h(mo)o(v)o(e)e(out)o(w)o(ards)j(\(to)g(large)f
Fs(j)p Ft(u)p Fs(j)p FB(\))f(as)i Ft(m)f FB(is)0 1214
y(increased.)22 b(Among)16 b(the)j(~)-26 b Ft(s)15 b
Fs(6)p FB(=)f(0)k(states)f(only)g(the)f(quarks)h(and)h(some)d(sp)q
(ecial)i(dy)o(ons)g(exist)f(for)h(all)f(\014nite)0 1276
y Ft(m)p FB(,)g(but)h(as)g Ft(m)e Fs(!)f(1)p FB(,)i(their)h(BPS)f
(masses)g(div)o(erge)g(and)h(th)o(us)g(they)f(simply)f(drop)i(out)g(of)
g(the)g(sp)q(ectrum)0 1339 y(for)e(this)f(reason.)22
b(On)14 b(the)g(other)h(hand,)g(the)f(di\013eren)o(t)i(~)-26
b Ft(s)14 b FB(=)g(0)g(states)h(deca)o(y)f(on)h(one)g(and)g(the)f(same)
g(curv)o(e)0 1402 y(whic)o(h)g(\015o)o(ws)i(to)g(the)f(curv)o(e)f(of)h
(the)g Ft(N)705 1410 y Fu(f)744 1402 y FB(=)e(0)j(theory)l(.)k(Th)o(us)
c(w)o(e)f(are)g(able)g(to)g(see)g(the)g(\015o)o(w)g(to)h(the)f
Ft(N)1878 1410 y Fu(f)1916 1402 y FB(=)f(0)0 1468 y(sp)q(ectra)i(in)g
(full)f(detail.)21 b(F)l(or)16 b(eac)o(h)f(case,)h Ft(m)d(<)892
1448 y Fr(\003)919 1452 y Fn(2)p 892 1456 V 904 1485
a Fr(2)957 1468 y FB(and)k Ft(m)c(>)1165 1448 y Fr(\003)1192
1452 y Fn(2)p 1165 1456 V 1177 1485 a Fr(2)1214 1468
y FB(,)i(w)o(e)h(\014rst)g(discuss)g(the)g(general)g(picture,)0
1530 y(whic)o(h)g(is)g(then)g(established)g(b)o(y)f(considering)h(eac)o
(h)g(class)g(of)h(BPS)f(states)h(separately)l(.)83 1615
y(The)h(BPS)g(sp)q(ectra)h(for)f Ft(N)585 1623 y Fu(f)627
1615 y FB(=)f(2,)h Ft(m)f FB(=)858 1595 y Fr(\003)885
1599 y Fn(2)p 858 1603 V 870 1632 a Fr(2)925 1615 y FB(are)h(then)g
(simply)e(obtained)i(as)h(the)f(limit)d(of)k(those)f(for)0
1682 y(either)f Ft(m)f(>)258 1662 y Fr(\003)285 1666
y Fn(2)p 258 1670 V 270 1699 a Fr(2)325 1682 y FB(or)i
Ft(m)e(<)504 1662 y Fr(\003)531 1666 y Fn(2)p 504 1670
V 517 1699 a Fr(2)553 1682 y FB(.)26 b(Nothing)18 b(c)o(hanges)g
(dramatically)d(for)j Ft(m)f FB(=)1444 1662 y Fr(\003)1471
1666 y Fn(2)p 1444 1670 V 1456 1699 a Fr(2)1493 1682
y FB(,)g(except)g(at)h(the)g(v)m(alue)f(of)0 1744 y Ft(u)i
FB(equal)g(to)h(the)f(t)o(w)o(o)h(coinciding)e(singularities)h(whic)o
(h)g(is)g(the)g(sup)q(erconformal)g(p)q(oin)o(t.)31 b(In)20
b(Section)f(5,)0 1807 y(w)o(e)f(discuss)g(the)f(ph)o(ysics)h(of)g(this)
g(sup)q(erconformal)f(p)q(oin)o(t)h(in)g(some)e(detail.)26
b(There,)18 b(quite)f(remark)m(ably)l(,)0 1870 y(one)i(has)h
Fv(four)e FB(massless)g(states,)i(namely)d(the)h(quark)h(\()p
Ft(n)1086 1877 y Fu(e)1106 1870 y Ft(;)8 b(n)1157 1877
y Fu(m)1193 1870 y FB(\))1212 1877 y Fu(s)1250 1870 y
FB(=)18 b(\(1)p Ft(;)8 b FB(0\))1414 1877 y Fr(1)1455
1870 y FB(and)20 b(the)e(monop)q(ole)h(\(0)p Ft(;)8 b
FB(1\))1971 1877 y Fr(0)0 1932 y FB(whic)o(h)14 b(are)h(\015a)o(v)o
(our)g(doublets,)g(and)h(the)f(t)o(w)o(o)g(dy)o(ons)g(\(1)p
Ft(;)8 b FB(1\))1099 1939 y Fr(1)1136 1932 y FB(and)15
b(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1376 1939 y Fm(\000)p
Fr(1)1443 1932 y FB(whic)o(h)14 b(are)h(\015a)o(v)o(our)g(singlets.)0
1995 y(This)k(sp)q(ectrum)f(has)j(an)e Ft(S)s FB(-dualit)o(y)g(in)o(v)m
(ariance)f(whic)o(h)h(is)g(realized)f(b)o(y)h(the)g(mono)q(drom)o(y)e
(matrix)h Ft(M)1958 2002 y Fr(sc)0 2057 y FB(around)j(the)e(sup)q
(erconformal)g(p)q(oin)o(t.)32 b(Since)19 b(this)g(massless)g(sector)h
(constitutes)g(the)f(sup)q(erconformal)0 2120 y(\014eld)13
b(theory)l(,)g(the)g(latter)g(should)h(ha)o(v)o(e)f(a)h(quan)o(tum)e
Ft(S)s FB(-dualit)o(y)g(in)o(v)m(ariance.)20 b(W)l(e)13
b(then)g(discuss)h(in)f(general)0 2183 y(the)k(Argyres-Douglas)h
(ansatz)g([6])e(for)i(the)e Ft(\014)s FB(-function)h(of)g(a)h(theory)e
(based)i(on)g(the)e(massless)h(states)g(at)0 2245 y(the)j(sup)q
(erconformal)g(p)q(oin)o(t.)34 b(These)20 b(authors)i(conjecture)d
(that,)j(although)f(there)f(is)g(no)h(lo)q(cal)f(action)0
2308 y(at)e(our)f(disp)q(osal)h(to)g(sim)o(ultaneously)d(describ)q(e)h
(all)h(massless)f(states,)i(the)f(b)q(eta)g(migh)o(t)f(nev)o(ertheless)
f(b)q(e)0 2370 y(obtained)h(b)o(y)e(simply)f(computing)i(the)g(con)o
(tribution)f(of)i(eac)o(h)f(massless)f(particle)g(in)h(the)g(form)o
(ulation)f(of)0 2433 y(the)f(theory)f(whic)o(h)g(describ)q(es)h(it)f
(lo)q(cally)g(and)h(then)g(adding)g(together)g(the)g(suitably)f(dualit)
o(y)g(transformed)0 2495 y(con)o(tributions.)19 b(W)l(e)12
b(sho)o(w)g(that)g(despite)f(its)g(app)q(ealing)i(features,)f(this)f
(ansatz)i(is)e(not)h(correct,)f(as)i(already)0 2558 y(susp)q(ected)j(b)
o(y)f(these)h(authors)g(b)q(ecause)g(it)g(let)f(to)h(irrational)f(v)m
(alues)h(for)g(the)g(slop)q(e)g Ft(!)i FB(of)e(the)f
Ft(\014)s FB(-function)0 2621 y(at)h(the)f(\014xed)h(p)q(oin)o(t.)21
b(W)l(e)15 b(argue)i(that)f(the)f(slop)q(es)h Ft(!)i
FB(can)e(b)q(e)g(computed)e(from)h(the)g(lo)o(w-energy)g(e\013ectiv)o
(e)0 2683 y(actions)20 b(alone)f(and)h(\014nd)f(that)h(they)e(are)i(a)f
(rational)h(n)o(um)o(b)q(ers)d(related)i(to)g(the)g(scaling)g
(dimensions)f Ft(\013)0 2746 y FB(of)h Fs(h)p FB(tr)9
b Ft(\036)153 2728 y Fr(2)174 2746 y Fs(i)19 b FB(as)h
Ft(!)g FB(=)e(2\()p Ft(\013)c Fs(\000)e FB(1\))19 b(.)29
b(W)l(e)19 b(sho)o(w)g(that)h(this)e(relation)h(is)f(in)h(p)q(erfect)f
(agreemen)o(t)f(with)i Ft(N)k FB(=)18 b(2)986 2883 y
Fp(3)p eop
%%Page: 5 5
5 4 bop 0 160 a FB(sup)q(erconformal)16 b(in)o(v)m(ariance.)83
240 y(Then)h(follo)o(w)g(four)h(app)q(endices.)24 b(In)17
b(app)q(endix)g(A,)g(w)o(e)f(discuss)i(the)f(p)q(ositions)h(of)f(the)g
(singularities)0 302 y(and)e(their)f(di\013eren)o(t)g(R)o(G)h(\015o)o
(ws)g(for)g Ft(N)718 311 y Fu(f)757 302 y FB(=)e(1)p
Ft(;)8 b FB(2)16 b(and)f(3.)21 b(In)14 b(app)q(endix)h(B,)f(w)o(e)g
(giv)o(e)g(details)g(on)h(the)g(elliptic)0 365 y(in)o(tegrals)h(needed)
h(in)f(Section)g(2)i(-)f(and)g(hea)o(vily)f(used)h(for)g(the)f(n)o
(umerical)f(computations)h(of)h(Section)g(4.)0 427 y(In)g(app)q(endix)g
(C,)f(w)o(e)h(express)g(the)f(p)q(erio)q(d)i(in)o(tegrals)e(in)h(terms)
e(of)j(the)e(three)h(elliptic)d(in)o(tegrals)j(also)g(for)0
489 y Ft(N)39 498 y Fu(f)78 489 y FB(=)c(1)p Ft(;)8 b
FB(3)15 b(and)f(for)h Ft(N)418 498 y Fu(f)456 489 y FB(=)f(2)g(with)g
Ft(m)698 496 y Fr(1)733 489 y FB(=)g Ft(m;)21 b(m)906
496 y Fr(2)941 489 y FB(=)14 b(0,)g(and)g(c)o(hec)o(k)e(the)i(R)o(G)g
(\015o)o(ws)g(on)h(these)e(expressions.)0 551 y(Finally)l(,)h(in)h(app)
q(endix)h(D,)f(w)o(e)g(study)h(the)f(R)o(G)g(\015o)o(w)h(of)g(the)f
Ft(N)1162 560 y Fu(f)1201 551 y FB(=)f(2)i(in)o(tegrals)f(with)g(equal)
g(bare)h(masses,)0 614 y(th)o(us)g(pro)o(viding)g(some)f(additional)i
(consistency)e(c)o(hec)o(ks.)531 775 y Fz(2.)k(R)n(G)g(\015o)n(ws,)g
(analytic)e(structure,)357 837 y(sup)r(erconformal)h(p)r(oin)n(ts)g
(and)i(p)r(erio)r(d)e(in)n(tegrals)83 950 y FB(The)12
b(structure)h(of)f(the)h(Coulom)o(b)e(branc)o(h)i(of)f(the)g
(asymptotically)f(free)h(SU\(2\))g(theories)g(under)g(study)0
1012 y(w)o(as)17 b(deriv)o(ed)d(in)i([1,)g(2].)21 b(It)16
b(is)g(giv)o(en)g(in)f(terms)g(of)i(an)f(elliptic)e(curv)o(e)h(of)i
(the)f(form)612 1133 y Ft(y)638 1113 y Fr(2)673 1133
y FB(=)e Ft(x)753 1113 y Fr(2)774 1133 y FB(\()p Ft(x)c
Fs(\000)h Ft(u)p FB(\))g(+)g Ft(P)1019 1141 y Fu(N)1050
1145 y Fl(f)1072 1133 y FB(\()p Ft(x;)d(u;)g(m)1234 1140
y Fu(j)1253 1133 y Ft(;)g FB(\003)1309 1141 y Fu(N)1340
1145 y Fl(f)1361 1133 y FB(\))512 b(\(2)p Ft(:)p FB(1\))0
1261 y(where)129 1232 y Fu(?)166 1261 y Ft(u)13 b FB(=)h
Fs(h)p FB(tr)9 b Ft(\036)354 1243 y Fr(2)375 1261 y Fs(i)16
b FB(is)f(the)h(gauge)g(in)o(v)m(arian)o(t)f(mo)q(duli,)f
Ft(\036)i FB(the)f(scalar)h(comp)q(onen)o(t)e(of)i(the)g
Ft(N)j FB(=)13 b(2)j(v)o(ector)0 1323 y(m)o(ultiplet,)d
Ft(m)267 1330 y Fu(j)304 1323 y FB(\(1)i Fs(\024)f Ft(j)k
Fs(\024)d Ft(N)546 1332 y Fu(f)570 1323 y FB(\))i(the)g(bare)g(masses)f
(of)h(the)f(h)o(yp)q(erm)o(ultiplets)e(and)j(\003)1581
1332 y Fu(N)1612 1336 y Fl(f)1651 1323 y FB(the)f(dynamically)0
1386 y(generated)g(scale)g(of)h(the)f(theory)l(.)21 b(The)16
b(p)q(olynomials)f Ft(P)1049 1394 y Fu(N)1080 1398 y
Fl(f)1118 1386 y FB(are)i(giv)o(en)e(b)o(y)370 1543 y
Ft(P)401 1550 y Fr(0)437 1543 y FB(=)480 1509 y(\003)514
1491 y Fr(4)514 1523 y(0)p 480 1531 56 2 v 495 1577 a
FB(4)548 1543 y Ft(x)h(;)370 1670 y(P)401 1677 y Fr(1)437
1670 y FB(=)480 1636 y(\003)514 1618 y Fr(3)514 1650
y(1)p 480 1659 V 495 1704 a FB(4)548 1670 y Ft(m)591
1677 y Fr(1)612 1670 y Ft(x)11 b Fs(\000)706 1636 y FB(\003)740
1618 y Fr(6)740 1650 y(1)p 706 1659 V 709 1704 a FB(64)782
1670 y Ft(;)370 1797 y(P)401 1804 y Fr(2)437 1797 y FB(=)g
Fs(\000)541 1763 y FB(\003)575 1745 y Fr(4)575 1777 y(2)p
541 1786 V 544 1831 a FB(64)601 1757 y Fk(\000)624 1797
y Ft(x)f Fs(\000)h Ft(u)740 1757 y Fk(\001)774 1797 y
FB(+)828 1763 y(\003)862 1745 y Fr(2)862 1777 y(2)p 828
1786 V 843 1831 a FB(4)888 1797 y Ft(m)931 1804 y Fr(1)952
1797 y Ft(m)995 1804 y Fr(2)1016 1797 y Ft(x)g Fs(\000)1109
1763 y FB(\003)1143 1745 y Fr(4)1143 1777 y(2)p 1109
1786 V 1112 1831 a FB(64)1170 1797 y(\()p Ft(m)1232 1777
y Fr(2)1232 1809 y(1)1263 1797 y FB(+)g Ft(m)1355 1777
y Fr(2)1355 1809 y(2)1376 1797 y FB(\))17 b Ft(;)370
1924 y(P)401 1931 y Fr(3)437 1924 y FB(=)11 b Fs(\000)541
1891 y FB(\003)575 1873 y Fr(2)575 1905 y(3)p 541 1913
V 544 1958 a FB(64)609 1884 y Fk(\000)632 1924 y Ft(x)g
Fs(\000)f Ft(u)748 1884 y Fk(\001)771 1895 y Fr(2)803
1924 y Fs(\000)858 1891 y FB(\003)892 1873 y Fr(2)892
1905 y(3)p 858 1913 V 861 1958 a FB(64)927 1884 y Fk(\000)949
1924 y Ft(x)h Fs(\000)g Ft(u)1066 1884 y Fk(\001\000)1111
1924 y Ft(m)1154 1904 y Fr(2)1154 1937 y(1)1186 1924
y FB(+)g Ft(m)1278 1904 y Fr(2)1278 1937 y(2)1310 1924
y FB(+)h Ft(m)1403 1904 y Fr(2)1403 1937 y(3)1423 1884
y Fk(\001)583 2051 y FB(+)637 2018 y(\003)671 2025 y
Fr(3)p 637 2040 V 653 2086 a FB(4)697 2051 y Ft(m)740
2058 y Fr(1)761 2051 y Ft(m)804 2058 y Fr(2)825 2051
y Ft(m)868 2058 y Fr(3)889 2051 y Ft(x)f Fs(\000)983
2018 y FB(\003)1017 2000 y Fr(2)1017 2032 y(3)p 983 2040
V 986 2086 a FB(64)1043 2011 y Fk(\000)1066 2051 y Ft(m)1109
2031 y Fr(2)1109 2064 y(1)1130 2051 y Ft(m)1173 2031
y Fr(2)1173 2064 y(2)1205 2051 y FB(+)g Ft(m)1297 2031
y Fr(2)1297 2064 y(1)1318 2051 y Ft(m)1361 2031 y Fr(2)1361
2064 y(3)1393 2051 y FB(+)g Ft(m)1485 2031 y Fr(2)1485
2064 y(2)1506 2051 y Ft(m)1549 2031 y Fr(2)1549 2064
y(3)1570 2011 y Fk(\001)1609 2051 y Ft(:)1892 1789 y
FB(\(2)p Ft(:)p FB(2\))0 2184 y(The)16 b(masses)f(of)g(the)h(so)g
(called)e(BPS)i(states,)g(whic)o(h)e(come)g(in)i(short)g(represen)o
(tations)f(of)h(the)f(sup)q(ersym-)0 2246 y(metry)f(algebra,)j(can)f(b)
q(e)g(computed)f(using)i(the)f(fundamen)o(tal)f(form)o(ula)476
2407 y Ft(M)523 2415 y Fr(BPS)600 2407 y FB(\()p Ft(u)p
FB(\))f(=)732 2363 y Fs(p)p 773 2363 25 2 v 773 2407
a FB(2)814 2320 y Fk(\014)814 2350 y(\014)814 2379 y(\014)814
2409 y(\014)814 2439 y(\014)831 2407 y Ft(n)860 2414
y Fu(m)896 2407 y Ft(a)922 2415 y Fu(D)956 2407 y FB(\()p
Ft(u)p FB(\))d Fs(\000)g Ft(n)1112 2414 y Fu(e)1132 2407
y Ft(a)p FB(\()p Ft(u)p FB(\))f(+)1283 2359 y Fk(X)1313
2467 y Fu(i)1363 2407 y Ft(s)1386 2414 y Fu(i)1411 2373
y Ft(m)1454 2380 y Fu(i)p 1407 2395 66 2 v 1407 2405
a Fs(p)p 1448 2405 25 2 v 1448 2447 a FB(2)1477 2320
y Fk(\014)1477 2350 y(\014)1477 2379 y(\014)1477 2409
y(\014)1477 2439 y(\014)1502 2407 y Fs(\001)376 b FB(\(2)p
Ft(:)p FB(3\))0 2570 y(In)16 b(this)h(expression,)f Ft(n)435
2577 y Fu(e)472 2570 y FB(and)h Ft(n)596 2577 y Fu(m)649
2570 y FB(are)f(t)o(w)o(o)h(in)o(tegers)f(represen)o(ting)f(the)i
(electric)d(and)j(magnetic)e(c)o(harges)0 2633 y(of)h(the)g(state,)g
(and)h(the)e Ft(s)473 2640 y Fu(i)505 2633 y FB(are)h(in)o(tegers)f(or)
h(half-in)o(tegers)g(whic)o(h)f(corresp)q(ond)i(to)f(constan)o(t)h
(parts)f(of)h(the)p 0 2709 698 2 v 58 2758 a Fq(?)k Fp(This)13
b(relation)h(is)f(only)h(v)n(alid)e(up)i(to)g(a)f(constan)o(t)i(shift)e
(in)h(the)g(general)g(case)h([13].)986 2883 y(4)p eop
%%Page: 6 6
6 5 bop 0 160 a FB(ph)o(ysical)15 b(bary)o(onic)g(c)o(harges)g([2,8].)
21 b(If)15 b Ft(\025)h FB(is)f(a)h(meromorphic)d(di\013eren)o(tial)h
(on)i(the)g(curv)o(e)e(\(2.1\))i(suc)o(h)f(that)861 270
y Ft(@)s(\025)p 861 292 57 2 v 861 338 a(@)s(u)937 304
y FB(=)994 229 y Fs(p)p 1035 229 25 2 v 1035 270 a FB(2)p
994 292 66 2 v 1000 338 a(8)p Ft(\031)1078 270 y(dx)p
1078 292 54 2 v 1092 338 a(y)1892 304 y FB(\(2)p Ft(:)p
FB(4\))0 435 y(then)h(the)g(v)m(ariables)g Ft(a)g FB(and)h
Ft(a)560 443 y Fu(D)611 435 y FB(are)f(giv)o(en)f(b)o(y)h(the)g(con)o
(tour)g(in)o(tegrals)741 565 y Ft(a)e FB(=)833 498 y
Fk(I)828 638 y Fu(\015)848 642 y Fn(1)891 565 y Ft(\025)49
b(;)57 b(a)1065 574 y Fu(D)1113 565 y FB(=)1165 498 y
Fk(I)1160 638 y Fu(\015)1180 642 y Fn(2)1223 565 y Ft(\025)641
b FB(\(2)p Ft(:)p FB(5\))0 741 y(for)17 b(a)f(certain)g(homology)g
(basis)h(\()p Ft(\015)663 748 y Fr(1)684 741 y Ft(;)8
b(\015)731 748 y Fr(2)753 741 y FB(\).)21 b(The)16 b(BPS)h(mass)e(form)
o(ula)g(\(2.3\))i(is)f(compatible)e(with)i(dualit)o(y)0
803 y(transformations)g(of)h(the)f(form)364 861 y Fk(0)364
949 y(B)364 981 y(@)452 893 y Ft(a)478 901 y Fu(D)469
976 y Ft(a)416 1059 y(m=)483 1018 y Fs(p)p 524 1018 25
2 v 524 1059 a FB(2)557 861 y Fk(1)557 949 y(C)557 981
y(A)614 976 y Fs(\000)-8 b(!)14 b Ft(M)769 861 y Fk(0)769
949 y(B)769 981 y(@)857 893 y Ft(a)883 901 y Fu(D)875
976 y Ft(a)821 1059 y(m=)888 1018 y Fs(p)p 930 1018 V
41 x FB(2)962 861 y Fk(1)962 949 y(C)962 981 y(A)1031
976 y Ft(;)1101 861 y Fk(0)1101 949 y(B)1101 981 y(@)1161
893 y Ft(n)1190 900 y Fu(e)1153 976 y Ft(n)1182 983 y
Fu(m)1174 1059 y Ft(s)1226 861 y Fk(1)1226 949 y(C)1226
981 y(A)1284 976 y Fs(\000)-9 b(!)14 b Ft(M)1430 956
y Fm(\003)1460 861 y Fk(0)1460 949 y(B)1460 981 y(@)1520
893 y Ft(n)1549 900 y Fu(e)1512 976 y Ft(n)1541 983 y
Fu(m)1533 1059 y Ft(s)1585 861 y Fk(1)1585 949 y(C)1585
981 y(A)1892 976 y FB(\(2)p Ft(:)p FB(6\))0 1159 y(where)389
1303 y Ft(M)19 b FB(=)507 1188 y Fk(0)507 1275 y(B)507
1307 y(@)559 1220 y Ft(\013)49 b(\014)i(f)561 1303 y(\015)56
b(\016)g(g)562 1386 y FB(0)g(0)f(1)756 1188 y Fk(1)756
1275 y(C)756 1307 y(A)824 1303 y Ft(;)i(M)947 1282 y
Fm(\003)982 1303 y FB(=)1034 1188 y Fk(0)1034 1275 y(B)1034
1307 y(@)1157 1220 y Ft(\013)191 b(\014)120 b FB(0)1159
1303 y Ft(\015)198 b(\016)123 b FB(0)1086 1386 y Ft(\013g)13
b Fs(\000)e Ft(\015)s(f)54 b(\014)s(g)13 b Fs(\000)e
Ft(\016)r(f)53 b FB(1)1560 1188 y Fk(1)1560 1275 y(C)1560
1307 y(A)1892 1303 y FB(\(2)p Ft(:)p FB(7\))0 1471 y(with)15
b Ft(\013)p FB(,)f Ft(\014)s FB(,)g Ft(\015)s FB(,)h
Ft(\016)h FB(in)o(tegers)e(suc)o(h)g(that)h(det)8 b Ft(M)20
b FB(=)13 b(1)i(and)h Ft(f)5 b FB(,)14 b Ft(g)j FB(in)o(tegers)d(or)h
(half-in)o(tegers.)20 b(Note)15 b(the)f(useful)0 1533
y(relations)510 1573 y Fk(\000)533 1614 y Ft(M)580 1621
y Fr(1)601 1614 y Ft(M)648 1621 y Fr(2)670 1573 y Fk(\001)693
1584 y Fm(\003)728 1614 y FB(=)f Ft(M)831 1593 y Fm(\003)826
1626 y Fr(1)853 1614 y Ft(M)905 1593 y Fm(\003)900 1626
y Fr(2)976 1614 y Ft(;)1046 1573 y Fk(\000)1069 1614
y Ft(M)1121 1593 y Fm(\003)1143 1573 y Fk(\001)1166 1584
y Fm(\000)p Fr(1)1230 1614 y FB(=)1282 1573 y Fk(\000)1305
1614 y Ft(M)1357 1593 y Fm(\000)p Fr(1)1409 1573 y Fk(\001)1431
1584 y Fm(\003)1469 1614 y Ft(:)409 b FB(\(2)p Ft(:)p
FB(8\))0 1709 y(One)20 b(particularly)g(imp)q(ortan)o(t)g(class)g(of)h
(dualit)o(y)f(transformations)h(corresp)q(onds)h(to)f(the)f(mono)q
(drom)o(y)0 1771 y(transformations)g Ft(a)g FB(and)h
Ft(a)526 1780 y Fu(D)580 1771 y FB(undergo)g(when)f(encircling)e(a)j
(singularit)o(y)e(in)g(the)h Ft(u)g FB(plane.)32 b(These)20
b(sin-)0 1834 y(gularities)e(are)h(due)g(to)h(dy)o(ons)f(\()p
Ft(n)645 1841 y Fu(e)665 1834 y Ft(;)8 b(n)716 1841 y
Fu(m)752 1834 y FB(\))771 1815 y Fm(\002)p Fu(d)771 1846
y(s)842 1834 y FB(lying)18 b(in)h(a)g Ft(d)p FB(-dimensional)f
(represen)o(tation)g(of)i(the)f(\015a)o(v)o(our)0 1896
y(group)j(b)q(ecoming)f(massless)g(and)h(o)q(ccur)g(when)f(the)g(curv)o
(e)g(\(2.1\))h(has)g(a)g(v)m(anishing)g(cycle,)f(i.e.)35
b(when)0 1958 y(the)17 b(discriminan)o(t)d(of)k(the)e(corresp)q(onding)
i(p)q(olynomial)e(\(2.2\))i(v)m(anishes.)24 b(When)17
b(all)f(the)h Fv(non-zer)n(o)g FB(bare)0 2020 y(masses)c(are)g(equal,)g
(whic)o(h)f(is)h(the)g(only)g(case)g(w)o(e)g(will)f(study)i(in)e(the)h
(follo)o(wing)g(for)h(the)f(seek)f(of)i(simplicit)n(y)l(,)0
2082 y(the)i(mass)g(term)e(in)i(\(2.3\))h(is)f(of)g(the)g(form)f
Ft(ms=)887 2041 y Fs(p)p 929 2041 V 41 x FB(2,)h(and)h(the)f(mono)q
(drom)o(y)f(matrices)f(then)i(read)431 2268 y Ft(M)478
2284 y Fr(\()p Fu(n)516 2288 y Fl(e)533 2284 y Fu(;n)567
2288 y Fl(m)596 2284 y Fr(\))611 2268 y Fj(\002)p Fl(d)611
2289 y(s)669 2268 y FB(=)721 2153 y Fk(0)721 2240 y(B)721
2272 y(@)773 2185 y FB(1)c Fs(\000)e Ft(dn)912 2192 y
Fu(e)933 2185 y Ft(n)962 2192 y Fu(m)1121 2185 y Ft(dn)1175
2167 y Fr(2)1175 2197 y Fu(e)1327 2185 y Fs(\000)p Ft(dn)1420
2192 y Fu(e)1440 2185 y Ft(s)821 2268 y Fs(\000)p Ft(dn)914
2250 y Fr(2)914 2280 y Fu(m)1046 2268 y FB(1)i(+)f Ft(dn)1185
2275 y Fu(m)1221 2268 y Ft(n)1250 2275 y Fu(e)1319 2268
y Fs(\000)p Ft(dn)1412 2275 y Fu(m)1448 2268 y Ft(s)873
2351 y FB(0)249 b(0)213 b(1)1480 2153 y Fk(1)1480 2240
y(C)1480 2272 y(A)1548 2268 y Ft(;)431 2501 y(M)483 2480
y Fm(\003)478 2522 y Fr(\()p Fu(n)516 2526 y Fl(e)533
2522 y Fu(;n)567 2526 y Fl(m)596 2522 y Fr(\))611 2505
y Fj(\002)p Fl(d)611 2526 y(s)669 2501 y FB(=)721 2386
y Fk(0)721 2473 y(B)721 2505 y(@)773 2418 y FB(1)12 b
Fs(\000)e Ft(dn)912 2425 y Fu(e)933 2418 y Ft(n)962 2425
y Fu(m)1121 2418 y Ft(dn)1175 2400 y Fr(2)1175 2430 y
Fu(e)1319 2418 y FB(0)821 2501 y Fs(\000)p Ft(dn)914
2483 y Fr(2)914 2513 y Fu(m)1046 2501 y FB(1)i(+)f Ft(dn)1185
2508 y Fu(m)1221 2501 y Ft(n)1250 2508 y Fu(e)1319 2501
y FB(0)809 2584 y Fs(\000)p Ft(dsn)925 2591 y Fu(m)1110
2584 y Ft(dsn)1187 2591 y Fu(e)1319 2584 y FB(1)1352
2386 y Fk(1)1352 2473 y(C)1352 2505 y(A)1420 2501 y Ft(:)1892
2384 y FB(\(2)p Ft(:)p FB(9\))0 2684 y(When)19 b(t)o(w)o(o)g
(singularities)f(coincide,)g(the)h(mono)q(drom)o(y)e(is)i(giv)o(en)f(b)
o(y)h(the)f(pro)q(duct)i(of)f(t)o(w)o(o)g(matrices)e(of)0
2746 y(the)f(t)o(yp)q(e)h(\(2.9\).)23 b(Note)16 b(that)h(the)g(fact)f
(that)h Ft(a)g FB(and)g Ft(a)1007 2754 y Fu(D)1058 2746
y FB(pic)o(k)f(up)h(constan)o(ts)g(m)o(ultiple)c(of)18
b Ft(m=)p FB(2)1788 2705 y Fs(p)p 1829 2705 V 1829 2746
a FB(2)g(under)986 2883 y Fp(5)p eop
%%Page: 7 7
7 6 bop 0 160 a FB(mono)q(drom)o(y)13 b(transformations)j(is)f(p)q
(ossible)g(b)q(ecause)g(the)g(di\013eren)o(tial)f Ft(\025)h
FB(has)h(p)q(oles)f(with)g(residues)g(suc)o(h)0 222 y(that)646
311 y(2)p Ft(\031)r(i)h FB(res)p Ft(\025)e FB(=)887 264
y Fk(X)916 371 y Fu(i)967 311 y Ft(t)985 318 y Fu(i)1009
277 y Ft(m)1052 284 y Fu(i)p 1005 299 66 2 v 1005 309
a Fs(p)p 1046 309 25 2 v 1046 351 a FB(2)1092 303 y(,)1154
311 y Ft(t)1172 318 y Fu(i)1201 311 y Fs(2)1253 277 y
FB(1)p 1253 299 V 1253 345 a(2)1282 311 y Fo(Z)j Ft(:)521
b FB(\(2)p Ft(:)p FB(10\))28 507 y Fw(2.1.)36 b Fo(R)n(G)19
b(\015o)n(ws)h(and)f(sup)r(erconformal)e(p)r(oin)n(ts)83
616 y FB(The)k(theories)g(for)g(di\013eren)o(t)f Ft(N)690
625 y Fu(f)736 616 y FB(are)h(related)f(b)o(y)h(the)g(renormalization)e
(group)j(\015o)o(w)f(when)h(some)0 679 y(of)f(the)g(bare)h(masses)e(of)
i(the)f(h)o(yp)q(erm)o(ultiple)o(ts)e(are)i(sen)o(t)g(to)g(in\014nit)o
(y)f(and)i(the)f(corresp)q(onding)h(states)0 741 y(can)h(b)q(e)h(in)o
(tegrated)f(out)h(\(see)e(App)q(endices)h(A)g(and)h(C\).)f(F)l(or)g
(instance,)i(if)d(w)o(e)h(let)g Ft(m)1686 748 y Fr(3)1733
741 y Fs(!)i(1)e FB(while)0 803 y(k)o(eeping)d(\003)215
785 y Fr(2)215 817 y(2)258 803 y FB(=)i Ft(m)361 810
y Fr(3)382 803 y FB(\003)416 810 y Fr(3)458 803 y FB(\014xed,)g(the)e
(p)q(olynomial)g Ft(P)972 810 y Fr(3)1015 803 y FB(in)h(\(2.2\))g
(\015o)o(ws)h(to)f Ft(P)1419 810 y Fr(2)1441 803 y FB(.)35
b(Another)21 b(\015o)o(w)h(whic)o(h)e(w)o(e)0 865 y(will)h(study)h(in)f
(great)h(details)f(in)h(the)f(follo)o(wing)h(is)f Ft(m)1051
872 y Fr(1)1095 865 y FB(=)j Ft(m)1200 872 y Fr(2)1244
865 y FB(=)f Ft(m)g Fs(!)g(1)e FB(with)h Ft(m)p FB(\003)1709
872 y Fr(2)1753 865 y FB(=)h(\003)1848 847 y Fr(2)1848
879 y(0)1891 865 y FB(\014xed)0 927 y(whic)o(h)c(allo)o(ws)h(to)g
(obtain)g(the)f Ft(N)636 936 y Fu(f)680 927 y FB(=)h(0)g(theory)f
(directly)f(from)h(the)g Ft(N)1364 936 y Fu(f)1409 927
y FB(=)g(2)h(theory)l(.)31 b(A)20 b(particularly)0 990
y(imp)q(ortan)o(t)c(phenomenon)g(that)i(m)o(ust)d(o)q(ccur)i(during)h
(the)e(R)o(G)h(\015o)o(w)g(is)g(that)g(the)g(quan)o(tum)f(n)o(um)o(b)q
(ers)f(of)0 1052 y(some)i(of)h(the)g(particles)f(b)q(ecoming)g
(massless)g(c)o(hange.)26 b(T)o(ypically)l(,)16 b(when)i
Ft(m)e Fs(!)h(1)g FB(some)g(singularities)0 1114 y(are)23
b(at)f(w)o(eak)h(coupling)f(and)h(corresp)q(ond)h(to)e(elemen)o(tary)e
(quarks)j(b)q(ecoming)e(massless)h(while)f(when)0 1176
y Ft(m)15 b Fs(!)g FB(0)j(these)e(singularities)h(mo)o(v)o(e)d(to)o(w)o
(ards)k(the)f(strongly)g(coupled)g(region)g(where)g(only)g
(magnetically)0 1238 y(c)o(harged)j(states)g(can)g(b)q(ecome)f
(massless.)31 b(The)20 b(transformation)g(of)g(the)g(quan)o(tum)e(n)o
(um)o(b)q(ers)h(m)o(ust)f(b)q(e)0 1300 y(implem)o(en)o(te)o(d)f(b)o(y)i
(a)g(SL\(2)p Ft(;)8 b Fo(Z)p FB(\))21 b(matrix)c Ft(U)5
b FB(.)31 b(Since)19 b(the)g(electric)e(and)j(magnetic)d(quan)o(tum)h
(n)o(um)o(b)q(ers)g(of)0 1363 y(the)13 b(singularities)g(at)h
Ft(m)g FB(=)g(0)g(can)f(in)h(general)f(b)q(e)h(deduced)f(on)h(ph)o
(ysical)f(grounds,)i(b)o(y)e(using)h(for)g(instance)0
1425 y(the)19 b(discrete)g(symmetr)o(y)e(acting)i(on)h(the)g(Coulom)o
(b)e(branc)o(h)i(when)f(it)g(exists,)g(the)h(general)f(form)f(of)i
Ft(U)0 1487 y FB(can)e(b)q(e)h(determined)c(a)k(priori.)26
b(Tw)o(o)19 b(cases)f(can)h(then)f(arise:)25 b(either)17
b(the)h(matrix)e Ft(U)24 b FB(do)q(es)19 b(or)f(do)q(es)h(not)0
1549 y(corresp)q(ond)g(to)g(an)o(y)f(mono)q(drom)o(y)f(matrix)g(of)h
(the)g(form)g(\(2.9\).)28 b(If)17 b(it)h(do)q(es)h(not,)g(w)o(e)f(will)
g(see)g(that)g(\(for)0 1611 y(real)h Ft(m)p FB(\))h(the)f(quan)o(tum)g
(n)o(um)o(b)q(ers)f(c)o(hange)i(when)g(at)g(least)g(t)o(w)o(o)f
(singularities)g(coincide.)31 b(Suc)o(h)19 b(p)q(oin)o(ts)0
1673 y(w)o(ere)i(disco)o(v)o(ered)f(b)o(y)h(insp)q(ection)h(in)f([7].)
37 b(The)22 b(lo)o(w)f(energy)h(theory)f(at)h(these)g(p)q(oin)o(ts)g
(is)f(b)q(eliev)o(ed)f(to)0 1736 y(corresp)q(ond)f(to)f(an)g(in)o
(teracting)f Ft(N)k FB(=)c(2)h(sup)q(erconformal)f(theory)h([6,7].)25
b(W)l(e)17 b(will)g(discuss)h(the)f(ph)o(ysics)0 1798
y(of)e(these)f(theories)g(in)g(Section)f(5,)i(but)f(let)g(us)h(righ)o
(t)f(no)o(w)g(displa)o(y)g(the)g(mono)q(drom)o(y)f(matrix)f(around)k
(suc)o(h)0 1860 y(a)k(sup)q(erconformal)f(p)q(oin)o(t,)h(discuss)f
(some)g(general)g(constrain)o(ts)h(that)f(it)g(m)o(ust)f(satisfy)i(in)f
(order)h(to)f(b)q(e)0 1922 y(compatible)f(with)i(conformal)f(in)o(v)m
(ariance,)h(and)g(determine)e(the)i(w)o(a)o(y)f(the)h(quan)o(tum)f(n)o
(um)o(b)q(ers)f(of)j(the)0 1984 y(singularities)16 b(c)o(hange.)288
2257 y @beginspecial 0 @llx 0 @lly 641 @urx 91 @ury 3401
@rwi @setspecial
%%BeginDocument: rgf1a.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-68.0 197.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% horizontal sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<000000000000000000000000000000000000000000000000
	000000000100010002800280044004400820082010101010
	20082008400440048002800200010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P21 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
75.000 slw
% Ellipse
n 3000 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 195.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 315.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 2400 m 3000 2400 l  gs col-1 s gr 
% Polyline
n 1200 2175 m 3300 2175 l  3525 2400 l  4800 2400 l  gs col-1 s gr 
% Ellipse
n 9601 2401 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 635.07 155.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 11401 2401 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 755.07 155.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 7801 2401 m 9601 2401 l  gs col-1 s gr 
% Polyline
n 7801 2176 m 9901 2176 l  10126 2401 l  11401 2401 l  gs col-1 s gr 
30.000 slw
% Polyline
n 3000 1800 m 3675 1800 l  gs col-1 s gr 
n 3315.00 1710.00 m 3675.00 1800.00 l 3315.00 1890.00 l gs col-1 s gr
% Polyline
n 4800 1800 m 4125 1800 l  gs col-1 s gr 
n 4485.00 1890.00 m 4125.00 1800.00 l 4485.00 1710.00 l gs col-1 s gr
45.000 slw
% Polyline
n 5700 2400 m 6900 2400 l  gs col-1 s gr 
n 6420.00 2280.00 m 6900.00 2400.00 l 6420.00 2520.00 l gs col-1 s gr
/Times-Roman findfont 360.00 scalefont setfont
2700 3000 m
gs 1 -1 sc (M) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3075 3225 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4575 3000 m
gs 1 -1 sc (M) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 3000 m
gs 1 -1 sc (M') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11250 3000 m
gs 1 -1 sc (M') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11625 3225 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 3225 m
gs 1 -1 sc ( 1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4875 3225 m
gs 1 -1 sc ( 2) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2371 a Fo(Fig.)24 b(1:)d FB(After)14
b(the)h(collision,)f(the)h(quan)o(tum)f(n)o(um)o(b)q(ers)g(at)h(the)g
(singularities)g(and)g(th)o(us)h(the)118 2422 y(asso)q(ciated)h(mono)q
(drom)o(y)e(matrices)f(c)o(hange)j(according)f(to)h(equations)f
(\(2.15\))h(or)g(\(2.16\).)83 2559 y(The)f(generic)f(case)h(of)g(t)o(w)
o(o)g(colliding)f(singularities)g Ft(\033)1092 2566 y
Fr(1)1129 2559 y FB(and)h Ft(\033)1251 2566 y Fr(2)1288
2559 y FB(is)g(represen)o(ted)f(in)g(Fig.)21 b(1.)g(The)16
b(sin-)0 2621 y(gularit)o(y)e Ft(\033)208 2628 y Fu(j)243
2621 y FB(whose)h(mono)q(drom)o(y)e(is)i Ft(M)748 2628
y Fu(j)783 2621 y FB(is)g(due)f(to)i Ft(d)1005 2628 y
Fu(j)1040 2621 y FB(h)o(yp)q(erm)o(ultipl)o(ets)c(\()p
Ft(p)1431 2628 y Fu(j)1452 2621 y Ft(;)c(q)1496 2628
y Fu(j)1515 2621 y FB(\))1534 2628 y Fu(s)1552 2632 y
Fl(j)1585 2621 y FB(b)q(ecoming)14 b(massless.)0 2684
y(Note)i(that)g(w)o(e)g(c)o(ho)q(ose)g Ft(\033)477 2691
y Fr(1)514 2684 y FB(to)h(b)q(e)f(b)q(elo)o(w)g(the)f(cut)h(pro)q
(duced)h(b)o(y)e Ft(\033)1253 2691 y Fr(2)1274 2684 y
FB(.)21 b(If)16 b(the)g(t)o(w)o(o)f(cuts)h(actually)g(coincide)0
2746 y(on)i(the)g(left)f(of)h Ft(\033)327 2753 y Fr(1)348
2746 y FB(,)g(this)f(will)g(mean)g(that)h(the)f(quan)o(tum)g(n)o(um)o
(b)q(ers)f(\()p Ft(p)1343 2753 y Fr(1)1365 2746 y Ft(;)8
b(q)1409 2753 y Fr(1)1430 2746 y FB(\))1449 2753 y Fu(s)1467
2757 y Fn(1)1504 2746 y FB(at)18 b Ft(\033)1593 2753
y Fr(1)1632 2746 y FB(are)g(computed)e(b)o(y)986 2883
y Fp(6)p eop
%%Page: 8 8
8 7 bop 0 160 a FB(lo)q(oking)20 b(at)f(the)g(solution)g(\()p
Ft(a)555 168 y Fu(D)590 160 y Ft(;)8 b(a)p FB(\))18 b(b)q(elo)o(w)h
(the)g(cut.)30 b(With)19 b(this)g(con)o(v)o(en)o(tion,)f(the)h(mono)q
(drom)o(y)e(at)j(the)0 222 y(sup)q(erconformal)c(p)q(oin)o(t)g(is)847
303 y Ft(M)894 310 y Fr(sc)943 303 y FB(=)e Ft(M)1042
310 y Fr(2)1063 303 y Ft(M)1110 310 y Fr(1)1131 303 y
Ft(:)723 b FB(\(2)p Ft(:)p FB(11\))0 405 y(The)16 b(eigen)o(v)m(alues)g
(of)g(this)g(matrix)f(dep)q(end)h(on)h(one)f(symplectic)d(in)o(v)m
(arian)o(t)j(in)o(teger)f(parameter)755 529 y Ft(k)g
FB(=)f Ft(d)872 536 y Fr(1)894 529 y Ft(d)919 536 y Fr(2)941
529 y FB(\()p Ft(p)984 536 y Fr(1)1005 529 y Ft(q)1027
536 y Fr(2)1059 529 y Fs(\000)d Ft(p)1133 536 y Fr(2)1155
529 y Ft(q)1177 536 y Fr(1)1198 529 y FB(\))1217 508
y Fr(2)1868 529 y FB(\(2)p Ft(:)p FB(12\))0 653 y(whic)o(h)j(is)h(suc)o
(h)g(that)g(tr)8 b Ft(M)492 660 y Fr(sc)541 653 y FB(=)13
b(2)c Fs(\000)g Ft(k)r FB(.)20 b(W)l(e)15 b(m)o(ust)f(ha)o(v)o(e)g
Ft(k)i(>)d FB(0)j(since)e(otherwise)h(the)g(particles)f(b)q(ecoming)0
715 y(massless)19 b(are)i(m)o(utually)d(lo)q(cal)i(and)h(the)f(lo)o(w)g
(energy)f(theory)i(is)f(simply)e Ft(N)26 b FB(=)20 b(2)h(sup)q(er)f
(QED)h(with)f(a)0 777 y(dual)e(photon.)28 b(Sup)q(erconformal)17
b(in)o(v)m(ariance)g(implies)e(that)k(the)f(dimensions)e(of)i
Ft(a)g FB(and)h Ft(a)1719 785 y Fu(D)1771 777 y FB(m)o(ust)e(b)q(oth)0
839 y(b)q(e)j(equal)f(to)h(one,)g(and)g(th)o(us)g(that)g(near)g(the)f
(sup)q(erconformal)g(p)q(oin)o(t)h Ft(u)1393 846 y Fm(\003)1433
839 y FB(the)g(follo)o(wing)f(expansion)h(is)0 902 y(v)m(alid)470
974 y Ft(a)496 982 y Fu(D)531 974 y FB(\()p Ft(u)p FB(\))13
b(=)p Ft(a)674 982 y Fu(D)709 974 y FB(\()p Ft(u)756
981 y Fm(\003)777 974 y FB(\))e(+)g Ft(c)877 982 y Fu(D)912
974 y FB(\()p Ft(u)f Fs(\000)h Ft(u)1047 981 y Fm(\003)1068
974 y FB(\))1087 953 y Fr(1)p Fu(=\013)1163 974 y FB(+)g
Ft(o)1235 933 y Fk(\000)1259 974 y FB(\()p Ft(u)f Fs(\000)h
Ft(u)1394 981 y Fm(\003)1415 974 y FB(\))1434 953 y Fr(1)p
Fu(=\013)1499 933 y Fk(\001)505 1057 y Ft(a)p FB(\()p
Ft(u)p FB(\))i(=)p Ft(a)p FB(\()p Ft(u)721 1064 y Fm(\003)742
1057 y FB(\))e(+)g Ft(c)p FB(\()p Ft(u)g Fs(\000)g Ft(u)978
1064 y Fm(\003)999 1057 y FB(\))1018 1036 y Fr(1)p Fu(=\013)1094
1057 y FB(+)g Ft(o)1166 1016 y Fk(\000)1189 1057 y FB(\()p
Ft(u)g Fs(\000)g Ft(u)1325 1064 y Fm(\003)1346 1057 y
FB(\))1365 1036 y Fr(1)p Fu(=\013)1430 1016 y Fk(\001)1453
1057 y Ft(;)1868 1012 y FB(\(2)p Ft(:)p FB(13\))0 1153
y(where)19 b Ft(c)165 1162 y Fu(D)219 1153 y FB(and)h
Ft(c)g FB(are)f(constan)o(ts)h(and)g Ft(\013)g FB(is)f(the)g(anomalous)
h(dimension)d(of)j(the)f(op)q(erator)i Ft(u)p FB(.)30
b(This)20 b(is)0 1216 y(p)q(ossible)f(only)g(if)f(the)h(eigen)o(v)m
(alues)e(of)j Ft(M)790 1223 y Fr(sc)843 1216 y FB(are)f(of)g(mo)q
(dulus)f(one,)i(whic)o(h)e(rules)g(out)h(the)g(cases)g
Ft(k)h(>)f FB(4.)0 1278 y(Moreo)o(v)o(er,)e(when)h Ft(k)h
FB(=)e(4,)i Ft(M)562 1285 y Fr(sc)615 1278 y FB(is,)f(up)g(to)g(a)h
(global)g(sign,)f(conjugate)h(to)f(a)h(certain)e(non-zero)i(p)q(o)o(w)o
(er)f(of)0 1340 y Ft(T)7 b FB(.)28 b(This)19 b(w)o(ould)g(b)q(e)g(the)g
(signal)g(of)g(logarithmic)e(terms)g(in)h(the)h(asymptotic)f(expansion)
h(of)g Ft(a)f FB(and)i Ft(a)1945 1349 y Fu(D)1979 1340
y FB(,)0 1402 y(whic)o(h)e(again)h(are)g(ruled)f(out)h(b)o(y)g
(conformal)e(in)o(v)m(ariance.)28 b(Th)o(us)19 b(w)o(e)f(conclude)g
(that)h(1)f Fs(\024)g Ft(k)i Fs(\024)e FB(3.)29 b(The)0
1465 y(three)14 b(allo)o(w)o(ed)g(v)m(alues)h(of)g Ft(k)i
FB(corresp)q(ond)f(to)f(three)f(inequiv)m(alen)o(t)f(SCFT.)i(W)l(e)g
(will)f(bring)h(some)e(evidence)0 1527 y(in)18 b(Section)g(4)h(that)g
(the)f(SCFT)h(is)g(actually)f(\(fully\))f(c)o(haracterized)g(b)o(y)h
(this)g(in)o(teger)g Ft(k)r FB(,)h(b)o(y)f(computing)0
1589 y(critical)d(exp)q(onen)o(ts)h(as)h(functions)f(of)h
Ft(k)r FB(.)83 1670 y(Denoting)j(with)g(a)g(prime)d(the)j(quan)o
(tities)e(corresp)q(onding)j(to)f(the)f(new)h(quan)o(tum)e(n)o(um)o(b)q
(ers)h(after)0 1732 y(the)d(collision)f(of)i(the)f(singularities,)f(as)
i(indicated)e(in)h(Fig.)21 b(1,)16 b(one)h(m)o(ust)d(ha)o(v)o(e)820
1856 y Ft(M)867 1863 y Fr(2)888 1856 y Ft(M)935 1863
y Fr(1)971 1856 y FB(=)f Ft(M)1074 1836 y Fm(0)1069 1868
y Fr(2)1091 1856 y Ft(M)1143 1836 y Fm(0)1138 1868 y
Fr(1)1159 1856 y Ft(:)695 b FB(\(2)p Ft(:)p FB(14\))0
1980 y(The)18 b(m)o(ultiplic)o(it)o(y)c Ft(d)390 1987
y Fu(j)429 1980 y FB(of)k(a)h(giv)o(en)e(singularit)o(y)g
Ft(\033)929 1987 y Fu(j)949 1980 y FB(,)h(whic)o(h)f(can)i(b)q(e)f
(directly)e(read)i(o\013)h(the)f(discriminan)o(t)0 2042
y(of)f(the)f(relev)m(an)o(t)g(p)q(olynomial)g(\(2.1\),)g(\(2.2\),)h
(cannot)g(c)o(hange)g(at)g(the)f(sup)q(erconformal)h(p)q(oin)o(t.)22
b(Th)o(us)17 b(one)0 2104 y(m)o(ust)e(either)g(ha)o(v)o(e)h
Ft(d)397 2111 y Fu(j)431 2104 y FB(=)d Ft(d)507 2086
y Fm(0)507 2119 y Fu(j)528 2104 y FB(,)i(in)h(whic)o(h)g(case)g
(\(2.14\))h(can)f(b)q(e)h(solv)o(ed)e(non)i(trivially)e(b)o(y)615
2237 y Ft(M)667 2216 y Fm(0)662 2249 y Fu(j)696 2237
y FB(=)f Ft(U)5 b(M)833 2244 y Fu(j)853 2237 y Ft(U)891
2216 y Fm(\000)p Fr(1)942 2237 y Ft(;)57 b FB(with)49
b Ft(U)19 b FB(=)14 b Ft(M)1313 2216 y Fm(\000)p Fr(1)1308
2249 y Fu(sc)1364 2237 y Ft(;)490 b FB(\(2)p Ft(:)p FB(15\))0
2361 y(or)17 b Ft(d)85 2343 y Fm(0)85 2375 y Fr(1)120
2361 y FB(=)d Ft(d)197 2368 y Fr(2)218 2361 y FB(,)i
Ft(d)273 2343 y Fm(0)273 2375 y Fr(2)309 2361 y FB(=)d
Ft(d)385 2368 y Fr(1)407 2361 y FB(,)j(in)g(whic)o(h)f(case)i(\(2.14\))
g(can)f(b)q(e)g(solv)o(ed)g(b)o(y)256 2486 y Ft(M)308
2466 y Fm(0)303 2498 y Fr(1)339 2486 y FB(=)d Ft(U)5
b(M)475 2493 y Fr(2)497 2486 y Ft(U)535 2466 y Fm(\000)p
Fr(1)587 2486 y Ft(;)56 b(M)709 2466 y Fm(0)704 2498
y Fr(2)740 2486 y FB(=)13 b Ft(U)5 b(M)876 2493 y Fr(1)898
2486 y Ft(U)936 2466 y Fm(\000)p Fr(1)988 2486 y Ft(;)56
b FB(with)49 b Ft(U)19 b FB(=)14 b Ft(M)1358 2466 y Fm(\000)p
Fr(1)1353 2501 y(1)1458 2486 y FB(or)49 b Ft(U)19 b FB(=)14
b Ft(M)1701 2493 y Fr(2)1723 2486 y Ft(:)131 b FB(\(2)p
Ft(:)p FB(16\))0 2610 y(The)17 b(quan)o(tum)e(n)o(um)o(b)q(ers)h(are)g
(then)h(c)o(hanged)g(according)g(to)g(the)g(matrix)e
Ft(U)1449 2592 y Fm(\003)1470 2610 y FB(,)i(see)f(\(2.7\).)23
b(When)17 b Ft(k)g FB(=)e(3,)0 2672 y(there)f(is)h(another)h(consisten)
o(t)e(solution)h(to)h(\(2.14\),)f(whic)o(h)f(corresp)q(onds)j(to)e
Ft(U)k FB(=)14 b Ft(I)e FB(+)c Ft(M)1668 2654 y Fm(\000)p
Fr(1)1663 2684 y(sc)1735 2672 y FB(if)14 b Ft(d)1803
2679 y Fu(j)1837 2672 y FB(=)g Ft(d)1914 2654 y Fm(0)1914
2687 y Fu(j)1949 2672 y FB(or)0 2743 y(to)i Ft(U)j FB(=)14
b Ft(M)215 2723 y Fm(\000)p Fr(1)210 2758 y(1)277 2743
y FB(+)c Ft(M)372 2750 y Fr(2)409 2743 y FB(if)16 b Ft(d)479
2725 y Fm(0)479 2757 y Fr(1)514 2743 y FB(=)e Ft(d)591
2750 y Fr(2)613 2743 y FB(.)21 b(The)16 b(matrix)e Ft(U)21
b FB(is)15 b(then)h(not)g(of)h(the)e(form)g(\(2.7\),)h(but)g(its)f(2)c
Fs(\002)f FB(2)16 b(upp)q(er)986 2883 y Fp(7)p eop
%%Page: 9 9
9 8 bop 0 165 a FB(left)13 b(blo)q(c)o(k)g(part)h(is)g(still)f(in)g
(SL\(2)p Ft(;)8 b Fo(Z)p FB(\).)686 135 y Fu(?)729 165
y FB(The)13 b(corresp)q(onding)i(matrix)d Ft(U)1331 147
y Fm(\003)1367 165 y FB(can)i(then)f(b)q(e)h(straigh)o(tforw)o(ardly)0
227 y(deduced)20 b(b)o(y)f(equating)i(the)f(cen)o(tral)f(c)o(harges)h
(of)h(the)f(original)g(and)h(image)e(states.)34 b(This)20
b(latter)g(case,)0 290 y(with)13 b Ft(d)133 272 y Fm(0)133
304 y Fr(1)169 290 y FB(=)h Ft(d)246 297 y Fr(2)267 290
y FB(,)g(is)f(actually)g(realized)f(in)i(the)f Ft(N)875
299 y Fu(f)914 290 y FB(=)g(3)h(theory)g(with)f(three)g(equal)g(masses)
g(whic)o(h)g(w)o(e)g(study)0 353 y(in)j(the)g(next)g(subsection.)28
495 y Fw(2.2.)36 b Fo(R)n(G)19 b(\015o)n(ws)h(and)f(analytic)f
(structure)83 626 y FB(In)e(Fig.)k(2,)c(w)o(e)g(ha)o(v)o(e)f(reprensen)
o(ted)f(three)i(di\013eren)o(t)f(R)o(G)g(\015o)o(ws)i(whic)o(h)e
(illustrate)g(the)g(discussion)h(of)0 689 y(the)g(previous)g
(subsection.)83 775 y(The)11 b(\014rst)g(case)g(corresp)q(onds)h(to)f
(the)g(\015o)o(w)g(from)f(the)h Ft(N)1090 784 y Fu(f)1128
775 y FB(=)j(2)d(theory)g(to)g(the)g Ft(N)1535 784 y
Fu(f)1573 775 y FB(=)j(1)e(theory)e(obtained)0 838 y(b)o(y)19
b(sending)g Ft(m)293 845 y Fr(2)333 838 y FB(to)h(in\014nit)o(y)e
(while)g(k)o(eeping)g Ft(m)919 845 y Fr(2)940 838 y FB(\003)974
820 y Fr(2)974 852 y(2)1014 838 y FB(=)h(\003)1105 820
y Fr(3)1105 852 y(3)1146 838 y FB(\014xed,)g(and)h Ft(m)1422
845 y Fr(1)1461 838 y FB(=)f(0.)31 b(No)19 b(sup)q(erconformal)0
901 y(p)q(oin)o(t)h(is)h(needed)e(in)h(this)h(case.)33
b(The)21 b(dy)o(on)f(singularit)o(y)g(\(1)p Ft(;)8 b
FB(1\))1228 908 y Fr(1)1270 901 y FB(c)o(hanges)20 b(to)h(one)g(comp)q
(onen)o(t)e(of)i(the)0 964 y(elemen)o(tary)c(quark)j(\(1)p
Ft(;)8 b FB(0\))503 971 y Fr(1)545 964 y FB(when)20 b(crossing)h(the)f
(cut)g(pro)q(duced)g(b)o(y)g(the)g(\(0)p Ft(;)8 b FB(1\))1525
971 y Fr(0)1567 964 y FB(singularit)o(y)19 b(as)i Ft(m)1919
971 y Fr(2)1960 964 y FB(is)0 1027 y(increased.)f(In)12
b(order)h(to)h(reco)o(v)o(er)d(a)i(more)f(con)o(v)o(en)o(tional)f
(analytic)i(structure)f(in)h(the)g Ft(m)1631 1034 y Fr(2)1665
1027 y Fs(!)h(1)f FB(limit,)d(one)0 1090 y(can)16 b(mo)o(v)o(e)d(the)i
(cut)h(originating)g(at)f(\(1)p Ft(;)8 b FB(0\))793 1097
y Fr(1)831 1090 y FB(to)16 b(the)f(righ)o(t)g(as)h(indicated)f(in)g
(the)h(Figure.)k(Ph)o(ysically)l(,)14 b(this)0 1152 y(simply)g(amoun)o
(ts)h(to)h(shifting)g(the)f Ft(\022)i FB(angle)f(b)o(y)f(an)h(in)o
(teger)f(m)o(ultiple)e(of)j(2)p Ft(\031)h FB(in)f(the)f(upp)q(er)h
(half)g Ft(u)p FB(-plane,)0 1215 y(whic)o(h)i(is)h(an)g(unph)o(ysical)f
(transformation.)28 b(Mathematically)l(,)16 b(one)j(k)o(eeps)f(the)g
(solution)h(\()p Ft(a)1771 1224 y Fu(D)1806 1215 y Ft(;)8
b(a)p FB(\))18 b(\014xed)0 1278 y(for)f Fs(=)p Ft(m)7
b(u)14 b(<)g FB(0)i(and)h(p)q(erforms)f(the)g(transformation)629
1373 y Fk(0)629 1461 y(B)629 1493 y(@)717 1405 y Ft(a)743
1414 y Fu(D)734 1488 y Ft(a)681 1571 y(m=)748 1530 y
Fs(p)p 789 1530 25 2 v 789 1571 a FB(2)822 1373 y Fk(1)822
1461 y(C)822 1493 y(A)879 1488 y Fs(\000)-8 b(!)13 b
Ft(M)1025 1468 y Fm(\000)p Fr(1)1020 1507 y(\(1)p Fu(;)p
Fr(0\))1099 1511 y Fn(1)1127 1373 y Fk(0)1127 1461 y(B)1127
1493 y(@)1215 1405 y Ft(a)1241 1414 y Fu(D)1233 1488
y Ft(a)1179 1571 y(m=)1246 1530 y Fs(p)p 1288 1530 V
41 x FB(2)1320 1373 y Fk(1)1320 1461 y(C)1320 1493 y(A)1868
1488 y FB(\(2)p Ft(:)p FB(17\))0 1699 y(for)19 b Fs(=)p
Ft(m)8 b(u)18 b(>)h FB(0.)29 b(It)19 b(follo)o(ws)f(that)i(the)e(quan)o
(tum)g(n)o(um)o(b)q(ers)f(of)j(the)e(massless)g(state)h(at)h(the)e
(singularit)o(y)0 1762 y(whic)o(h)e(w)o(ere)f(\(0)p Ft(;)8
b FB(1\))360 1769 y Fr(1)398 1762 y FB(b)q(efore,)16
b(no)o(w)h(are)741 1721 y Fk(\000)764 1762 y Ft(M)816
1741 y Fm(\000)p Fr(1)811 1780 y(\(1)p Fu(;)p Fr(0\))890
1784 y Fn(1)909 1721 y Fk(\001)932 1732 y Fm(\003)953
1762 y FB(\(0)p Ft(;)8 b FB(1\))1061 1769 y Fr(1)1097
1762 y FB(=)14 b(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1296
1769 y Fr(0)1317 1762 y FB(.)83 1853 y(The)20 b(second)f(case)h
(corresp)q(onds)g(to)g(the)g(\015o)o(w)g(from)e(the)h
Ft(N)1224 1862 y Fu(f)1268 1853 y FB(=)h(3)g(theory)f(with)g(three)g
(equal)g(bare)0 1916 y(masses)d Ft(m)204 1923 y Fr(1)240
1916 y FB(=)e Ft(m)335 1923 y Fr(2)371 1916 y FB(=)g
Ft(m)466 1923 y Fr(3)502 1916 y FB(=)g Ft(m)j FB(to)g(the)f(pure)h
(gauge)g(theory)g Ft(N)1201 1925 y Fu(f)1240 1916 y FB(=)e(0.)23
b(Let)16 b(us)h(discuss)g(in)g(this)f(case)h(the)0 1979
y(quan)o(tum)e(n)o(um)o(b)q(ers)g(of)i(the)f(singularities)g(in)g(more)
f(detail.)21 b(When)16 b Ft(m)e FB(=)g(0,)j(one)f(has)h(t)o(w)o(o)g
(singularities.)0 2042 y(One)e(of)g(them)f(is)g(due)h(to)h(a)f(dy)o(on)
g(\(1)p Ft(;)8 b FB(1\))16 b(lying)e(in)h(the)g(spinorial)g(represen)o
(tation)f Fo(4)h FB(of)h(the)f(\015a)o(v)o(our)g(group)0
2109 y(Spin\(6\)=SU\(4\).)32 b(A)20 b(basis)g(for)h(this)e(represen)o
(tation)h(can)g(b)q(e)g(tak)o(en)g(to)g(b)q(e)g(\()p
Fs(j)p FB(0)p Fs(i)p Ft(;)8 b( )1612 2085 y Fm(y)1610
2125 y Fu(i)1631 2109 y Ft( )1665 2085 y Fm(y)1663 2125
y Fu(j)1684 2109 y Fs(j)p FB(0)p Fs(i)p FB(\))20 b(where)g(the)0
2187 y Ft( )34 2163 y Fm(y)32 2203 y Fu(i)53 2187 y FB(,)d(1)f
Fs(\024)f Ft(i)h Fs(\024)f Ft(N)304 2196 y Fu(f)345 2187
y FB(=)h(3,)h(are)h(the)f(fermionic)d(zero)k(mo)q(des)e(carrying)h
(\015a)o(v)o(our)h(indices)e(and)i(one)g(unit)f(of)g
Ft(s)1977 2194 y Fu(i)0 2264 y FB(c)o(harge.)142 2234
y Fm(y)189 2264 y FB(With)h(this)h(con)o(v)o(en)o(tion,)e(all)h(states)
i(with)e Ft(n)1029 2271 y Fu(m)1083 2264 y FB(=)g(1)h(and)g(o)q(dd)h
(electric)c(c)o(harge)j(will)e(lie)g(in)i(the)0 2326
y(same)f(spinorial)h(represen)o(tation)g Fo(4)p FB(,)g(while)f(states)i
(with)f Ft(n)1124 2333 y Fu(m)1178 2326 y FB(=)g(1)h(and)f(ev)o(en)f
Ft(n)1519 2333 y Fu(e)1558 2326 y FB(will)g(lie)g(in)h(the)g(other,)0
2389 y(complex)f(conjugate,)j(spinorial)f(represen)o(tation)g
Fo(4)987 2371 y Fm(\003)1008 2389 y FB(.)34 b(The)20
b(second)g(singularit)o(y)g(is)g(due)g(to)g(a)h Ft(n)1853
2396 y Fu(m)1910 2389 y FB(=)f(2)0 2452 y(\015a)o(v)o(our)e(singlet)f
(dy)o(on.)25 b(When)18 b Ft(n)634 2459 y Fu(m)686 2452
y FB(=)e(2,)i(the)f(n)o(um)o(b)q(er)f(of)i(fermionic)d(zero)i(mo)q(des)
g(is)h(doubled)f(and)h(one)p 0 2559 698 2 v 58 2608 a
Fq(?)34 b Fp(This)14 b(w)o(ould)f(not)h(b)q(e)h(the)f(case)h(for)f
Fq(k)e Fp(=)g(1)h(or)h Fq(k)f Fp(=)e(2.)60 2658 y Fi(y)22
b Fp(A)d(semiclassical)e(analysis)h(is)h(v)n(alid)e(for)h(studying)h
(the)h(\015a)o(v)o(our)e(symmetry)f(prop)q(erties)j(of)e(the)i(states)g
(b)q(ecoming)100 2708 y(massless)14 b(ev)o(en)h(at)f(strong)g(coupling)
g(b)q(ecause)i(these)g(states)f(can)g(b)q(e)g(con)o(tin)o(uously)e
(transp)q(orted)j(to)e(w)o(eak)g(coupling)100 2758 y(b)o(y)f(v)n
(arying)g Fq(u)p Fp(.)986 2883 y(8)p eop
%%Page: 10 10
10 9 bop 110 2022 a @beginspecial 0 @llx 0 @lly 1015
@urx 1091 @ury 4252 @rwi @setspecial
%%BeginDocument: rgf2a.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 1102.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% octagons
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<003fff000040008000800040010000200200001004000008
	080000041000000220000001400000008000000080000000
	800000008000000080000000800000008000000080000000
	800000008000000080000000800000008000000080000000
	400000012000000210000004080000080400001002000020
	0100004000800080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P20 exch def

% horizontal sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<000000000000000000000000000000000000000000000000
	000000000100010002800280044004400820082010101010
	20082008400440048002800200010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P21 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 18393 m 0 0 l 18052 0 l 18052 18393 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 360.00 scf sf
1200 4500 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1500 4650 m
gs 1 -1 sc (f) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1725 4500 m
gs 1 -1 sc (= 2  ,   m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2850 4650 m
gs 1 -1 sc (  1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3075 4500 m
gs 1 -1 sc ( = m  ,  m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4275 4650 m
gs 1 -1 sc (   2) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4575 4500 m
gs 1 -1 sc (  = 0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1201 9976 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1501 10126 m
gs 1 -1 sc (f) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2851 10126 m
gs 1 -1 sc (  1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1726 9976 m
gs 1 -1 sc (= 3  ,   m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4276 10126 m
gs 1 -1 sc (   ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3750 10200 m
gs 1 -1 sc (  ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3750 10125 m
gs 1 -1 sc ( 2 ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4650 10125 m
gs 1 -1 sc ( 3) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3076 9976 m
gs 1 -1 sc (  = m   =  m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4576 9976 m
gs 1 -1 sc (     =  m ) col-1 sh gr
75.000 slw
% Ellipse
n 2101 11401 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 135.07 755.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3601 11401 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 235.07 755.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1201 11401 m 3601 11401 l gs col-1 s gr 
% Ellipse
n 5400 11400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 355.00 755.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10500 11400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 695.00 755.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12000 11400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 795.00 755.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 14100 11400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 935.00 755.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 11100 m 3900 11100 l 4200 11400 l 5400 11400 l gs col-1 s gr 
% Polyline
n 9600 11400 m 10500 11400 l gs col-1 s gr 
% Polyline
n 9600 11175 m 10800 11175 l 11025 11400 l 12000 11400 l gs col-1 s gr 
% Polyline
n 9600 10950 m 12000 10950 l 12450 11400 l 14100 11400 l gs col-1 s gr 
% Polyline
45.000 slw
gs  clippath
7812 11280 m 8292 11400 l 7812 11520 l 8460 11520 l 8460 11280 l cp
clip
n 7200 11400 m 8400 11400 l gs col-1 s gr gr

% arrowhead
n 7812 11280 m 8292 11400 l 7812 11520 l  col-1 s
/Times-Roman ff 360.00 scf sf
1800 11775 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2475 12000 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3300 11775 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3975 12000 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5100 11775 m
gs 1 -1 sc (\(1,2\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5775 12000 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10200 11775 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10875 12000 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11700 11775 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12600 12000 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
13800 11775 m
gs 1 -1 sc (\(1,0\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14475 12000 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14026 526 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14701 751 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11477 18077 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12150 18300 m
gs 1 -1 sc (  -1) col-1 sh gr
% Arc
gs  clippath
17700 1125 m 17678 1619 l 17465 1173 l 17594 1808 l 17830 1760 l cp
clip
n 16200.0 1725.0 1500.0 180.0 0.0 arc
gs col-1 s gr
 gr

% arrowhead
n 17700 1125 m 17678 1619 l 17465 1173 l 17582 1149 l 17700 1125 l  cp gs 0.00 setgray ef gr  col-1 s
75.000 slw
% Ellipse
n 5400 600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 355.00 35.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 5400 3000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 355.00 195.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 5402 17702 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 355.13 1175.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10502 17702 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 695.13 1175.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12002 17702 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 795.13 1175.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 14102 17702 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 935.13 1175.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 2103 17703 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 135.20 1175.20]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3603 17703 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 235.20 1175.20]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 13800 3000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 915.00 195.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 13800 600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 915.00 35.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 6900 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 455.00 455.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10800 7575 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 715.00 500.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12600 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 835.00 435.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 2100 2025 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 135.00 130.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3600 2025 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P20 [16 0 0 -16 235.00 130.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10801 5326 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 715.07 350.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10501 2176 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 695.07 140.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

45.000 slw
% Ellipse
n 15601 2026 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 1035.07 130.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
gs  clippath
7812 1680 m 8292 1800 l 7812 1920 l 8460 1920 l 8460 1680 l cp
clip
n 7200 1800 m 8400 1800 l gs col-1 s gr gr

% arrowhead
n 7812 1680 m 8292 1800 l 7812 1920 l  col-1 s
% Polyline
gs  clippath
12051 4019 m 11626 4273 l 11881 3849 l 11423 4308 l 11592 4477 l cp
clip
n 12600 3300 m 11550 4350 l gs col-1 s gr gr

% arrowhead
n 12051 4019 m 11626 4273 l 11881 3849 l  col-1 s
% Polyline
75.000 slw
n 1202 17402 m 3902 17402 l 4202 17702 l 5402 17702 l gs col-1 s gr 
% Polyline
n 9602 17702 m 10502 17702 l gs col-1 s gr 
% Polyline
n 9602 17477 m 10802 17477 l 11027 17702 l 12002 17702 l gs col-1 s gr 
% Polyline
n 9602 17252 m 12002 17252 l 12452 17702 l 14102 17702 l gs col-1 s gr 
% Polyline
45.000 slw
gs  clippath
7814 17582 m 8294 17702 l 7814 17822 l 8462 17822 l 8462 17582 l cp
clip
n 7202 17702 m 8402 17702 l gs col-1 s gr gr

% arrowhead
n 7814 17582 m 8294 17702 l 7814 17822 l  col-1 s
% Polyline
75.000 slw
n 1203 17703 m 3603 17703 l gs col-1 s gr 
% Polyline
n 6000 6900 m 6900 6900 l gs col-1 s gr 
% Polyline
45.000 slw
n 1200 1800 m 4200 1800 l 5400 600 l gs col-1 s gr 
% Polyline
n 4200 1800 m 5400 3000 l gs col-1 s gr 
% Polyline
n 9600 1800 m 12600 1800 l 13800 600 l gs col-1 s gr 
% Polyline
n 12600 1800 m 13800 3000 l gs col-1 s gr 
% Polyline
75.000 slw
n 9601 2176 m 10501 2176 l gs col-1 s gr 
% Polyline
45.000 slw
n 6001 6526 m 9601 6526 l 10801 5326 l gs col-1 s gr 
% Polyline
n 6000 6675 m 9600 6675 l 10800 7575 l gs col-1 s gr 
% Polyline
105.000 slw
n 1200 2025 m 3600 2025 l gs col-1 s gr 
% Polyline
n 9601 2026 m 12751 2026 l gs col-1 s gr 
% Polyline
 [210] 0 sd
n 12751 2026 m 15601 2026 l gs col-1 s gr  [] 0 sd
% Polyline
 [210] 0 sd
n 12600 6600 m 17600 6600 l gs col-1 s gr  [] 0 sd
% Polyline
7.500 slw
n 1200 9000 m 18000 9000 l gs col-1 s gr 
% Polyline
n 1200 13200 m 18000 13200 l gs col-1 s gr 
/Times-Roman ff 360.00 scf sf
1800 2475 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2475 2700 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3300 2475 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3975 2700 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5700 675 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
6375 900 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5700 3075 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
6375 3300 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1202 15302 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1502 15452 m
gs 1 -1 sc (f) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2852 15452 m
gs 1 -1 sc (  1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4277 15452 m
gs 1 -1 sc (   ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3751 15526 m
gs 1 -1 sc (  ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3751 15451 m
gs 1 -1 sc ( 2 ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3077 15302 m
gs 1 -1 sc (  = m   =  m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1727 15302 m
gs 1 -1 sc (= 2  ,   m) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4651 15451 m
gs 1 -1 sc ( ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4577 15302 m
gs 1 -1 sc (      ) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1802 18077 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3302 18077 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10202 18077 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
13802 18077 m
gs 1 -1 sc (\(1,0\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14477 18302 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2477 18302 m
gs 1 -1 sc (-1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3977 18302 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5102 18077 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
5777 18302 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10877 18302 m
gs 1 -1 sc (-1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
1800 17100 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
2700 17325 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
3300 17100 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
4200 17325 m
gs 1 -1 sc (-1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10201 16876 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11701 16876 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12376 17176 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11101 17176 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14100 3075 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
14775 3300 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
15900 2100 m
gs 1 -1 sc (\(1,0\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
7275 7575 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11775 8025 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12300 6975 m
gs 1 -1 sc (\(1,0\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12975 7200 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 360.00 scf sf
6600 7350 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11100 7800 m
gs 1 -1 sc (\(0,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
11101 5401 m
gs 1 -1 sc (\(-1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
12001 5626 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10201 2626 m
gs 1 -1 sc (\(1,1\)) col-1 sh gr
/Times-Roman ff 360.00 scf sf
10876 2926 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 360.00 scf sf
16576 2401 m
gs 1 -1 sc (1) col-1 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 118 2137 a Fo(Fig.)43 b(2:)33 b FB(Sho)o(wn)22
b(are)g(three)f(di\013eren)o(t)g(R)o(G)h(\015o)o(ws)g(from)f
Ft(N)1290 2145 y Fu(f)1336 2137 y FB(to)h Ft(N)1445 2118
y Fm(0)1440 2152 y Fu(f)1489 2137 y Ft(<)h(N)1589 2145
y Fu(f)1635 2137 y FB(,)g Ft(m)g Fs(!)g(1)p FB(,)118
2224 y(\003)152 2232 y Fu(N)183 2236 y Fl(f)218 2224
y Fs(!)14 b FB(0)i(with)g(\003)467 2194 y Fr(4)p Fm(\000)p
Fu(N)551 2178 y Fj(0)547 2202 y Fl(f)467 2242 y Fu(N)502
2229 y Fj(0)498 2253 y Fl(f)582 2224 y FB(=)e(\003)668
2198 y Fr(4)p Fm(\000)p Fu(N)748 2202 y Fl(f)668 2240
y Fu(N)699 2244 y Fl(f)770 2224 y Ft(m)813 2206 y Fu(N)844
2210 y Fl(f)863 2206 y Fm(\000)p Fu(N)928 2190 y Fj(0)924
2214 y Fl(f)961 2224 y FB(\014xed.)21 b(The)16 b(upp)q(er)g(\014gure)g
(giv)o(es)f(the)g(\015o)o(w)i(from)118 2301 y Ft(N)157
2310 y Fu(f)196 2301 y FB(=)d(2)i(to)h Ft(N)392 2283
y Fm(0)387 2317 y Fu(f)425 2301 y FB(=)d(1,)i(the)g(middle)e(\014gure)i
(the)g(\015o)o(w)h Ft(N)1135 2310 y Fu(f)1173 2301 y
FB(=)d(3)j(to)f Ft(N)1369 2283 y Fm(0)1364 2317 y Fu(f)1403
2301 y FB(=)e(0)i(and)h(the)f(lo)o(w)o(er)f(one)118 2368
y Ft(N)157 2376 y Fu(f)201 2368 y FB(=)k(2)h(to)g Ft(N)409
2350 y Fm(0)404 2383 y Fu(f)448 2368 y FB(=)f(0.)31 b(In)20
b(this)f(latter)g(case)g(whic)o(h)g(will)f(b)q(e)i(studied)f(in)g
(detail)g(in)g(Section)118 2430 y(4,)d(w)o(e)g(ha)o(v)o(e)f(indicated)h
(the)f(quan)o(tum)g(n)o(um)o(b)q(ers)g(of)h(the)g(singularities)g(on)g
Fv(b)n(oth)g FB(sides)g(of)h(the)118 2479 y(branc)o(h)f(cuts.)0
2681 y(can)h(indeed)f(construct)h(SU\(4\))f(singlets)h(from)e(the)i
Fo(4)11 b Fs(\012)g Fo(4)1094 2663 y Fm(\003)1132 2681
y FB(tensor)17 b(pro)q(duct.)24 b(The)16 b(k)o(et)g(asso)q(ciated)i
(with)0 2746 y(\(1)p Ft(;)8 b FB(2\))17 b(is)f(then)g(of)h(the)f(form)
986 2883 y Fp(9)p eop
%%Page: 11 11
11 10 bop 355 175 a Fs(j)p Ft( )r Fs(i)14 b FB(=)488
120 y Fk(\020)517 175 y Ft( )551 151 y Fu(a)p Fm(y)549
190 y Fr(1)590 175 y Ft( )624 151 y Fu(a)p Fm(y)622 190
y Fr(2)663 175 y Ft( )697 151 y Fu(a)p Fm(y)695 190 y
Fr(3)747 175 y FB(+)d Ft( )830 151 y Fu(a)p Fm(y)828
190 y Fr(1)869 175 y Ft( )903 151 y Fu(b)p Fm(y)901 190
y Fr(2)938 175 y Ft( )972 151 y Fu(b)p Fm(y)970 190 y
Fr(3)1019 175 y FB(+)g Ft( )1102 151 y Fu(b)p Fm(y)1100
190 y Fr(1)1137 175 y Ft( )1171 151 y Fu(a)p Fm(y)1169
190 y Fr(2)1210 175 y Ft( )1244 151 y Fu(b)p Fm(y)1242
190 y Fr(3)1290 175 y FB(+)g Ft( )1373 151 y Fu(b)p Fm(y)1371
190 y Fr(1)1408 175 y Ft( )1442 151 y Fu(b)p Fm(y)1440
190 y Fr(2)1477 175 y Ft( )1511 151 y Fu(a)p Fm(y)1509
190 y Fr(3)1550 120 y Fk(\021)1580 175 y Fs(j)p FB(0)p
Fs(i)231 b FB(\(2)p Ft(:)p FB(18\))0 312 y(with)17 b(1)f
Fs(\024)f Ft(a;)8 b(b)15 b Fs(\024)g FB(2)j(and)g Ft(a)d
Fs(6)p FB(=)g Ft(b)p FB(.)24 b(Let)18 b Ft(s)747 319
y Fr(0)785 312 y FB(b)q(e)g(the)f Ft(s)e FB(=)1029 275
y Fk(P)1090 312 y Ft(s)1113 319 y Fu(i)1146 312 y FB(c)o(harge)i(of)g
Fs(j)p FB(0)p Fs(i)p FB(.)25 b(When)17 b Ft(m)f(>)f FB(0,)j(the)f
(\015a)o(v)o(our)0 374 y(symmetry)e(group)k(is)f(brok)o(en)g(from)f
(SU\(4\))h(to)h(SU\(3\).)27 b(W)l(e)18 b(see)g(that)g(the)g(\(1)p
Ft(;)8 b FB(1\))19 b(singularit)o(y)f(will)f(then)0 437
y(split)h(in)o(to)g(one)g(SU\(3\))g(singlet)g(of)h Ft(s)f
FB(c)o(harge)g Ft(s)881 444 y Fr(0)902 437 y FB(,)h(\(1)p
Ft(;)8 b FB(1\))1043 444 y Fu(s)1061 448 y Fn(0)1080
437 y FB(,)19 b(and)g(one)f(SU\(3\))g(v)o(ector)g(of)g
Ft(s)g FB(c)o(harge)h Ft(s)1871 444 y Fr(0)1904 437 y
FB(+)13 b(2,)0 499 y(\(1)p Ft(;)8 b FB(1\))108 506 y
Fu(s)126 510 y Fn(0)144 506 y Fr(+2)195 499 y FB(.)25
b(As)18 b(for)g(the)f(\(1)p Ft(;)8 b FB(2\))18 b(singularit)o(y)l(,)f
(is)h(m)o(ust)e(b)q(e)i(a)g(SU\(3\))f(singlet)h(of)g
Ft(s)f FB(c)o(harge)h Ft(s)1706 506 y Fr(0)1739 499 y
FB(+)12 b(3.)26 b(A)o(t)17 b(the)0 561 y(exp)q(ense)12
b(of)i(shifting)e(the)h(v)m(ariables)f Ft(a)707 570 y
Fu(D)755 561 y FB(and)h Ft(a)g FB(b)o(y)f(in)o(teger)g(m)o(ultiples)e
(of)j Ft(m=)1433 520 y Fs(p)p 1474 520 25 2 v 1474 561
a FB(2)q(,)g(that)g(is)g(to)g(sa)o(y)g(c)o(ho)q(osing)0
623 y(the)h(cycles)e(\()p Ft(\015)263 630 y Fr(1)285
623 y Ft(;)c(\015)332 630 y Fr(2)353 623 y FB(\))14 b(in)g(\(2.5\))g
(so)h(that)f(they)g(encircle)e(the)h(p)q(oles)i(with)f(non)g(zero)g
(residues)f(of)i(the)e(Seib)q(erg-)0 686 y(Witten)j(di\013eren)o(tial)f
Ft(\025)i FB(an)g(appropriate)h(n)o(um)o(b)q(er)d(of)i(times,)d(w)o(e)i
(can)h(alw)o(a)o(ys)f(c)o(ho)q(ose)h Ft(s)1662 693 y
Fr(0)1698 686 y FB(=)e(0)i(as)g(in)f(Fig.)0 748 y(2,)22
b(and)g(the)f(singularities)f(are)i(\(1)p Ft(;)8 b FB(1\))720
755 y Fr(0)741 748 y FB(,)22 b(\(1)p Ft(;)8 b FB(1\))885
755 y Fr(2)928 748 y FB(and)22 b(\(1)p Ft(;)8 b FB(2\))1136
755 y Fr(3)1158 748 y FB(.)36 b(This)21 b(is)g(a)g(natural)h(c)o(hoice)
e(b)q(ecause)h(for)0 810 y(example)14 b(the)h(\(1)p Ft(;)8
b FB(1\))382 817 y Fr(0)420 810 y FB(state)16 b(m)o(ust)f(remain)f
(stable)i(and)g(of)g(\014nite)f(mass)h(for)g(an)o(y)g
Ft(u)f FB(when)h Ft(m)e Fs(!)g(1)p FB(.)20 b(This)0 873
y(c)o(hoice)d(of)h Ft(s)h FB(c)o(harges)f(will)f(then)h(insure)g(that)g
(the)g(solution)h(\()p Ft(a)1198 881 y Fu(D)1232 873
y Ft(;)8 b(a)p FB(\))18 b(for)g(the)g Ft(N)1518 881 y
Fu(f)1560 873 y FB(=)f(3)i(theory)f(will)f(\015o)o(w)0
935 y(smo)q(othly)g(to)o(w)o(ards)i(the)e(solution)h(for)h(the)e(pure)h
(gauge)h(theory)l(,)e(without)i(pic)o(king)d(an)o(y)i(\(in\014nite\))f
(shift)0 997 y(prop)q(ortional)g(to)e Ft(m)p FB(.)21
b(When)15 b Ft(m)f FB(=)f(\003)699 1004 y Fr(3)721 997
y Ft(=)p FB(8,)i(w)o(e)g(reac)o(h)g(a)h Ft(k)g FB(=)e(3)h(sup)q
(erconformal)g(p)q(oin)o(t)h(where)f(the)g(triplet)0
1059 y(\(1)p Ft(;)8 b FB(1\))108 1039 y Fm(\002)p Fr(3)108
1074 y(2)179 1059 y FB(and)20 b(the)f(singlet)g(\(1)p
Ft(;)8 b FB(2\))630 1066 y Fr(3)671 1059 y FB(cross.)31
b(Using)19 b(the)g(form)o(ula)f(\(2.16\))h(with)h Ft(U)k
FB(=)19 b Ft(M)1652 1039 y Fm(\000)p Fr(1)1647 1083 y(\(1)p
Fu(;)p Fr(1\))1726 1066 y Fj(\002)p Fn(3)1726 1092 y(2)1782
1059 y FB(+)13 b Ft(M)1880 1070 y Fr(\(1)p Fu(;)p Fr(2\))1959
1074 y Fn(3)1979 1059 y FB(,)0 1134 y(w)o(e)18 b(see)g(that)h(the)f
(singlet)g(\(1)p Ft(;)8 b FB(2\))614 1141 y Fr(3)655
1134 y FB(b)q(ecomes)17 b(the)h(dy)o(on)h(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))1206 1141 y Fr(0)1246 1134 y FB(and)19
b(the)f(triplet)f(\(1)p Ft(;)8 b FB(1\))1688 1141 y Fr(2)1729
1134 y FB(b)q(ecomes)17 b(the)0 1197 y(quark)e(\(1)p
Ft(;)8 b FB(0\))245 1204 y Fr(1)267 1197 y FB(.)21 b(This)15
b(is)g(exactly)f(what)i(one)f(w)o(ould)g(exp)q(ect)g(on)g(ph)o(ysical)g
(grounds.)22 b(Note)14 b(that)i(w)o(e)f(could)0 1259
y(ha)o(v)o(e)f(deduced)h(that)h(the)f Ft(s)g FB(c)o(harge)g(of)g(\(1)p
Ft(;)8 b FB(2\))16 b(m)o(ust)e(b)q(e)h(3)h(indep)q(enden)o(tly)e(of)h
(the)g(previous)g(semiclassical)0 1321 y(reasoning)i(b)o(y)f(requiring)
f(that)i(the)f(elemen)o(tary)d(quark)j(m)o(ust)f(ha)o(v)o(e)h
Ft(s)d FB(=)h(1.)83 1402 y(Finally)l(,)j(the)i(third)f(case)g(w)o(e)g
(ha)o(v)o(e)g(depicted)f(in)h(Fig.)28 b(2)19 b(is)f(the)h(\015o)o(w)f
(of)h(the)f Ft(N)1601 1411 y Fu(f)1644 1402 y FB(=)f(2)i(theory)g(with)
0 1464 y(equal)i(bare)g(masses)f(to)o(w)o(ards)i(the)f(pure)g(gauge)h
(theory)l(.)35 b(This)21 b(case)g(will)f(b)q(e)i(extensiv)o(ely)c
(studied)j(in)0 1527 y(Section)c(4.)24 b(In)17 b(particular,)g(w)o(e)f
(will)g(determine)f(the)i(existence)e(domains)i(of)g(all)g(the)g(BPS)g
(states)h(along)0 1589 y(this)h(\015o)o(w.)30 b(In)19
b(the)f(\014gure,)i(w)o(e)e(ha)o(v)o(e)h(also)g(indicated)f(the)h(quan)
o(tum)f(n)o(um)o(b)q(ers)f(of)j(the)f(singularities)f(as)0
1651 y(view)o(ed)d(from)h(the)h(upp)q(er)g(half)g Ft(u)p
FB(-plane.)22 b(W)l(e)17 b(ha)o(v)o(e)f(a)h Ft(k)g FB(=)e(2)i(sup)q
(erconformal)f(p)q(oin)o(t)h(when)g Ft(m)d FB(=)h(\003)1909
1658 y Fr(2)1930 1651 y Ft(=)p FB(2.)0 1713 y(In)20 b(the)g(presen)o(t)
f(case,)i(the)f(singlet)f(and)i(doublet)f(collide)f(but)h(do)h(not)f
(cross)h(eac)o(h)f(other)g(and)h(w)o(e)e(are)0 1781 y(in)f(the)g
(situation)g(of)h(eq.)27 b(\(2.15\))19 b(with)f Ft(U)k
FB(=)17 b Ft(M)915 1763 y Fm(\000)p Fr(1)910 1793 y(sc)984
1781 y FB(=)1039 1741 y Fk(\000)1062 1781 y Ft(M)1109
1792 y Fr(\(0)p Fu(;)p Fr(1\))1188 1796 y Fn(0)1208 1781
y Ft(M)1255 1792 y Fr(\(1)p Fu(;)p Fr(1\))1334 1796 y
Fn(1)1353 1741 y Fk(\001)1376 1752 y Fm(\000)p Fr(1)1427
1781 y FB(.)27 b(Note)18 b(that)h(the)f(upp)q(er)g(left)0
1893 y(blo)q(c)o(k)h(of)h Ft(U)5 b FB(,)20 b(acting)g(on)g(\()p
Ft(n)532 1900 y Fu(e)552 1893 y Ft(;)8 b(n)603 1900 y
Fu(m)639 1893 y FB(\))20 b(is)f(nothing)h(but)g(the)g(matrix)e
Fs(\000)p Ft(S)k FB(=)1403 1808 y Fk( )1451 1852 y FB(0)49
b Fs(\000)p FB(1)1451 1935 y(1)69 b(0)1596 1808 y Fk(!)1635
1893 y FB(.)32 b(Note)19 b(also)h(that)0 1995 y(our)e(c)o(hoice)e(of)h
Ft(s)h FB(c)o(harges)f(is)g(not)h(in)f(this)g(case)h(the)f(most)f
(natural)i(from)e(the)h(p)q(oin)o(t)h(of)f(view)g(of)h(the)f(R)o(G)0
2057 y(\015o)o(w.)k(W)l(e)13 b(prefered)h(to)g(mak)o(e)e(easier)h(the)h
(implem)o(en)o(tation)d(of)j Ft(C)t(P)21 b FB(in)o(v)m(ariance)13
b(whic)o(h)g(w)o(e)h(will)e(use)i(when)0 2119 y(determining)g(the)i
(BPS)g(sp)q(ectra,)g(b)o(y)g(c)o(ho)q(osing)h(a)g(solution)f(\()p
Ft(a)1185 2128 y Fu(D)1220 2119 y Ft(;)8 b(a)p FB(\))15
b(satisfying)652 2244 y Ft(a)678 2252 y Fu(D)712 2244
y FB(\()p 731 2216 28 2 v Ft(u)p FB(\))f(=)g Fs(\000)p
883 2216 26 2 v Ft(a)908 2252 y Fu(D)943 2244 y FB(\()p
Ft(u)p FB(\))p Ft(;)56 b(a)p FB(\()p 1124 2216 28 2 v
Ft(u)o FB(\))14 b(=)p 1236 2216 26 2 v 14 w Ft(a)o FB(\()p
Ft(u)p FB(\))p Ft(:)527 b FB(\(2)p Ft(:)p FB(19\))0 2368
y(Then)16 b(the)g(transformation)h(la)o(w)f(of)g(the)g(quan)o(tum)f(n)o
(um)o(b)q(ers)g(under)h Ft(C)t(P)23 b FB(is)16 b(simply)707
2512 y(\()p Ft(n)755 2519 y Fu(e)775 2512 y Ft(;)8 b(n)826
2519 y Fu(m)862 2512 y FB(\))881 2519 y Fu(s)921 2484
y FB(CP)915 2512 y Fs(\000)-9 b(!)14 b FB(\()p Fs(\000)p
Ft(n)1096 2519 y Fu(e)1116 2512 y Ft(;)8 b(n)1167 2519
y Fu(m)1203 2512 y FB(\))1222 2519 y Fm(\000)p Fu(s)1272
2512 y Ft(:)582 b FB(\(2)p Ft(:)p FB(20\))976 2883 y
Fp(10)p eop
%%Page: 12 12
12 11 bop 28 160 a Fw(2.3.)36 b Fo(The)18 b(computation)g(of)g(the)h(p)
r(erio)r(d)e(in)n(tegrals)83 273 y FB(In)i(the)h(follo)o(wing,)g(w)o(e)
f(will)g(need)g(explicit)e(expressions)j(for)g(the)f(p)q(erio)q(ds)i
Ft(a)1546 281 y Fu(D)1600 273 y FB(and)f Ft(a)p FB(,)g(in)f(order)h(to)
0 335 y(compute)15 b(the)g(curv)o(es)g(of)i(marginal)e(stabilit)o(y)f
(whic)o(h)i(determine)d(the)j(existence)e(domains)i(of)g(the)g(stable)0
397 y(BPS)e(states.)21 b(A)13 b(general)h(metho)q(d,)f(\014rst)i(in)o
(tro)q(duced)e(and)i(used)f(in)f([8],)h(and)h(also)f(indep)q(enden)o
(tly)e(in)i([12],)0 460 y(simply)g(consists)i(in)g(expanding)g(the)g(p)
q(erio)q(d)h(in)o(tegrals)e Ft(a)1084 468 y Fu(D)1135
460 y FB(and)h Ft(a)g FB(in)g(terms)e(of)j(the)f(three)f(fundamen)o
(tal)0 522 y(elliptic)e(in)o(tegrals,)h(whic)o(h)h(can)g(b)q(e)h
(expressed)f(in)f(terms)g(of)i(standard)g(sp)q(ecial)f(functions)g(w)o
(ell)f(suited)h(for)0 584 y(a)g(n)o(umerical)d(computation.)20
b(An)14 b(e\016cien)o(t)f(w)o(a)o(y)h(of)h(taking)g(care)f(of)h(the)g
(precise)e(de\014nition)i(of)g(the)f(cycles)0 646 y(\()p
Ft(\015)44 653 y Fr(1)66 646 y Ft(;)8 b(\015)113 653
y Fr(2)134 646 y FB(\))14 b(is)g(to)h(uniformize)d(the)i(cubics)g
(\(2.1\))g(with)g(the)h(help)e(of)i(the)f(W)l(eirstra\031)h
Ft(})f FB(function.)20 b(F)l(or)15 b(a)f(cubic)0 709
y(curv)o(e)h(in)h(W)l(eierstra\031)g(normal)f(form,)g(i.e.)664
875 y Ft(\021)690 854 y Fr(2)725 875 y FB(=)f(4)832 812
y Fr(3)809 827 y Fk(Y)810 935 y Fu(i)p Fr(=1)873 875
y FB(\()p Ft(\030)g Fs(\000)d Ft(e)1000 882 y Fu(i)1015
875 y FB(\))16 b Ft(;)1147 812 y Fr(3)1120 827 y Fk(X)1125
935 y Fu(i)p Fr(=1)1201 875 y Ft(e)1224 882 y Fu(i)1252
875 y FB(=)e(0)540 b(\(2)p Ft(:)p FB(21\))0 1040 y(the)16
b(three)g(fundamen)o(tal)e(elliptic)g(in)o(tegrals)i(are)421
1183 y Ft(I)447 1156 y Fr(\()p Fu(j)r Fr(\))443 1198
y(1)510 1183 y FB(=)561 1115 y Fk(I)557 1256 y Fu(\015)577
1260 y Fl(j)625 1149 y FB(d)p Ft(\030)p 625 1171 51 2
v 637 1217 a(\021)697 1175 y FB(,)759 1183 y Ft(I)785
1156 y Fr(\()p Fu(j)r Fr(\))781 1198 y(2)848 1183 y FB(=)900
1115 y Fk(I)895 1256 y Fu(\015)915 1260 y Fl(j)963 1149
y Ft(\030)r FB(d)p Ft(\030)p 963 1171 75 2 v 987 1217
a(\021)1059 1175 y FB(,)1121 1183 y Ft(I)1147 1156 y
Fr(\()p Fu(j)r Fr(\))1143 1198 y(3)1196 1183 y FB(\()p
Ft(c)p FB(\))e(=)1321 1115 y Fk(I)1316 1256 y Fu(\015)1336
1260 y Fl(j)1443 1149 y FB(d)p Ft(\030)p 1384 1171 170
2 v 1384 1217 a(\021)r FB(\()p Ft(\030)f Fs(\000)e Ft(c)p
FB(\))1558 1183 y Fs(\001)296 b FB(\(2)p Ft(:)p FB(22\))0
1369 y(By)19 b(con)o(v)o(en)o(tion,)f(w)o(e)h(c)o(ho)q(ose)h(the)f
(cycle)f Ft(\015)810 1376 y Fr(1)851 1369 y FB(to)i(encircle)d
Ft(e)1116 1376 y Fr(3)1156 1369 y FB(and)j Ft(e)1277
1376 y Fr(2)1298 1369 y FB(,)g(and)g(the)f(cycle)f Ft(\015)1666
1376 y Fr(2)1707 1369 y FB(to)h(encircle)f Ft(e)1972
1376 y Fr(1)0 1432 y FB(and)e Ft(e)117 1439 y Fr(2)138
1432 y FB(.)21 b(Of)15 b(course,)g(w)o(e)g(still)f(need)h(to)g(sp)q
(ecify)g(ho)o(w)h(w)o(e)f(c)o(ho)q(ose)g(to)h(n)o(um)o(b)q(er)e(the)h
(three)f(ro)q(ots)j Ft(e)1813 1439 y Fu(i)1843 1432 y
FB(in)e(eac)o(h)0 1495 y(particular)g(case.)21 b(Sometimes,)13
b(if)i(w)o(e)g(do)h(not)g(sp)q(ecify)f(the)h(con)o(tours,)f(w)o(e)h
(simply)d(write)i Ft(I)1699 1502 y Fr(1)1736 1495 y FB(for)1810
1454 y Fk(R)1856 1472 y Fr(d)p Fu(\030)p 1856 1483 40
2 v 1866 1512 a(\021)1917 1495 y FB(etc.)701 2181 y @beginspecial
0 @llx 0 @lly 256 @urx 248 @ury 1417 @rwi @setspecial
%%BeginDocument: rgf3.eps
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-35.0 253.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 842 m 0 0 l 595 0 l 595 842 l cp clip
 0.06000 0.06000 sc
/Symbol ff 360.00 scf sf
1650 525 m
gs 1 -1 sc (2) col0 sh gr
7.500 slw
% Ellipse
n 3600 1200 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 3600 3600 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 1200 1200 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 2400 1200 1800 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3600 2550 600 1650 0 360 DrawEllipse gs col0 s gr

15.000 slw
% Polyline
gs  clippath
4140 2694 m 4200 2454 l 4260 2694 l 4260 2370 l 4140 2370 l  cp clip
n 4200 2700 m 4200 2400 l gs col0 s gr gr

% arrowhead
n 4140 2694 m 4200 2454 l 4260 2694 l 4200 2694 l 4140 2694 l  cp gs 0.00 setgray ef gr  col0 s
/Symbol ff 360.00 scf sf
1500 300 m
gs 1 -1 sc (g) col0 sh gr
% Polyline
gs  clippath
2394 660 m 2154 600 l 2394 540 l 2070 540 l 2070 660 l  cp clip
n 2400 600 m 2100 600 l gs col0 s gr gr

% arrowhead
n 2394 660 m 2154 600 l 2394 540 l 2394 600 l 2394 660 l  cp gs 0.00 setgray ef gr  col0 s
/Symbol ff 360.00 scf sf
4650 3225 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 360.00 scf sf
1500 1200 m
gs 1 -1 sc (e) col0 sh gr
/Times-Roman ff 360.00 scf sf
3300 1500 m
gs 1 -1 sc (e) col0 sh gr
/Times-Roman ff 360.00 scf sf
3450 1650 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 360.00 scf sf
3300 3300 m
gs 1 -1 sc (e) col0 sh gr
/Times-Roman ff 360.00 scf sf
3450 3450 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 360.00 scf sf
1650 1350 m
gs 1 -1 sc (1) col0 sh gr
/Symbol ff 360.00 scf sf
4500 3000 m
gs 1 -1 sc (g) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 118 2295 a Fo(Fig.)30 b(3:)24 b FB(The)18
b(de\014nition)f(of)h(the)g(basic)g(cycles)e Ft(\015)1064
2302 y Fr(1)1103 2295 y FB(and)j Ft(\015)1225 2302 y
Fr(2)1264 2295 y FB(with)f(resp)q(ect)f(to)h(the)g(ro)q(ots)h
Ft(e)1840 2302 y Fr(1)1861 2295 y FB(,)118 2344 y Ft(e)141
2351 y Fr(2)178 2344 y FB(and)e Ft(e)296 2351 y Fr(3)317
2344 y FB(.)83 2509 y(The)g(necessit)o(y)f(to)h(in)o(tro)q(duce)g(the)g
(elliptic)d(in)o(tegral)j(of)g(the)g(third)g(kind)f Ft(I)1487
2516 y Fr(3)1525 2509 y FB(is)h(due)g(to)h(the)e(presence)0
2571 y(of)j(p)q(oles)g(with)g(non-zero)g(residues)g(in)f(the)g(massiv)o
(e)f(theories.)29 b(This)19 b(also)g(explains)f(the)h(failure)f(of)h
(the)0 2634 y(standard)d(metho)q(ds)f(of)g(computation)f(of)h(the)g(p)q
(erio)q(ds)h(b)o(y)e(means)g(of)h(the)g(Picard-F)l(uc)o(hs)f
(equations.)21 b(F)l(or)0 2696 y(the)13 b(massless)f(theories)h(only)g
Ft(I)576 2703 y Fr(1)610 2696 y FB(and)g Ft(I)723 2703
y Fr(2)757 2696 y FB(o)q(ccur)g(whic)o(h)g(can)g(b)q(e)g(reexpressed)f
(in)h(terms)f(of)h(h)o(yp)q(ergeometric)0 2758 y(functions.)976
2883 y Fp(11)p eop
%%Page: 13 13
13 12 bop 83 160 a FB(Let)19 b(us)h(fo)q(cus)g(on)f(the)g(case)h
Ft(N)670 168 y Fu(f)713 160 y FB(=)f(2)h(with)f Ft(m)971
167 y Fr(1)1010 160 y FB(=)g Ft(m)1110 167 y Fr(2)1150
160 y FB(=)g Ft(m)p FB(.)30 b(The)19 b(other)g(cases)h(are)f(discussed)
g(in)0 232 y(App)q(endix)d(C.)g(The)g(Seib)q(erg-Witten)g(di\013eren)o
(tial)e Ft(\025)h Fs(\021)e Ft(\025)1094 206 y Fu(N)1125
210 y Fl(f)1145 206 y Fr(=2)1094 239 y Fu(m)1128 243
y Fn(1)1146 239 y Fr(=)p Fu(m)1210 243 y Fn(2)1227 239
y Fr(=)p Fu(m)1309 232 y FB(is)j(giv)o(en)f(b)o(y)416
405 y Ft(\025)f FB(=)g Fs(\000)554 330 y(p)p 595 330
25 2 v 595 371 a FB(2)p 554 393 66 2 v 560 439 a(4)p
Ft(\031)667 371 y(y)c FB(d)p Ft(x)p 630 393 164 2 v 630
453 a(x)658 439 y Fr(2)690 453 y Fs(\000)744 428 y Fr(\003)771
415 y Fn(4)771 438 y(2)p 744 442 44 2 v 747 470 a Fr(64)812
405 y FB(=)k Fs(\000)908 330 y(p)p 949 330 25 2 v 949
371 a FB(2)p 908 393 66 2 v 914 439 a(4)p Ft(\031)983
371 y FB(d)p Ft(x)p 983 393 55 2 v 998 439 a(y)1048 371
y FB(4)p Ft(y)1098 353 y Fr(2)p 1048 393 72 2 v 1056
440 a FB(\003)1090 423 y Fr(2)1090 455 y(2)1133 319 y
Fk( )1236 371 y FB(1)p 1177 393 143 2 v 1177 453 a Ft(x)d
Fs(\000)1271 428 y Fr(\003)1298 415 y Fn(2)1298 438 y(2)p
1271 442 44 2 v 1283 470 a Fr(8)1336 405 y Fs(\000)1449
371 y FB(1)p 1391 393 142 2 v 1391 453 a Ft(x)f FB(+)1483
428 y Fr(\003)1510 415 y Fn(2)1510 438 y(2)p 1483 442
44 2 v 1496 470 a Fr(8)1537 319 y Fk(!)458 575 y FB(=)k
Fs(\000)554 500 y(p)p 595 500 25 2 v 595 541 a FB(2)p
554 563 66 2 v 560 609 a(4)p Ft(\031)630 541 y FB(d)p
Ft(x)p 630 563 55 2 v 644 609 a(y)698 490 y Fk(")727
575 y Ft(x)c Fs(\000)h Ft(u)g FB(+)908 541 y(\003)942
523 y Fr(2)942 555 y(2)p 908 563 56 2 v 923 609 a FB(4)1012
541 y Ft(m)1055 523 y Fr(2)p 973 563 142 2 v 973 623
a Ft(x)g FB(+)1066 598 y Fr(\003)1093 585 y Fn(2)1093
608 y(2)p 1066 612 44 2 v 1078 641 a Fr(8)1120 490 y
Fk(#)1173 575 y Ft(:)1868 491 y FB(\(2)p Ft(:)p FB(23\))0
750 y(Con)o(v)o(erting)16 b(to)g(W)l(eierstra\031)g(normal)g(form)f(of)
h(the)g(cubic)g(b)o(y)f Ft(\021)h FB(=)e(2)p Ft(y)r(;)24
b(\030)17 b FB(=)c Ft(x)e Fs(\000)1532 731 y Fu(u)p 1532
739 23 2 v 1533 767 a Fr(3)1575 750 y FB(w)o(e)16 b(arriv)o(e)f(at)404
852 y Fk(I)401 993 y Fu(\015)421 997 y Fl(i)462 920 y
Ft(\025)f FB(=)561 845 y Fs(p)p 603 845 25 2 v 42 x FB(2)p
561 909 66 2 v 567 954 a(4)p Ft(\031)640 850 y Fk(\024)671
887 y FB(4)p 671 909 25 2 v 671 954 a(3)701 920 y Ft(u)8
b(I)763 894 y Fr(\()p Fu(i)p Fr(\))759 935 y(1)818 920
y Fs(\000)j FB(2)d Ft(I)926 894 y Fr(\()p Fu(i)p Fr(\))922
935 y(2)983 920 y Fs(\000)1037 887 y FB(\003)1071 868
y Fr(2)1071 900 y(2)p 1037 909 56 2 v 1053 954 a FB(2)1097
920 y Ft(m)1140 900 y Fr(2)1170 920 y Ft(I)1196 894 y
Fr(\()p Fu(i)p Fr(\))1192 935 y(3)1249 850 y Fk(\022)1285
920 y Fs(\000)1329 887 y FB(\003)1363 868 y Fr(2)1363
900 y(2)p 1329 909 V 1344 954 a FB(8)1400 920 y Fs(\000)1455
887 y Ft(u)p 1455 909 28 2 v 1457 954 a FB(3)1488 850
y Fk(\023)o(\025)1575 920 y Ft(:)279 b FB(\(2)p Ft(:)p
FB(24\))0 1133 y(One)18 b(sees)f(from)g(\(2.23\))i(that)f
Ft(\025)g FB(has)h(t)o(w)o(o)f(p)q(oles)g(at)g(\()p Ft(x)e
FB(=)1109 1111 y Fm(\000)p Fr(\003)1166 1095 y Fn(2)1166
1118 y(2)p 1109 1122 74 2 v 1136 1151 a Fr(8)1188 1133
y Ft(;)8 b(y)18 b FB(=)e Fs(\006)1353 1114 y Fu(i)p 1350
1122 20 2 v 1350 1151 a Fr(4)1374 1133 y Ft(m)p FB(\003)1451
1115 y Fr(2)1451 1147 y(2)1472 1133 y FB(\))i(with)f(residues)h
Fs(\007)1870 1114 y Fr(1)p 1852 1122 56 2 v 1852 1151
a(2)p Fu(\031)q(i)1935 1114 y(m)p 1917 1122 71 2 v 1917
1158 a Fr(2)1936 1127 y Fm(p)p 1968 1127 20 2 v 31 x
Fr(2)0 1205 y FB([2].)83 1289 y(In)f(order)h(to)g(ha)o(v)o(e)e(an)i
(explicit)d(form)o(ula)h(for)i Ft(a)972 1297 y Fu(D)1024
1289 y FB(and)g Ft(a)p FB(,)f(w)o(e)g(no)o(w)h(ha)o(v)o(e)f(to)g(c)o
(ho)q(ose)h(the)f(ro)q(ots)i Ft(e)1916 1296 y Fu(j)1953
1289 y FB(of)0 1351 y(the)f(p)q(olynomial)f(de\014ning)i(the)f(cubic.)
27 b(One)18 b(constrain)o(t)h(comes)e(from)g(the)i(asymptotic)e(b)q
(eha)o(viour)h(for)0 1414 y(large)e Fs(j)p Ft(u)p Fs(j)p
FB(,)f(whic)o(h)h(is)g(go)o(v)o(erned)g(b)o(y)f(asymptotic)g(freedom:)
556 1567 y Ft(a)p FB(\()p Ft(u)p FB(\))e Fs(\030)718
1533 y FB(1)p 718 1555 25 2 v 718 1601 a(2)748 1523 y
Fs(p)p 789 1523 53 2 v 789 1567 a FB(2)p Ft(u)k(;)56
b(a)954 1575 y Fu(D)989 1567 y FB(\()p Ft(u)p FB(\))13
b Fs(\030)1144 1533 y Ft(i)p 1126 1555 54 2 v 1126 1601
a FB(2)p Ft(\031)1185 1523 y Fs(p)p 1226 1523 53 2 v
1226 1567 a FB(2)p Ft(u)c FB(log)1377 1533 y Ft(u)p 1363
1555 56 2 v 1363 1602 a FB(\003)1397 1585 y Fr(2)1397
1617 y(2)1423 1567 y Fs(\001)431 b FB(\(2)p Ft(:)p FB(25\))0
1729 y(Since)16 b Ft(a)p FB(\()p Ft(u)p FB(\))h(is)g(giv)o(en)f(b)o(y)h
(the)g(in)o(tegral)f(o)o(v)o(er)h(the)g(cycle)e Ft(\015)1084
1736 y Fr(1)1123 1729 y FB(surrounding)j Ft(e)1418 1736
y Fr(2)1456 1729 y FB(and)g Ft(e)1575 1736 y Fr(3)1596
1729 y FB(,)f(see)g(Fig)g(3,)g(the)g Fv(set)0 1791 y
Fs(f)p Ft(e)48 1798 y Fr(2)69 1791 y Ft(;)8 b(e)114 1798
y Fr(3)135 1791 y Fs(g)13 b FB(m)o(ust)f(b)q(e)h(c)o(hosen)g(suc)o(h)g
(that)h(the)f(large-)p Ft(u)g FB(asymptotics)f(of)i Ft(a)f
FB(do)q(es)h Fv(not)f FB(con)o(tain)g(a)1712 1750 y Fs(p)p
1753 1750 53 2 v 1753 1791 a FB(2)p Ft(u)c FB(log)g Ft(u=)p
FB(\003)1971 1773 y Fr(2)0 1854 y FB(term.)19 b(The)c(remaining)e(ro)q
(ot)k(necessarily)c(is)i Ft(e)876 1861 y Fr(1)897 1854
y FB(.)21 b(But)14 b(whic)o(h)h(ro)q(ot)h(in)e(the)h(set)g
Fs(f)p Ft(e)1530 1861 y Fr(2)1551 1854 y Ft(;)8 b(e)1596
1861 y Fr(3)1617 1854 y Fs(g)15 b FB(is)f(called)g Ft(e)1864
1861 y Fr(2)1885 1854 y FB(,)h(and)0 1916 y(th)o(us)i(is)g(encircled)e
(also)i(b)o(y)g Ft(\015)554 1923 y Fr(2)575 1916 y FB(,)g(is)g(a)g
(matter)f(of)h(con)o(v)o(en)o(tion)f(related)g(to)h(the)g(p)q
(ossibilit)o(y)f(of)h(shifting)g Ft(a)1958 1925 y Fu(D)0
1979 y FB(b)o(y)f(an)g(in)o(teger)g(m)o(ultiple)d(of)j
Ft(a)p FB(.)21 b(A)16 b(correct)g(c)o(hoice)f(is)h(the)g(follo)o(wing)
436 2149 y Ft(e)459 2156 y Fr(1)494 2149 y FB(=)551 2116
y Ft(u)p 551 2138 28 2 v 553 2184 a FB(6)594 2149 y Fs(\000)649
2116 y FB(\003)683 2098 y Fr(2)683 2130 y(2)p 649 2138
56 2 v 652 2184 a FB(16)720 2149 y(+)774 2116 y(1)p 774
2138 25 2 v 774 2184 a(2)804 2066 y Fk(r)p 854 2066 311
2 v 83 x Ft(u)10 b FB(+)946 2115 y(\003)980 2098 y Fr(2)980
2130 y(2)p 946 2138 56 2 v 962 2184 a FB(8)1018 2149
y(+)h(\003)1101 2156 y Fr(2)1122 2149 y Ft(m)1164 2066
y Fk(r)p 1214 2066 312 2 v 83 x Ft(u)g FB(+)1307 2115
y(\003)1341 2098 y Fr(2)1341 2130 y(2)p 1307 2138 56
2 v 1322 2184 a FB(8)1378 2149 y Fs(\000)g FB(\003)1462
2156 y Fr(2)1483 2149 y Ft(m)16 b(;)436 2277 y(e)459
2284 y Fr(2)494 2277 y FB(=)e Fs(\000)590 2243 y Ft(u)p
590 2265 28 2 v 592 2311 a FB(3)633 2277 y(+)687 2243
y(\003)721 2225 y Fr(2)721 2257 y(2)p 687 2265 56 2 v
703 2311 a FB(8)764 2277 y Ft(;)436 2415 y(e)459 2422
y Fr(3)494 2415 y FB(=)551 2382 y Ft(u)p 551 2404 28
2 v 553 2449 a FB(6)594 2415 y Fs(\000)649 2382 y FB(\003)683
2363 y Fr(2)683 2395 y(2)p 649 2404 56 2 v 652 2449 a
FB(16)720 2415 y Fs(\000)775 2382 y FB(1)p 775 2404 25
2 v 775 2449 a(2)805 2332 y Fk(r)p 854 2332 311 2 v 854
2415 a Ft(u)d FB(+)947 2381 y(\003)981 2364 y Fr(2)981
2396 y(2)p 947 2404 56 2 v 963 2449 a FB(8)1018 2415
y(+)g(\003)1101 2422 y Fr(2)1123 2415 y Ft(m)1165 2332
y Fk(r)p 1215 2332 312 2 v 83 x Ft(u)g FB(+)1308 2381
y(\003)1342 2364 y Fr(2)1342 2396 y(2)p 1308 2404 56
2 v 1323 2449 a FB(8)1379 2415 y Fs(\000)g FB(\003)1463
2422 y Fr(2)1484 2415 y Ft(m)16 b(:)1868 2268 y FB(\(2)p
Ft(:)p FB(26\))0 2561 y(One)h(can)g(then)g(straigh)o(tforw)o(ardly)g
(sho)o(w)h(\(see)f(App)q(endix)f(D\))i(that)f(in)g(the)g(limit)e
Ft(m)g Fs(!)g FB(0)i(the)g(solution)0 2623 y(giv)o(en)d(b)o(y)g
(\(2.5\))h(and)h(\(2.24\))f(con)o(v)o(erges)f(to)o(w)o(ard)h(the)g
(already)g(kno)o(wn)g(explicit)d(solution)k(of)f(the)f(massless)0
2686 y Ft(N)39 2695 y Fu(f)81 2686 y FB(=)k(2)h(theory)f([4])g(whic)o
(h)g(also)h(corresp)q(onds)g(to)g(the)f(electric)e(and)j(magnetic)e
(quan)o(tum)g(n)o(um)o(b)q(ers)g(at)0 2749 y(the)h(singularities)f(c)o
(hosen)h(in)g(Fig.)26 b(2.)h(It)18 b(still)f(remains)f(to)j(\014x)f
(the)f(p)q(ositions)i(of)g(the)e(cycles)g(relativ)o(ely)976
2883 y Fp(12)p eop
%%Page: 14 14
14 13 bop 0 160 a FB(to)21 b(the)f(p)q(oles)g(with)g(nonzero)h
(residues)f(of)g Ft(\025)p FB(,)i(or,)f(whic)o(h)e(is)h(equiv)m(alen)o
(t,)g(to)g(\014x)h(the)f Ft(s)g FB(c)o(harges)g(at)h(the)0
222 y(singularities.)f(The)d(solution,)f(consisten)o(t)g(with)g(Fig.)21
b(2,)16 b(is)g(giv)o(en)f(for)i Fs(=)p Ft(m)8 b(u)13
b(>)h FB(0)j(b)o(y)361 377 y Ft(a)p FB(\()p Ft(u)p FB(\))c(=)523
302 y Fs(p)p 564 302 25 2 v 564 344 a FB(2)p 523 366
66 2 v 529 412 a(4)p Ft(\031)602 307 y Fk(\024)633 344
y FB(4)p 633 366 25 2 v 633 412 a(3)671 377 y Ft(uI)725
351 y Fr(\(1\))721 392 y(1)786 377 y Fs(\000)e FB(2)d
Ft(I)894 351 y Fr(\(1\))890 392 y(2)956 377 y Fs(\000)1011
344 y FB(\003)1045 326 y Fr(2)1045 358 y(2)p 1011 366
56 2 v 1027 412 a FB(2)1071 377 y Ft(m)1114 357 y Fr(2)1144
377 y Ft(I)1170 351 y Fr(\(1\))1166 392 y(3)1228 307
y Fk(\022)1265 377 y Fs(\000)1309 344 y FB(\003)1343
326 y Fr(2)1343 358 y(2)p 1309 366 V 1324 412 a FB(8)1380
377 y Fs(\000)1435 344 y Ft(u)p 1435 366 28 2 v 1437
412 a FB(3)1468 307 y Fk(\023)o(\025)1542 377 y FB(+)1607
344 y Ft(m)p 1596 366 66 2 v 1596 376 a Fs(p)p 1637 376
25 2 v 1637 417 a FB(2)326 521 y Ft(a)352 529 y Fu(D)386
521 y FB(\()p Ft(u)p FB(\))14 b(=)523 446 y Fs(p)p 564
446 V 564 487 a FB(2)p 523 509 66 2 v 529 555 a(4)p Ft(\031)602
451 y Fk(\024)633 487 y FB(4)p 633 509 25 2 v 633 555
a(3)671 521 y Ft(uI)725 494 y Fr(\(2\))721 536 y(1)786
521 y Fs(\000)d FB(2)d Ft(I)894 494 y Fr(\(2\))890 536
y(2)956 521 y Fs(\000)1011 487 y FB(\003)1045 469 y Fr(2)1045
501 y(2)p 1011 509 56 2 v 1027 555 a FB(2)1071 521 y
Ft(m)1114 500 y Fr(2)1144 521 y Ft(I)1170 494 y Fr(\(2\))1166
536 y(3)1228 451 y Fk(\022)1265 521 y Fs(\000)1309 487
y FB(\003)1343 469 y Fr(2)1343 501 y(2)p 1309 509 V 1324
555 a FB(8)1380 521 y Fs(\000)1435 487 y Ft(u)p 1435
509 28 2 v 1437 555 a FB(3)1468 451 y Fk(\023)o(\025)1868
446 y FB(\(2)p Ft(:)p FB(27\))0 690 y(with)16 b(the)g
Ft(I)221 663 y Fr(\(1\))217 705 y Fu(j)288 690 y FB(precisely)e(giv)o
(en)i(b)o(y)f(the)h(form)o(ulae)403 845 y Ft(I)429 818
y Fr(\(1\))425 860 y(1)493 845 y FB(=)647 811 y(2)p 536
834 247 2 v 536 882 a(\()p Ft(e)578 889 y Fr(1)610 882
y Fs(\000)11 b Ft(e)683 889 y Fr(3)704 882 y FB(\))723
868 y Fr(1)p Fu(=)p Fr(2)796 845 y Ft(K)t FB(\()p Ft(k)r
FB(\))403 978 y Ft(I)429 951 y Fr(\(1\))425 992 y(2)493
978 y FB(=)647 944 y(2)p 536 966 V 536 1015 a(\()p Ft(e)578
1022 y Fr(1)610 1015 y Fs(\000)g Ft(e)683 1022 y Fr(3)704
1015 y FB(\))723 1000 y Fr(1)p Fu(=)p Fr(2)804 978 y
FB([)p Ft(e)841 985 y Fr(1)861 978 y Ft(K)t FB(\()p Ft(k)r
FB(\))h(+)f(\()p Ft(e)1074 985 y Fr(3)1105 978 y Fs(\000)g
Ft(e)1178 985 y Fr(1)1199 978 y FB(\))p Ft(E)s FB(\()p
Ft(k)r FB(\)])403 1132 y Ft(I)429 1105 y Fr(\(1\))425
1146 y(3)493 1132 y FB(=)647 1098 y(2)p 536 1120 V 536
1169 a(\()p Ft(e)578 1176 y Fr(1)610 1169 y Fs(\000)g
Ft(e)683 1176 y Fr(3)704 1169 y FB(\))723 1154 y Fr(3)p
Fu(=)p Fr(2)796 1046 y Fk(")920 1098 y FB(1)p 830 1120
206 2 v 830 1166 a(1)g Fs(\000)h FB(~)-25 b Ft(c)11 b
FB(+)g Ft(k)1023 1151 y Fm(0)1049 1132 y Ft(K)t FB(\()p
Ft(k)r FB(\))675 1298 y(+)759 1264 y(4)p Ft(k)810 1246
y Fm(0)p 729 1287 125 2 v 729 1332 a FB(1)h(+)f Ft(k)841
1318 y Fm(0)1002 1264 y FB(1)p 872 1287 286 2 v 872 1332
a(\(1)g Fs(\000)h FB(~)-25 b Ft(c)p FB(\))1016 1318 y
Fr(2)1048 1332 y Fs(\000)11 b Ft(k)1125 1318 y Fm(0)p
Fr(2)1170 1298 y FB(\005)1207 1305 y Fr(1)1236 1228 y
Fk(\022)1273 1298 y Ft(\027)s FB(\()p Ft(c)p FB(\))p
Ft(;)1386 1264 y FB(1)g Fs(\000)g Ft(k)1498 1246 y Fm(0)p
1386 1287 125 2 v 1386 1332 a FB(1)h(+)f Ft(k)1498 1318
y Fm(0)1516 1228 y Fk(\023)1561 1213 y(#)1868 1082 y
FB(\(2)p Ft(:)p FB(28\))0 1462 y(where)428 1548 y Ft(k)455
1527 y Fr(2)490 1548 y FB(=)547 1514 y Ft(e)570 1521
y Fr(2)602 1514 y Fs(\000)f Ft(e)674 1521 y Fr(3)p 547
1537 149 2 v 547 1582 a Ft(e)570 1589 y Fr(1)602 1582
y Fs(\000)g Ft(e)674 1589 y Fr(3)717 1540 y FB(,)779
1548 y Ft(k)806 1527 y Fm(0)p Fr(2)851 1548 y FB(=)k(1)e
Fs(\000)e Ft(k)1015 1527 y Fr(2)1051 1548 y FB(=)1107
1514 y Ft(e)1130 1521 y Fr(2)1162 1514 y Fs(\000)h Ft(e)1235
1521 y Fr(1)p 1107 1537 V 1107 1582 a Ft(e)1130 1589
y Fr(3)1162 1582 y Fs(\000)g Ft(e)1235 1589 y Fr(1)1277
1540 y FB(,)456 1690 y(~)-25 b Ft(c)14 b FB(=)558 1657
y Ft(c)d Fs(\000)g Ft(e)663 1664 y Fr(3)p 547 1679 V
547 1724 a Ft(e)570 1731 y Fr(1)602 1724 y Fs(\000)f
Ft(e)674 1731 y Fr(3)717 1682 y FB(,)779 1690 y Ft(\027)s
FB(\()p Ft(c)p FB(\))k(=)g Fs(\000)978 1620 y Fk(\022)1020
1657 y FB(1)d Fs(\000)h FB(~)-25 b Ft(c)11 b FB(+)g Ft(k)1213
1639 y Fm(0)p 1019 1679 207 2 v 1019 1724 a FB(1)h Fs(\000)g
FB(~)-25 b Ft(c)11 b Fs(\000)f Ft(k)1213 1710 y Fm(0)1231
1620 y Fk(\023)1268 1631 y Fr(2)1297 1620 y Fk(\022)1339
1657 y FB(1)h Fs(\000)g Ft(k)1451 1639 y Fm(0)p 1339
1679 125 2 v 1339 1724 a FB(1)h(+)f Ft(k)1451 1710 y
Fm(0)1469 1620 y Fk(\023)1505 1631 y Fr(2)1551 1682 y
FB(,)1868 1624 y(\(2)p Ft(:)p FB(29\))0 1837 y(and)17
b(the)g Ft(I)206 1811 y Fr(\(2\))202 1853 y Fu(j)273
1837 y FB(obtained)g(form)f(the)g Ft(I)700 1811 y Fr(\(1\))696
1853 y Fu(j)768 1837 y FB(b)o(y)g(exc)o(hanging)h Ft(e)1112
1844 y Fr(1)1149 1837 y FB(and)h Ft(e)1268 1844 y Fr(3)1288
1837 y FB(.)23 b(In)17 b(\(2.28\),)g Ft(K)t FB(,)f Ft(E)k
FB(and)d(\005)1805 1844 y Fr(1)1843 1837 y FB(are)g(the)0
1902 y(three)c(standard)i(elliptic)c(in)o(tegrals)i(of)g([14])h(whose)g
(in)o(tegral)e(represen)o(tations)i(are)f(giv)o(en)g(in)g(App)q(endix)f
(B.)0 1964 y(F)l(or)17 b Fs(=)p Ft(m)7 b(u)14 b(<)g FB(0)j(the)f
(solution)h(then)f(is)g(obtained)h(from)e(\(2.19\).)22
b(In)16 b(App)q(endix)g(B)g(w)o(e)g(deriv)o(e)f(eqs.)21
b(\(2.28\))0 2027 y(as)e(w)o(ell)e(as)i(some)f(useful)g(relations)g(b)q
(et)o(w)o(een)g(the)g(elliptic)e(in)o(tegrals.)28 b(In)18
b(App)q(endix)g(D,)g(w)o(e)g(discuss)h(in)0 2089 y(some)12
b(detail)h(ho)o(w)h(one)f(can)h(understand)g(the)f(R)o(G)g(\015o)o(w)h
(illustrated)f(in)g(Fig.)20 b(2)14 b(directly)d(from)i(the)g(explicit)0
2151 y(form)o(ulae)i(\(2.27\).)21 b(In)16 b(particular,)g(as)h
Ft(m)c Fs(!)h(1)p FB(,)h Ft(m)p FB(\003)996 2158 y Fr(2)1031
2151 y FB(=)f(\003)1117 2133 y Fr(2)1117 2165 y(0)1154
2151 y FB(\014xed,)i(w)o(e)f(ha)o(v)o(e)62 2287 y Ft(a)p
FB(\()p Ft(u)p FB(\))e Fs(!)g Ft(a)256 2267 y Fr(\(0\))307
2287 y FB(\()p Ft(u)p FB(\))49 b Ft(;)57 b FB(~)-25 b
Ft(a)518 2296 y Fu(D)553 2287 y FB(\()p Ft(u)p FB(\))13
b Fs(!)h Ft(a)722 2261 y Fr(\(0\))722 2303 y Fu(D)773
2287 y FB(\()p Ft(u)p FB(\))48 b Ft(;)57 b FB(where)49
b(~)-25 b Ft(a)1157 2296 y Fu(D)1192 2287 y FB(\()p Ft(u)p
FB(\))13 b(=)h Ft(a)1349 2296 y Fu(D)1383 2287 y FB(\()p
Ft(u)p FB(\))d Fs(\000)g Ft(\017a)p FB(\()p Ft(u)p FB(\))f(+)h
Ft(\017)1717 2253 y(m)p 1706 2276 66 2 v 1706 2286 a
Fs(p)p 1747 2286 25 2 v 1747 2327 a FB(2)1793 2287 y
Ft(:)61 b FB(\(2)p Ft(:)p FB(30\))0 2438 y(Here)11 b(and)i(in)f(the)h
(follo)o(wing)f(w)o(e)g(alw)o(a)o(ys)g(let)f Ft(\017)j
FB(=)g(sign\()p Fs(=)p Ft(m)8 b(u)p FB(\).)20 b(The)12
b(rede\014nition)g Ft(a)1557 2446 y Fu(D)1605 2438 y
Fs(!)i FB(~)-24 b Ft(a)1695 2446 y Fu(D)1741 2438 y FB(corresp)q(onds)0
2500 y(to)12 b(rotating)g(the)g(cut)f(originating)h(from)e(the)i
(massless)f(quark)g(singularit)o(y)g Ft(\033)1415 2507
y Fr(3)1448 2500 y FB(to)g(the)h(righ)o(t)f(\(and)h(c)o(hanging)0
2562 y(the)k(con)o(tour)g Ft(\015)286 2569 y Fr(2)307
2562 y FB(\).)22 b(This)16 b(is)f(what)i(one)f(w)o(an)o(ts)g(since)g
(this)f(cut)h(m)o(ust)f(disapp)q(ear)h(in)g(the)g Ft(m)d
Fs(!)h(1)i FB(limit)d(in)0 2625 y(order)j(to)h(reco)o(v)o(er)e(the)h
(standard)h(analytic)f(structure)g(of)g(the)g(pure)g(gauge)h(theory)l
(.)976 2883 y Fp(13)p eop
%%Page: 15 15
15 14 bop 477 160 a Fz(3.)19 b(The)f(sp)r(ectra)h(of)g(stable)e(BPS)i
(states)28 275 y Fw(3.1.)36 b Fo(Deca)n(y)18 b(curv)n(es)83
390 y FB(In)i(general,)g(a)h(giv)o(en)e(BPS)h(state)g(do)q(es)h(not)g
(exist)e(ev)o(erywhere)g(on)h(the)g(Coulom)o(b)f(branc)o(h)h(of)h(the)0
452 y(mo)q(duli)d(space.)29 b(F)l(or)19 b(eac)o(h)g(of)g(the)g
Fv(massless)g FB(theories)f(with)h Ft(N)1207 461 y Fu(f)1251
452 y Fs(\024)f FB(3)h([4,3])g(there)f(is)h(a)g(single)f(curv)o(e)g(of)
0 514 y(marginal)13 b(stabilit)o(y)f(whic)o(h)h(go)q(es)i(through)g
(the)f(singularities)f(and)h(separates)h(the)e(Coulom)o(b)g(branc)o(h)h
(in)o(to)0 577 y(t)o(w)o(o)h(regions.)21 b(In)15 b(the)f(region)h
(outside)g(this)g(curv)o(e)f(all)g(semiclassically)e(stable)j(states)g
(exist,)f(while)g(inside)0 639 y(the)i(curv)o(e)g(only)g(those)h(BPS)f
(states)h(exist)f(that)h(are)f(resp)q(onsible)h(for)g(the)f
(singularities,)f(in)i(addition)f(to)0 701 y(the)g(photon)h(v)o(ector)f
(m)o(ultiple)o(t.)83 783 y(The)k(presen)o(t)g(cases)g(of)h(h)o(yp)q
(erm)o(ultipl)o(ets)c(with)j(non-v)m(anishing)i(bare)e(masses)g(are)g
(v)o(ery)f(di\013eren)o(t.)0 845 y(Due)d(to)h(the)f(BPS)g(mass)g(form)o
(ula)f Ft(M)703 853 y Fr(BPS)793 845 y FB(=)845 804 y
Fs(p)p 887 804 25 2 v 41 x FB(2)p Fs(j)p Ft(Z)t Fs(j)h
FB(with)589 1023 y Ft(Z)t FB(\()p Ft(u)p FB(\))d(=)h
Ft(n)786 1030 y Fu(m)822 1023 y Ft(a)848 1031 y Fu(D)882
1023 y FB(\()p Ft(u)p FB(\))d Fs(\000)g Ft(n)1038 1030
y Fu(e)1058 1023 y Ft(a)p FB(\()p Ft(u)p FB(\))f(+)1220
956 y Fu(N)1251 960 y Fl(f)1209 975 y Fk(X)1214 1083
y Fu(i)p Fr(=1)1290 1023 y Ft(s)1313 1030 y Fu(i)1337
989 y Ft(m)1380 996 y Fu(i)p 1333 1011 66 2 v 1333 1021
a Fs(p)p 1374 1021 25 2 v 1374 1062 a FB(2)1892 1023
y(\(3)p Ft(:)p FB(1\))0 1190 y(a)17 b(BPS)f(state)g(is)g(stable)g
(against)i(an)o(y)e(deca)o(y)f(of)i(the)f(t)o(yp)q(e)530
1316 y(\()p Ft(n)578 1323 y Fu(e)598 1316 y Ft(;)8 b(n)649
1323 y Fu(m)685 1316 y FB(\))704 1323 y Fu(s)722 1327
y Fl(i)751 1316 y Fs(!)13 b Ft(k)g Fs(\002)e FB(\()p
Ft(n)950 1295 y Fm(0)950 1328 y Fu(e)970 1316 y Ft(;)d(n)1021
1295 y Fm(0)1021 1328 y Fu(m)1057 1316 y FB(\))1076 1325
y Fu(s)1094 1312 y Fj(0)1094 1336 y Fl(i)1120 1316 y
FB(+)j Ft(l)h Fs(\002)f FB(\()p Ft(n)1294 1295 y Fm(00)1294
1328 y Fu(e)1317 1316 y Ft(;)d(n)1368 1295 y Fm(00)1368
1328 y Fu(m)1404 1316 y FB(\))1423 1325 y Fu(s)1441 1312
y Fj(00)1441 1336 y Fl(i)1892 1316 y FB(\(3)p Ft(:)p
FB(2\))0 1441 y(\()p Ft(k)r(;)g(l)19 b Fs(2)h Fo(Z)p
FB(\))f(unless)g(this)g(satis\014es)h(at)g(the)f(same)f(time)f(the)i
(conserv)m(ation)h(of)f(c)o(harges)h(and)g(of)f(the)g(total)0
1503 y(BPS)d(mass:)87 1629 y Ft(n)116 1636 y Fu(e)150
1629 y FB(=)e Ft(k)r(n)258 1608 y Fm(0)258 1641 y Fu(e)289
1629 y FB(+)d Ft(l)q(n)383 1608 y Fm(00)383 1641 y Fu(e)455
1629 y Ft(;)56 b(n)554 1636 y Fu(m)604 1629 y FB(=)14
b Ft(k)r(n)712 1608 y Fm(0)712 1641 y Fu(m)759 1629 y
FB(+)d Ft(l)q(n)853 1608 y Fm(00)853 1641 y Fu(m)937
1629 y Ft(;)57 b(s)1031 1636 y Fu(i)1060 1629 y FB(=)14
b Ft(k)r(s)1162 1608 y Fm(0)1162 1641 y Fu(i)1188 1629
y FB(+)d Ft(l)q(s)1276 1608 y Fm(00)1276 1641 y Fu(i)1361
1629 y Fs(\))63 b Ft(Z)17 b FB(=)d Ft(k)d(Z)1649 1608
y Fm(0)1672 1629 y FB(+)g Ft(l)e(Z)1782 1608 y Fm(00)1892
1629 y FB(\(3)p Ft(:)p FB(3\))0 1754 y(and)789 1836 y
Fs(j)p Ft(Z)t Fs(j)14 b FB(=)f Fs(j)p Ft(k)e(Z)1006 1815
y Fm(0)1018 1836 y Fs(j)g FB(+)g Fs(j)p Ft(l)e(Z)1167
1815 y Fm(00)1190 1836 y Fs(j)688 b FB(\(3)p Ft(:)p FB(4\))0
1939 y(with)20 b(ob)o(vious)g(notations)i(for)e Ft(Z)629
1921 y Fm(0)662 1939 y FB(and)h Ft(Z)798 1921 y Fm(00)821
1939 y FB(.)33 b(If)19 b(all)h(bare)g(masses)g Ft(m)1312
1946 y Fu(i)1347 1939 y FB(are)g(equal,)h(due)f(to)g(the)g(SU\()p
Ft(N)1949 1948 y Fu(f)1974 1939 y FB(\))0 2002 y(\015a)o(v)o(our)c
(symmetry)l(,)d(only)j(the)g(sum)f Ft(s)f FB(=)781 1964
y Fk(P)834 2016 y Fu(i)857 2002 y Ft(s)880 2009 y Fu(i)912
2002 y FB(is)i(relev)m(an)o(t)f(and)i(needs)f(to)h(b)q(e)f(conserv)o
(ed.)k(W)l(e)c(see)g(that)0 2064 y(a)h(deca)o(y)e(that)i(satis\014es)f
(the)g(c)o(harge)h(conserv)m(ations)g(\(3.3\))f(is)g(p)q(ossible)h
(only)f(if)860 2183 y Ft(Z)897 2165 y Fm(0)p 860 2205
50 2 v 866 2251 a Ft(Z)928 2217 y Fs(\021)d Ft(\020)18
b Fs(2)c Fo(R)i Ft(;)754 b FB(\(3)p Ft(:)p FB(5\))0 2353
y(and)17 b(moreo)o(v)o(er)d(if)i(it)f(is)h(kinematically)d(p)q
(ossible,)j(i.e.)k(if)865 2479 y(0)14 b Fs(\024)f Ft(k)r(\020)18
b Fs(\024)c FB(1)i Ft(:)764 b FB(\(3)p Ft(:)p FB(6\))0
2611 y(F)l(or)17 b(the)f(case)h(of)g(v)m(anishing)g(bare)g(masses,)f
Ft(m)875 2618 y Fu(i)904 2611 y FB(=)f(0)i(condition)g(\(3.5\))g
(reduces)f(to)h Fs(=)p Ft(m)1656 2587 y Fu(a)1676 2591
y Fl(D)1704 2587 y Fr(\()p Fu(u)p Fr(\))p 1656 2600 101
2 v 1670 2630 a Fu(a)p Fr(\()p Fu(u)p Fr(\))1776 2611
y FB(=)d(0)j(whic)o(h)0 2686 y(yields)k(a)h(single)f(curv)o(e)g
Fs(C)495 2668 y Fr(0)538 2686 y FB(on)i(the)e(Coulom)o(b)g(branc)o(h)h
(indep)q(enden)o(t)f(of)h(the)g(initial)e(state)j(\()p
Ft(n)1834 2693 y Fu(e)1854 2686 y Ft(;)8 b(n)1905 2693
y Fu(m)1940 2686 y FB(\))1959 2693 y Fu(s)1977 2697 y
Fl(i)0 2749 y FB(considered.)21 b(F)l(or)16 b(non-v)m(anishing)h(bare)f
(masses)g(ho)o(w)o(ev)o(er,)e(w)o(e)h(ha)o(v)o(e)h(a)g(whole)g(family)e
(of)i(p)q(ossible)g(deca)o(y)976 2883 y Fp(14)p eop
%%Page: 16 16
16 15 bop 0 160 a FB(curv)o(es.)20 b(Moreo)o(v)o(er,)14
b(a)h(priori,)f(there)h(is)g(a)g(di\013eren)o(t)f(family)f(of)i(suc)o
(h)g(curv)o(es)f(for)i(eac)o(h)e(BPS)h(state.)21 b(As)15
b(an)0 222 y(example)f(consider)i(a)h(dy)o(on)f(with)g
Ft(n)681 229 y Fu(m)731 222 y FB(=)e(1.)21 b(Then)c(condition)f
(\(3.5\))g(reads)47 389 y Fs(=)p Ft(m)155 340 y(n)184
322 y Fm(0)184 352 y Fu(m)220 340 y Ft(a)246 348 y Fu(D)292
340 y Fs(\000)11 b Ft(n)371 322 y Fm(0)371 352 y Fu(e)391
340 y Ft(a)f FB(+)476 303 y Fk(P)529 355 y Fu(i)552 340
y Ft(s)575 322 y Fm(0)575 355 y Fu(i)598 320 y(m)632
324 y Fl(i)p 596 329 52 2 v 596 334 a Fm(p)p 628 334
20 2 v 31 x Fr(2)p 155 378 497 2 v 188 423 a Ft(a)214
432 y Fu(D)259 423 y Fs(\000)h Ft(n)338 430 y Fu(e)358
423 y Ft(a)g FB(+)444 386 y Fk(P)496 438 y Fu(i)520 423
y Ft(s)543 430 y Fu(i)565 404 y(m)599 408 y Fl(i)p 563
412 52 2 v 563 417 a Fm(p)p 595 417 20 2 v 31 x Fr(2)671
389 y FB(=)i(0)31 b Fs(,)f(=)p Ft(m)965 340 y Fs(\000)p
FB(\()p Ft(n)1052 322 y Fm(0)1052 352 y Fu(e)1083 340
y Fs(\000)11 b Ft(n)1162 322 y Fm(0)1162 352 y Fu(m)1198
340 y Ft(n)1227 347 y Fu(e)1247 340 y FB(\))p Ft(a)f
FB(+)1351 303 y Fk(P)1404 355 y Fu(i)1419 340 y FB(\()p
Ft(s)1461 322 y Fm(0)1461 355 y Fu(i)1487 340 y Fs(\000)h
Ft(n)1566 322 y Fm(0)1566 352 y Fu(m)1602 340 y Ft(s)1625
347 y Fu(i)1640 340 y FB(\))1666 320 y Fu(m)1700 324
y Fl(i)p 1664 329 52 2 v 1664 334 a Fm(p)p 1696 334 20
2 v 31 x Fr(2)p 965 378 756 2 v 1127 423 a Ft(a)1153
432 y Fu(D)1198 423 y Fs(\000)g Ft(n)1277 430 y Fu(e)1297
423 y Ft(a)g FB(+)1383 386 y Fk(P)1436 438 y Fu(i)1459
423 y Ft(s)1482 430 y Fu(i)1504 404 y(m)1538 408 y Fl(i)p
1502 412 52 2 v 1502 417 a Fm(p)p 1534 417 20 2 v 31
x Fr(2)1739 389 y FB(=)j(0)j Ft(:)46 b FB(\(3)p Ft(:)p
FB(7\))0 554 y(F)l(or)19 b(\014xed)g Ft(n)240 561 y Fu(e)279
554 y FB(and)g Ft(s)399 561 y Fu(i)415 554 y FB(,)g(this)g(is)f(an)i
Ft(N)707 563 y Fu(f)732 554 y FB(-parameter)e(family)e(of)k(curv)o(es)e
(with)h(rational)g(parameters)f Ft(r)1921 561 y Fu(i)1955
554 y FB(=)0 616 y(\()p Ft(n)48 598 y Fm(0)48 629 y Fu(e)76
616 y Fs(\000)8 b Ft(n)152 598 y Fm(0)152 629 y Fu(m)187
616 y Ft(n)216 623 y Fu(e)236 616 y FB(\))p Ft(=)p FB(\()p
Ft(s)321 598 y Fm(0)321 631 y Fu(i)344 616 y Fs(\000)g
Ft(n)420 598 y Fm(0)420 629 y Fu(m)456 616 y Ft(s)479
623 y Fu(i)494 616 y FB(\).)21 b(Ev)o(en)14 b(though)h(there)f(are)h
(some)f(relations)g(b)q(et)o(w)o(een)g(the)g(p)q(ossible)h(quan)o(tum)0
679 y(n)o(um)o(b)q(ers)20 b Ft(n)231 661 y Fm(0)231 691
y Fu(e)272 679 y FB(and)h Ft(s)394 661 y Fm(0)394 693
y Fu(i)410 679 y Ft(;)16 b(n)469 661 y Fm(0)469 691 y
Fu(m)526 679 y FB(\(see)21 b(next)f(subsection\))h(there)g(are)g(still)
f(man)o(y)g(p)q(ossible)h(v)m(alues)g(of)h Ft(r)1878
686 y Fu(i)1914 679 y FB(and)0 741 y(w)o(e)15 b(exp)q(ect)h(a)g(m)o
(ultitude)d(of)j(curv)o(es)f(of)h(marginal)f(stabilit)o(y)g(on)h(the)g
(Coulom)o(b)f(branc)o(h)h(of)g(mo)q(duli)e(space)0 803
y(resulting)f(in)g(a)g(rather)g(c)o(haotic)g(situation.)21
b(F)l(ortunately)12 b(not)i(all)f(of)g(these)g(curv)o(es)f(satisfy)i
(the)e(additional)0 866 y(criterion)17 b(\(3.6\).)26
b(In)18 b(particular,)f(for)h(the)g(case)g(w)o(e)f(will)g(study)h(in)f
(detail)h(in)f(the)h(next)f(section,)g(namely)0 928 y
Ft(N)39 937 y Fu(f)78 928 y FB(=)d(2)j(with)f(equal)g(bare)h(masses,)e
(where)h(one)h(exp)q(ects)f(a)g(di\013eren)o(t)g(one-parameter)g
(family)e(of)i(curv)o(es)0 990 y(lab)q(elled)h(b)o(y)h
Ft(r)g FB(=)f(\()p Ft(n)395 972 y Fm(0)395 1002 y Fu(e)427
990 y Fs(\000)12 b Ft(n)507 972 y Fm(0)507 1002 y Fu(m)543
990 y Ft(n)572 997 y Fu(e)592 990 y FB(\))p Ft(=)p FB(\()p
Ft(s)677 972 y Fm(0)702 990 y Fs(\000)g Ft(n)782 972
y Fm(0)782 1002 y Fu(m)818 990 y Ft(s)p FB(\),)18 b Ft(s)f
FB(=)g Ft(s)1010 997 y Fr(1)1044 990 y FB(+)12 b Ft(s)1117
997 y Fr(2)1138 990 y FB(,)18 b(for)h Fv(e)n(ach)f FB(BPS)g(state,)g
(it)g(turned)g(out)g(that)0 1052 y(only)i(one)f(or)i(t)o(w)o(o)e(suc)o
(h)h(curv)o(es)f(in)g(eac)o(h)g(family)f(are)i(relev)m(an)o(t,)f(i.e.)
31 b(satisfy)19 b(the)h(additional)g(criterion)0 1115
y(\(3.6\).)h(Hence)12 b(the)i(set)g(of)h(all)e(relev)m(an)o(t)g(curv)o
(es)g(for)i Fv(al)r(l)g FB(BPS)f(states)g(are)g(nicely)f(describ)q(ed)g
(b)o(y)h(a)g(single)g(set)0 1177 y(of)i(curv)o(es)g Fs(C)234
1156 y Fm(\006)231 1192 y Fr(2)p Fu(n)275 1177 y Ft(;)24
b(n)14 b Fs(2)g Fo(Z)p FB(,)i(and)h(rather)f(than)h(ha)o(ving)f(a)h(c)o
(haotic)e(situation)i(one)f(gets)h(a)f(v)o(ery)f(clear)g(picture)0
1239 y(of)k(whic)o(h)g(states)h(exist)e(in)h(whic)o(h)f(region)i(of)f
(the)g(Coulom)o(b)f(branc)o(h.)30 b(It)19 b(will)f(b)q(ecome)g(clear)g
(that)i(this)0 1301 y(organizing)d(sc)o(heme)d(should)i(b)q(e)h
(similarly)c(at)k(w)o(ork)f(for)h(all)e(other)i(massiv)o(e)d(theories)i
(with)g Ft(N)1783 1310 y Fu(f)1822 1301 y Fs(\024)d FB(3.)83
1382 y(One)23 b(particularly)g(simple)e(case)i(is)g(the)g(deca)o(y)g
(of)h(states)g(with)1351 1345 y Fk(P)1412 1382 y Ft(s)1435
1389 y Fu(i)1450 1382 y Ft(m)1493 1389 y Fu(i)1534 1382
y FB(=)i(0)e(in)o(to)f(states)h(with)0 1415 y Fk(P)61
1452 y Ft(s)84 1434 y Fm(0)84 1467 y Fu(i)99 1452 y Ft(m)142
1459 y Fu(i)179 1452 y FB(=)d(0.)36 b(The)20 b(corresp)q(onding)i(deca)
o(y)e(curv)o(es)g(all)h(are)f(giv)o(en)g(b)o(y)h Fs(=)p
Ft(m)1483 1427 y Fu(a)1503 1431 y Fl(D)1531 1427 y Fr(\()p
Fu(u)p Fr(\))p 1483 1441 101 2 v 1497 1471 a Fu(a)p Fr(\()p
Fu(u)p Fr(\))1609 1452 y FB(=)h(0,)g(i.e.)34 b(they)20
b(all)0 1527 y(coincide)f(with)h(the)f(curv)o(e)g Fs(C)556
1509 y Fr(0)578 1527 y FB(.)32 b(W)l(e)20 b(will)f(see)g(that)i(this)f
(is)f(quite)h(an)g(imp)q(ortan)o(t)f(case,)i(and)f(that)h(this)0
1589 y(curv)o(e)15 b Fs(C)159 1571 y Fr(0)197 1589 y
FB(still)g(pla)o(ys)h(a)g(priviledged)f(r^)-24 b(ole,)15
b(ev)o(en)h(for)g(non-zero)h(bare)f(masses.)1458 1560
y Fu(?)83 1670 y FB(Note)j(that)h(if)f(w)o(e)h(had)g(considered)f(deca)
o(ys)g(in)o(to)g(three)g(indep)q(enden)o(t)g(BPS)h(states,)g(\()p
Ft(n)1764 1677 y Fu(e)1784 1670 y Ft(;)8 b(n)1835 1677
y Fu(m)1871 1670 y FB(\))1890 1677 y Fu(s)1908 1681 y
Fl(i)1943 1670 y Fs(!)0 1732 y Ft(k)f Fs(\002)e FB(\()p
Ft(n)124 1714 y Fm(0)124 1745 y Fu(e)145 1732 y Ft(;)j(n)196
1714 y Fm(0)196 1745 y Fu(m)231 1732 y FB(\))250 1742
y Fu(s)268 1729 y Fj(0)268 1752 y Fl(i)289 1732 y FB(+)d
Ft(l)h Fs(\002)f FB(\()p Ft(n)445 1714 y Fm(00)445 1745
y Fu(e)468 1732 y Ft(;)j(n)519 1714 y Fm(00)519 1745
y Fu(m)555 1732 y FB(\))574 1742 y Fu(s)592 1729 y Fj(00)592
1752 y Fl(i)620 1732 y FB(+)d Ft(q)i Fs(\002)e FB(\()p
Ft(n)784 1714 y Fm(000)784 1745 y Fu(e)817 1732 y Ft(;)j(n)868
1714 y Fm(000)868 1745 y Fu(m)904 1732 y FB(\))923 1742
y Fu(s)941 1729 y Fj(000)941 1752 y Fl(i)973 1732 y FB(,)13
b(w)o(e)g(w)o(ould)h(ha)o(v)o(e)e Fv(two)29 b FB(conditions:)20
b(eq.)g(\(3.5\))14 b(w)o(ould)0 1806 y(b)q(e)k(supplemen)o(ted)e(b)o(y)
453 1787 y Fu(Z)482 1771 y Fj(00)p 453 1795 50 2 v 463
1823 a Fu(Z)524 1806 y Fs(2)h Fo(R)p FB(,)h(so)h(that)f(suc)o(h)g
(\\triple")g(deca)o(ys)f(can)i(only)e(o)q(ccur)i(at)f(the)g(in)o
(tersection)0 1869 y Fv(p)n(oints)d FB(of)g(t)o(w)o(o)g(curv)o(es.)20
b(Belo)o(w,)14 b(when)i(w)o(e)e(discuss)i(ho)o(w)f(to)h(transp)q(ort)g
(a)g(BPS)f(state)g(along)h(a)g(path)g(from)0 1931 y(one)h(region)h(to)f
(another,)h(the)f(path)g(can)h(alw)o(a)o(ys)f(b)q(e)g(c)o(hosen)g(so)h
(as)g(to)f(a)o(v)o(oid)g(suc)o(h)g(in)o(tersection)f(p)q(oin)o(ts.)0
1993 y(Hence,)i(triple)g(deca)o(ys)h(are)g(irrelev)m(an)o(t)f(for)i
(establishing)f(the)g(existence)e(domains)i(of)g(the)g(BPS)g(states.)0
2055 y(Ob)o(viously)l(,)c(\\quadruple")h(and)h(higher)f(deca)o(ys,)g
(if)f(p)q(ossible)i(at)f(all,)g(are)g(just)g(as)h(irrelev)m(an)o(t.)p
0 2608 698 2 v 58 2657 a Fq(?)33 b Fp(This)12 b(statemen)o(t)g(is)f(of)
h(course)h(mean)o(t)e(for)h(the)g(c)o(hoice)h(of)e Fq(a)1050
2663 y Fh(D)1092 2657 y Fp(and)h Fq(a)g Fp(that)g(giv)o(es)g(\014nite)h
(limits)c(under)k(the)g(R)o(G)e(\015o)o(w)g(as)100 2707
y Fq(m)h Fi(!)f(1)p Fp(.)17 b(F)m(or)d Fq(N)380 2713
y Fh(f)413 2707 y Fp(=)e(2)i(with)f(equal)h(masses,)f(these)j(are)e
(the)h(~)-22 b Fq(a)1113 2713 y Fh(D)1157 2707 y Fp(and)14
b Fq(a)g Fp(of)f(eq.)19 b(\(2.30\))13 b(and)1592 2676
y Fg(P)1643 2707 y Fq(s)1662 2713 y Fh(i)1676 2707 y
Fq(m)1712 2713 y Fh(i)1738 2707 y Fp(=)1782 2676 y Fg(P)1833
2707 y Fq(s)1852 2692 y Ff(0)1852 2718 y Fh(i)1866 2707
y Fq(m)1902 2713 y Fh(i)1928 2707 y Fp(=)f(0)100 2758
y(is)h(mean)o(t)g(to)h(b)q(e)i(~)-23 b Fq(s)12 b Fp(=)i(~)-23
b Fq(s)468 2743 y Ff(0)492 2758 y Fp(=)12 b(0.)976 2883
y(15)p eop
%%Page: 17 17
17 16 bop 28 160 a Fw(3.2.)36 b Fo(Our)19 b(w)n(orking)g(h)n(yp)r
(othesis)83 277 y FB(In)f(order)g(to)g(determine)e(the)h(BPS)h(sp)q
(ectra)h(at)f(an)o(y)g(p)q(oin)o(t)g(on)h(the)e(Coulom)o(b)g(branc)o
(h,)h(w)o(e)g(will)f(ex-)0 339 y(tensiv)o(ely)d(use)i(the)g(follo)o
(wing)g(claim:)83 484 y Fo(P)p FB(:)i Fv(A)o(t)i(any)g(p)n(oint)f(of)g
(the)h(Coulomb)h(br)n(anch)e(of)h(a)f(the)n(ory)g(having)h
Ft(N)1401 493 y Fu(f)1446 484 y Fv(\015avours)f(with)h(b)n(ar)n(e)f
(masses)0 546 y Ft(m)43 553 y Fu(j)63 546 y Fv(,)g FB(1)e
Fs(\024)g Ft(j)i Fs(\024)e Ft(N)328 555 y Fu(f)353 546
y Fv(,)i(the)h(set)f(of)g(stable)h(BPS)g(states)g(is)f(include)n(d)h
(into)f(the)h(set)f(of)g(stable)h(BPS)g(states)g(of)0
608 y(the)e Ft(m)124 615 y Fu(j)157 608 y FB(=)c(0)k
Fv(the)n(ory)f(at)g(we)n(ak)h(c)n(oupling.)83 691 y FB(Note)13
b(that)g(the)g(Coulom)o(b)f(branc)o(h)i(of)f(the)g Ft(m)920
698 y Fu(j)953 691 y FB(=)h(0)g(theory)f(is)g(separated)g(in)o(to)g(t)o
(w)o(o)g(regions,)h(one)f(con-)0 753 y(taining)h(all)f(the)h(BPS)f
(states)h(stable)g(at)g(w)o(eak)g(coupling,)f(and)i(the)e(other)h(at)g
(strong)h(coupling)f(con)o(taining)0 815 y(a)i(\014nite)f(subset)h(of)g
(the)g(BPS)f(states)i(stable)e(at)h(w)o(eak)g(coupling)f([3,4].)21
b(One)15 b(simple)f(consequence)h(of)h(the)0 878 y(claim)g(\(P\))j(is)f
(that)h(the)f(set)g(of)h(stable)f(BPS)h(states)g(cannot)g(enlarge)f
(when)g(one)h(go)q(es)g(from)f(the)g Ft(N)1906 886 y
Fu(f)1949 878 y FB(to)0 940 y(the)c Ft(N)121 949 y Fu(f)152
940 y Fs(\000)7 b FB(1)14 b(theory)g(follo)o(wing)g(the)g(R)o(G)g
(\015o)o(w)g(whic)o(h)g(is)g(what)h(one)f(naturally)g(exp)q(ects.)20
b(This)14 b(is)g(p)q(erfectly)0 1002 y(consisten)o(t)20
b(with)g(the)g(sp)q(ectra)g(determined)e(for)i(zero)g(bare)g(masses)g
(in)g([3,4].)32 b(Another)20 b(consequence,)0 1065 y(whic)o(h)14
b(pla)o(ys)h(a)g(prominen)o(t)e(r^)-24 b(ole)14 b(in)h(the)f(presen)o
(t)g(w)o(ork,)h(is)g(that)g(the)g(p)q(ossible)g(deca)o(y)f(reactions)g
(b)q(et)o(w)o(een)0 1127 y(BPS)g(states)g(are)h(then)f(extremel)o(y)d
(constrained)k(and)f(th)o(us)g(the)g(n)o(um)o(b)q(er)f(of)h(relev)m(an)
o(t)f(curv)o(es)g(of)i(marginal)0 1189 y(stabilit)o(y)j(enormously)h
(decreased.)31 b(This)20 b(is)g(explained)f(in)g(detail)g(for)h(the)g
Ft(N)1499 1198 y Fu(f)1543 1189 y FB(=)g(2)g(theory)g(with)g(t)o(w)o(o)
0 1252 y(equal)c(bare)g(masses)g Ft(m)441 1259 y Fr(1)476
1252 y FB(=)d Ft(m)570 1259 y Fr(2)605 1252 y FB(=)h
Ft(m)i FB(in)g(the)g(next)f(section.)83 1334 y(Let)f(us)f(giv)o(e)g(a)h
(strong)g(argumen)o(t)f(motiv)m(ating)f(our)i(fundamen)o(tal)e(claim)g
(\(P\).)h(It)g(is)g(inspired)g(of)h(ideas)0 1396 y(already)k(discussed)
g(in)f([11].)26 b(A)18 b(crucial)f(fact)h(is)f(that,)i(for)f(an)o(y)g
(BPS)g(state)g Ft(p)f FB(=)g(\()p Ft(n)1594 1403 y Fu(e)1614
1396 y Ft(;)8 b(n)1665 1403 y Fu(m)1701 1396 y FB(\))1720
1403 y Fu(s)1758 1396 y FB(whic)o(h)17 b(do)q(es)0 1459
y(not)d(b)q(elong)g(to)g(the)f(w)o(eak)g(coupling)g(sp)q(ectrum)f(of)i
(the)f Ft(m)1073 1466 y Fu(j)1107 1459 y FB(=)g(0)h(theory)l(,)g(there)
e(alw)o(a)o(ys)i(exist)e(some)h(v)m(alues)0 1521 y(of)k(the)f
Ft(m)183 1528 y Fu(j)218 1521 y FB(for)h(whic)o(h)570
1617 y Ft(n)599 1624 y Fu(m)635 1617 y Ft(a)661 1625
y Fu(D)695 1617 y FB(\()p Ft(u)742 1624 y Fr(0)763 1617
y Ft(;)8 b(m)828 1624 y Fu(j)848 1617 y FB(\))j Fs(\000)g
Ft(n)957 1624 y Fu(e)977 1617 y Ft(a)p FB(\()p Ft(u)1050
1624 y Fr(0)1070 1617 y Ft(;)d(m)1135 1624 y Fu(j)1155
1617 y FB(\))j(+)g Ft(s)1273 1583 y(m)p 1262 1605 66
2 v 1262 1615 a Fs(p)p 1303 1615 25 2 v 1303 1657 a FB(2)1346
1617 y(=)j(0)470 b(\(3)p Ft(:)p FB(8\))0 1746 y(at)23
b(some)e(non-singular)i Ft(u)507 1753 y Fr(0)550 1746
y FB(on)g(the)f(Coulom)o(b)f(branc)o(h.)39 b(This)23
b(ma)o(y)d(b)q(e)j(pro)o(v)o(en)e(b)o(y)h(noting)h(that)f(for)0
1808 y(su\016cien)o(tly)14 b(large)j Fs(j)p Ft(m)421
1815 y Fu(j)440 1808 y Fs(j)p FB(,)f(the)g(p)q(oin)o(t)h
Ft(u)724 1815 y Fr(0)745 1808 y FB(,)f(if)g(it)g(exists,)g(lies)f(at)i
(large)f Fs(j)p Ft(u)p Fs(j)e(\030)g(j)p Ft(m)1461 1815
y Fu(j)1480 1808 y Fs(j)j FB(where)f(the)g(form)o(ulas)f(for)0
1870 y Ft(a)26 1879 y Fu(D)80 1870 y FB(and)k Ft(a)g
FB(simplify)d(and)k(th)o(us)f(where)g(\(3.8\))g(can)h(b)q(e)f(studied)g
(v)o(ery)f(explicitly)l(.)27 b(The)19 b(set)g(of)g(curv)o(es)f(of)0
1933 y(marginal)e(stabilit)o(y)f Fs([)427 1941 y Fu(r)q
Fm(2)p Fe(Q)507 1933 y Fs(C)533 1940 y Fu(p)554 1933
y FB(\()p Ft(r)o(;)8 b(m)659 1940 y Fu(j)678 1933 y FB(\))17
b(a)g(priori)g(relev)m(an)o(t)e(for)i(the)g(deca)o(ys)f(of)h
Ft(p)f FB(=)e(\()p Ft(n)1584 1940 y Fu(e)1604 1933 y
Ft(;)8 b(n)1655 1940 y Fu(m)1691 1933 y FB(\))1710 1940
y Fu(s)1730 1933 y FB(,)17 b(all)f(cross)h(at)0 1995
y(the)d(p)q(oin)o(t)g Ft(u)235 2002 y Fr(0)270 1995 y
FB(and)g(form)f(a)h(dense)g(subset)g(of)g(the)g(Coulom)o(b)f(branc)o
(h.)20 b(The)14 b(same)f(prop)q(erties)h(are)g(true)f(for)0
2057 y(the)i(compleme)o(n)o(tary)d(set)j Fs([)531 2068
y Fu(r)q Fm(2)p Fr(\()p Fe(R)p Fm(n)p Fe(Q)p Fr(\))693
2057 y Fs(C)719 2064 y Fu(p)740 2057 y FB(\()p Ft(r)o(;)8
b(m)845 2064 y Fu(j)864 2057 y FB(\).)21 b(No)o(w,)15
b(supp)q(ose)h(that)g Ft(p)f FB(exists)g(in)g(some)f(op)q(en)h(set)g
(of)h(the)0 2120 y(Coulom)o(b)g(branc)o(h.)24 b(It)16
b(m)o(ust)g(then)h(exist)f(at)i(some)e(p)q(oin)o(ts)h(on)h(a)f(curv)o
(e)f Fs(C)1392 2127 y Fu(p)1414 2120 y FB(\()p Ft(r)o(;)8
b(m)1519 2127 y Fu(j)1538 2120 y FB(\))17 b(with)g Ft(r)h
FB(an)g(irrational)0 2182 y(n)o(um)o(b)q(er.)j(Since)16
b(the)h(state)g Ft(p)g FB(cannot)h(deca)o(y)e(on)h(suc)o(h)g(a)g(curv)o
(e)f(for)h Ft(r)h FB(irrational,)f(it)f(m)o(ust)g(also)h(exist)f(at)0
2245 y(the)k(p)q(oin)o(t)f Ft(u)246 2252 y Fr(0)287 2245
y FB(where)h(it)f(is)h(massless,)f(whic)o(h)g(w)o(ould)h(con)o(tradict)
f(the)h(fact)f(that)h Ft(u)1596 2252 y Fr(0)1637 2245
y FB(is)g(not)g(a)g(singular)0 2307 y(p)q(oin)o(t.)h(Th)o(us)16
b Ft(p)h FB(cannot)g(exist)e(as)h(a)h(stable)e(state)i(in)e(an)o(y)h
(op)q(en)h(region)f(for)g(the)g(v)m(alues)g(of)g Ft(m)1758
2314 y Fu(j)1793 2307 y FB(suc)o(h)g(that)0 2369 y(\(3.8\))h(has)h(a)g
(solution.)24 b(No)o(w,)17 b(b)o(y)g(v)m(arying)g(the)g
Ft(m)950 2376 y Fu(j)970 2369 y FB(,)g(the)g(curv)o(es)f
Fs(C)1262 2376 y Fu(p)1283 2369 y FB(\()p Ft(r)o(;)8
b(m)1388 2376 y Fu(j)1407 2369 y FB(\))18 b(lo)q(ose)f(their)g(shap)q
(e)h(and)g(will)0 2432 y(no)e(longer)f(cross)h(at)g(a)g(single)f(p)q
(oin)o(t)h(,)f(but)g(w)o(e)g(are)h(still)e(insured)h(that)h
Ft(p)g FB(cannot)g(exist)f(on)h(an)o(y)f Fs(C)1828 2439
y Fu(p)1850 2432 y FB(\()p Ft(r)o(;)8 b(m)1955 2439 y
Fu(j)1974 2432 y FB(\))0 2494 y(with)14 b Ft(r)i FB(irrational.)k(W)l
(e)14 b(b)q(eliev)o(e)e(on)j(ph)o(ysical)e(grounds)i(that)g(the)f(fact)
g(that)g Ft(p)h FB(cannot)g(exist)e(in)h(an)o(y)g(op)q(en)0
2556 y(region)j(of)h(the)e(Coulom)o(b)g(branc)o(h)i(means)e(that)h
Ft(p)h FB(simply)d(cannot)i(exist)g(at)g(all)g(as)g(a)h(stable)f(BPS)g
(state.)0 2619 y(Finally)l(,)j(note)h(that)g(instead)f(of)h(studying)g
(eq.)34 b(\(3.8\),)22 b(w)o(e)e(could)g(remark)f(that)i(for)g
(arbitrarily)f(small)0 2681 y Fs(j)p Ft(m)57 2688 y Fu(j)76
2681 y Fs(j)p FB(,)e(the)g(sp)q(ectra)h(of)f(BPS)g(states)h(should)g(b)
q(e)f(the)g(same)f(as)i(the)e(one)i(for)f(the)g Ft(m)1570
2688 y Fu(j)1607 2681 y FB(=)f(0)h(theory)l(,)g(whic)o(h)0
2743 y(pro)o(v)o(es)13 b(that)h(an)g(undesirable)f(state)h(lik)o(e)e
Ft(p)i FB(cannot)g(exist)f(on)h Fs(C)1174 2750 y Fu(p)1196
2743 y FB(\()p Ft(r)o(;)8 b(m)1301 2750 y Fu(j)1320 2743
y FB(\))13 b(for)h Ft(r)h FB(irrational)e(and)i(su\016cien)o(tly)976
2883 y Fp(16)p eop
%%Page: 18 18
18 17 bop 0 160 a FB(small)17 b Fs(j)p Ft(m)187 167 y
Fu(j)207 160 y Fs(j)p FB(,)i(and)g(th)o(us)g(for)g(an)o(y)g
Ft(m)676 167 y Fu(j)696 160 y FB(.)29 b(Ho)o(w)o(ev)o(er,)17
b(this)i(reasoning)h(certainly)d(is)i(less)f(rigorous)i(than)g(the)0
222 y(one)f(based)h(on)f(\(3.8\).)30 b(T)l(o)19 b(end)g(this)g
(section,)g(let)f(us)h(p)q(oin)o(t)g(out)h(that)f(the)g(claim)e(\(P\))i
(is)g(also)g(strongly)0 284 y(supp)q(orted)e(b)o(y)f(the)g(stringy)g
(approac)o(h)h(used)g(in)e([10].)330 442 y Fz(4.)k(The)f(case)g(of)h(t)
n(w)n(o)g(\015a)n(v)n(ours)i(with)c(equal)h(masses)83
553 y FB(As)h(an)h(illustrativ)o(e)e(and)i(represen)o(tativ)o(e)d
(example,)h(in)h(this)h(section)f(w)o(e)g(study)h(the)f(BPS)g(sp)q
(ectra)0 615 y(of)h(the)f Ft(N)185 624 y Fu(f)229 615
y FB(=)h(2)f(theory)h(with)f(an)o(y)g Ft(m)739 622 y
Fr(1)780 615 y FB(=)g Ft(m)880 622 y Fr(2)920 615 y FB(=)h
Ft(m)f FB(real)g(p)q(ositiv)o(e)g(bare)g(mass)g(in)g(great)h(detail.)31
b(The)0 677 y(analytic)17 b(structures)g(for)h(small)e(\(0)g
Ft(<)g(m)f(<)h FB(\003)880 684 y Fr(2)901 677 y Ft(=)p
FB(2\))i(and)g(large)g(\()p Ft(m)d(>)h FB(\003)1368 684
y Fr(2)1389 677 y Ft(=)p FB(2\))i(bare)g(masses)f(is)g(displa)o(y)o(ed)
0 740 y(in)f(the)h(lo)o(w)o(er)e(Fig.)23 b(2,)16 b(while)g(the)g
(explicit)f(solution)i(for)g(the)f(p)q(erio)q(ds)i Ft(a)1357
748 y Fu(D)1408 740 y FB(and)f Ft(a)f FB(is)g(giv)o(en)g(b)o(y)g
(equations)0 802 y(\(2.27\))j(.)27 b(The)18 b(three)f(singularities)h
(on)g(the)g(Coulom)o(b)f(branc)o(h)i(are)f(at)g(p)q(oin)o(ts)h
Ft(u)e FB(=)g Ft(\033)1635 809 y Fu(j)1654 802 y FB(,)h
Ft(\033)1714 809 y Fr(1)1752 802 y Fs(\024)f Ft(\033)1836
809 y Fr(2)1874 802 y Fs(\024)g Ft(\033)1958 809 y Fr(3)1979
802 y FB(,)0 864 y(suc)o(h)f(that)374 963 y Ft(\033)402
970 y Fr(1)437 963 y FB(=)e Fs(\000)533 929 y FB(\003)567
911 y Fr(2)567 943 y(2)p 533 952 56 2 v 548 997 a FB(8)603
963 y Fs(\000)d FB(\003)687 970 y Fr(2)708 963 y Ft(m)16
b(;)57 b(\033)866 970 y Fr(2)901 963 y FB(=)14 b Fs(\000)997
929 y FB(\003)1031 911 y Fr(2)1031 943 y(2)p 997 952
V 1012 997 a FB(8)1067 963 y(+)d(\003)1150 970 y Fr(2)1172
963 y Ft(m)k(;)57 b(\033)1329 970 y Fr(3)1364 963 y FB(=)14
b Ft(m)1459 942 y Fr(2)1491 963 y FB(+)1545 929 y(\003)1579
911 y Fr(2)1579 943 y(2)p 1545 952 V 1560 997 a FB(8)1605
963 y Fs(\001)273 b FB(\(4)p Ft(:)p FB(1\))0 1076 y(When)19
b Ft(m)g FB(=)f(\003)297 1083 y Fr(2)319 1076 y Ft(=)p
FB(2,)i(the)f(singularities)f Ft(\033)790 1083 y Fr(2)830
1076 y FB(and)i Ft(\033)956 1083 y Fr(3)996 1076 y FB(coincide.)29
b(F)l(or)20 b(small)d(mass,)i(0)g Ft(<)g(m)g(<)f FB(\003)1821
1083 y Fr(2)1843 1076 y Ft(=)p FB(2,)i(the)0 1139 y(mono)q(dromies)15
b Ft(M)352 1121 y Fm(\003)390 1139 y FB(\(see)g(\(2.9\)\))i(as)g(view)o
(ed)e(from)g(the)h(lo)o(w)o(er)f(half)h Ft(u)p FB(-plane)g(are)h(giv)o
(en)e(b)o(y)134 1332 y Ft(M)186 1311 y Fm(\003)181 1344
y Fr(1)221 1332 y FB(=)273 1217 y Fk(0)273 1304 y(B)273
1336 y(@)364 1249 y FB(0)88 b(1)49 b(0)325 1332 y Fs(\000)p
FB(1)88 b(2)49 b(0)364 1415 y(1)g Fs(\000)p FB(1)g(1)581
1217 y Fk(1)581 1304 y(C)581 1336 y(A)650 1332 y Ft(;)56
b(M)772 1311 y Fm(\003)767 1344 y Fr(2)808 1332 y FB(=)859
1217 y Fk(0)859 1304 y(B)859 1336 y(@)950 1249 y FB(0)49
b(1)g(0)911 1332 y Fs(\000)p FB(1)g(2)g(0)911 1415 y
Fs(\000)p FB(1)g(1)g(1)1129 1217 y Fk(1)1129 1304 y(C)1129
1336 y(A)1197 1332 y Ft(;)57 b(M)1320 1311 y Fm(\003)1315
1344 y Fr(3)1355 1332 y FB(=)1407 1217 y Fk(0)1407 1304
y(B)1407 1336 y(@)1498 1249 y FB(1)49 b(0)g(0)1459 1332
y Fs(\000)p FB(2)g(1)g(0)1498 1415 y(0)g(0)g(1)1677 1217
y Fk(1)1677 1304 y(C)1677 1336 y(A)1745 1332 y Ft(;)133
b FB(\(4)p Ft(:)p FB(2\))0 1525 y(while)15 b(for)i Ft(m)c(>)h
FB(\003)344 1532 y Fr(2)365 1525 y Ft(=)p FB(2,)203 1718
y Ft(M)255 1698 y Fm(\003)250 1731 y Fr(1)291 1718 y
FB(=)343 1603 y Fk(0)343 1691 y(B)343 1723 y(@)433 1635
y FB(0)88 b(1)49 b(0)394 1718 y Fs(\000)p FB(1)88 b(2)49
b(0)433 1801 y(1)g Fs(\000)p FB(1)g(1)651 1603 y Fk(1)651
1691 y(C)651 1723 y(A)719 1718 y Ft(;)57 b(M)842 1698
y Fm(\003)837 1731 y Fr(2)877 1718 y FB(=)929 1603 y
Fk(0)929 1691 y(B)929 1723 y(@)1020 1635 y FB(2)49 b(1)g(0)981
1718 y Fs(\000)p FB(1)g(0)g(0)1020 1801 y(1)g(1)g(1)1199
1603 y Fk(1)1199 1691 y(C)1199 1723 y(A)1267 1718 y Ft(;)56
b(M)1389 1698 y Fm(\003)1384 1731 y Fr(3)1425 1718 y
FB(=)1477 1603 y Fk(0)1477 1691 y(B)1477 1723 y(@)1529
1635 y FB(1)49 b(2)g(0)1529 1718 y(0)g(1)g(0)1529 1801
y(0)g(2)g(1)1708 1603 y Fk(1)1708 1691 y(C)1708 1723
y(A)1776 1718 y Ft(:)102 b FB(\(4)p Ft(:)p FB(3\))0 1911
y(The)16 b(mono)q(drom)o(y)f(at)h(the)g(sup)q(erconformal)g(p)q(oin)o
(t,)g(according)h(to)f(\(2.11\),)h(is)f(giv)o(en)f(b)o(y)578
2105 y Ft(M)630 2084 y Fm(\003)625 2117 y Fr(sc)673 2105
y FB(=)f Ft(M)777 2084 y Fm(\003)772 2117 y Fr(2)p Fm(\001)p
Fr(3)837 2105 y FB(=)g Ft(M)941 2084 y Fm(\003)936 2117
y Fr(3)962 2105 y Ft(M)1014 2084 y Fm(\003)1009 2117
y Fr(2)1050 2105 y FB(=)1102 1990 y Fk(0)1102 2077 y(B)1102
2109 y(@)1192 2022 y FB(0)49 b(1)h(0)1154 2105 y Fs(\000)p
FB(1)e(0)i(0)1154 2188 y Fs(\000)p FB(1)e(1)i(1)1371
1990 y Fk(1)1371 2077 y(C)1371 2109 y(A)1892 2105 y FB(\(4)p
Ft(:)p FB(4\))83 2313 y(Before)17 b(em)o(barking)e(on)j(the)f(detailed)
g(deriv)m(ation)g(of)h(the)f(BPS)g(sp)q(ectra,)h(let)f(us)h(\014rst)f
(discuss)h(what)0 2375 y(one)c(exp)q(ects)g(from)g(the)g(R)o(G)g(\015o)
o(w)g(argumen)o(ts.)20 b(F)l(or)15 b Ft(m)e FB(=)h(0)h(there)e(is)h(a)h
(single)f(deca)o(y)g(curv)o(e,)f(and)i(outside)0 2438
y(this)h(curv)o(e)e(all)h(semiclassical)e(states)j(exist,)f(namely)f
(all)h(dy)o(ons)h(\()p Ft(n;)8 b FB(1\))16 b(and)g(the)g(W-b)q(oson)h
(\(2)p Ft(;)8 b FB(0\))17 b(as)f(w)o(ell)0 2500 y(as)i(the)g(quarks)g
(\(1)p Ft(;)8 b FB(0\).)26 b(The)18 b(dy)o(ons)f(are)h(doublets)g(in)f
(one)h(or)g(the)g(other)g(spinor)g(represen)o(tation)f(of)h(the)0
2562 y(\015a)o(v)o(our)h(spin\(4\))g(group,)i(while)d(the)h(quarks)g
(are)g(in)g(the)g(v)o(ector)f(represen)o(tation)g(and)i(the)f(W-b)q
(oson)i(is)0 2624 y(a)d(singlet.)26 b(Inside)17 b(the)h(curv)o(e,)f
(only)h(the)f(states)i(that)f(can)g(b)q(ecome)f(massless)g(and)h(are)g
(resp)q(onsible)g(for)0 2686 y(the)h(singularities)g(exist,)f(namely)g
(the)h(monop)q(ole)g(\(0)p Ft(;)8 b FB(1\))20 b(and)g(the)f(dy)o(on)g
(\()p Fs(\000)p Ft(\017;)8 b FB(1\).)30 b(As)19 b(so)q(on)i(as)f(a)g
(non-)0 2749 y(zero)g(bare)g(mass)f Ft(m)h FB(is)g(turned)g(on,)h(the)e
Ft(s)p FB(-c)o(harge)h(b)q(ecomes)f(relev)m(an)o(t,)h(and)g(certain)g
(m)o(ultiple)o(ts)e(split.)976 2883 y Fp(17)p eop
%%Page: 19 19
19 18 bop 0 160 a FB(Semiclassically)18 b(w)o(e)k(still)e(ha)o(v)o(e)h
(doublets)h(of)h(dy)o(ons)f(\(2)p Ft(n;)8 b FB(1\))1175
167 y Fr(0)1218 160 y FB(with)22 b(ev)o(en)f Ft(n)1481
167 y Fu(e)1523 160 y FB(and)h Ft(s)h FB(=)h(0,)f(while)e(the)0
222 y(doublets)16 b(with)g(o)q(dd)i Ft(n)432 229 y Fu(e)468
222 y FB(split)d(in)o(to)h(t)o(w)o(o)g(singlets)g(\(2)p
Ft(n)c FB(+)f(1)p Ft(;)d FB(1\))1163 229 y Fr(+1)1231
222 y FB(and)16 b(\(2)p Ft(n)c FB(+)f(1)p Ft(;)d FB(1\))1547
229 y Fm(\000)p Fr(1)1598 222 y FB(.)22 b(W)l(e)16 b(ha)o(v)o(e)f(a)i
(quark)0 285 y(doublet)f(\(1)p Ft(;)8 b FB(0\))284 292
y Fr(1)323 285 y FB(and)17 b(another)g(quark)f(doublet)h(\(1)p
Ft(;)8 b FB(0\))1020 292 y Fm(\000)p Fr(1)1071 285 y
FB(,)16 b(as)h(w)o(ell)f(as)h(the)f(W-b)q(oson)i(\(2)p
Ft(;)8 b FB(0\))1719 292 y Fr(0)1741 285 y FB(.)22 b(According)0
348 y(to)17 b(our)f(claim)e(\(P\),)i(this)g(is)g(the)g(maximal)e(set)i
(of)g(stable)h(BPS)f(states:)454 484 y Fs(S)484 491 y
Fr(max)571 484 y FB(=)623 443 y Fk(\010)652 484 y FB(\(2)p
Ft(n;)8 b FB(1\))789 463 y Fm(\002)p Fr(2)789 499 y(0)841
484 y Ft(;)24 b FB(\(2)p Ft(n)11 b FB(+)g(1\))1054 491
y Fm(\006)p Fr(1)1106 484 y Ft(;)24 b FB(\(1)p Ft(;)8
b FB(0\))1252 463 y Fm(\002)p Fr(2)1252 499 y Fm(\006)p
Fr(1)1304 484 y Ft(;)24 b FB(\(2)p Ft(;)8 b FB(0\))1450
491 y Fr(0)1472 443 y Fk(\011)1525 484 y Ft(:)353 b FB(\(4)p
Ft(:)p FB(5\))0 622 y(In)15 b(the)f(opp)q(osite)i(limit,)c
Ft(m)h Fs(!)h(1)p FB(,)h Ft(m)p FB(\003)740 629 y Fr(2)774
622 y FB(=)f(\003)860 604 y Fr(2)860 636 y(0)896 622
y FB(\014xed,)g(w)o(e)h(exp)q(ect)f(to)h(\015o)o(w)g(to)h(the)e(sp)q
(ectrum)g(of)h(the)g(pure)0 685 y(gauge)21 b(theory)l(.)32
b(T)l(o)21 b(describ)q(e)f(this)f(limit)f(con)o(v)o(enien)o(tly)l(,)g
(w)o(e)h(should)i(mo)o(v)o(e)d(the)h(cut)h(originating)h(from)0
748 y(the)d(massless)f(quark)h(singularit)o(y)f Ft(\033)692
755 y Fr(3)731 748 y FB(to)h(the)g(righ)o(t)f(so)i(that)f(it)f(disapp)q
(ears)i(in)f(the)g Ft(m)e Fs(!)h(1)g FB(limit.)24 b(As)0
810 y(explained)16 b(at)i(the)f(end)h(of)g(Section)f(2,)g(w)o(e)g(can)h
(then)f(c)o(ho)q(ose)h(to)g(w)o(ork)f(with)h Ft(a)f FB(and)i(~)-25
b Ft(a)1634 819 y Fu(D)1686 810 y FB(instead,)17 b(whic)o(h)0
879 y(are)f(the)g(quan)o(tities)f(that)i(\015o)o(w)g(to)f
Ft(a)683 861 y Fr(\(0\))750 879 y FB(and)h Ft(a)871 853
y Fr(\(0\))871 896 y Fu(D)922 879 y FB(.)k(W)l(e)16 b(call)f(the)h
(corresp)q(onding)h(quan)o(tum)e(n)o(um)o(b)q(ers)i(~)-26
b Ft(n)1959 886 y Fu(e)1979 879 y FB(,)2 942 y(~)g Ft(n)29
949 y Fu(m)81 942 y FB(and)19 b(~)-26 b Ft(s)p FB(:)473
1035 y Ft(n)502 1042 y Fu(m)552 1035 y FB(=)16 b(~)-26
b Ft(n)633 1042 y Fu(m)718 1035 y Ft(;)56 b(n)817 1042
y Fu(e)851 1035 y FB(=)16 b(~)-26 b Ft(n)932 1042 y Fu(e)963
1035 y FB(+)11 b Ft(\017)d(n)1069 1042 y Fu(m)1154 1035
y Ft(;)57 b(s)13 b FB(=)j(~)-26 b Ft(s)11 b FB(+)g Ft(\017)d(n)1453
1042 y Fu(m)1506 1035 y Ft(;)372 b FB(\(4)p Ft(:)p FB(6\))0
1149 y(where)15 b(w)o(e)f(recall)g(that)h Ft(\017)f FB(=)f(sign)q(\()p
Fs(=)p Ft(m)7 b(u)p FB(\).)21 b(Hence,)13 b(in)i(the)g
Ft(m)e Fs(!)h(1)g FB(limit,)e(w)o(e)j(exp)q(ect)f(to)h(ha)o(v)o(e)f
(semiclas-)0 1211 y(sically)i(the)h(W-b)q(oson)j(\()r(~)-26
b Ft(n)490 1218 y Fu(e)510 1211 y Ft(;)10 b FB(~)-26
b Ft(n)561 1218 y Fu(m)597 1211 y FB(\))617 1219 y Fr(~)-20
b Fu(s)651 1211 y FB(=)16 b(\(2)p Ft(;)8 b FB(0\))813
1218 y Fr(0)852 1211 y FB(as)18 b(w)o(ell)e(as)i(the)g(dy)o(ons)f(\()r
(~)-26 b Ft(n)1347 1218 y Fu(e)1367 1211 y Ft(;)10 b
FB(~)-26 b Ft(n)1418 1218 y Fu(m)1454 1211 y FB(\))1474
1219 y Fr(~)-20 b Fu(s)1509 1211 y FB(=)16 b(\(2)p Ft(k)r(;)8
b FB(1\))1698 1218 y Fr(0)1719 1211 y FB(.)25 b(Con)o(v)o(erting)0
1274 y(bac)o(k)f(to)g(the)g(\()p Ft(n)329 1281 y Fu(e)349
1274 y Ft(;)8 b(n)400 1281 y Fu(m)435 1274 y FB(\))454
1281 y Fu(s)498 1274 y FB(w)o(e)24 b(alw)o(a)o(ys)g(use)g(in)f(this)h
(pap)q(er,)i(these)e(are)g(\(2)p Ft(;)8 b FB(0\))1491
1281 y Fr(0)1537 1274 y FB(as)24 b(w)o(ell)f(as)i(the)e(dy)o(ons)0
1337 y(\(2)p Ft(n)12 b FB(+)g(1)p Ft(;)c FB(1\))223 1344
y Fu(\017)259 1337 y FB(:)24 b(only)17 b(dy)o(ons)h(of)g
Fv(o)n(dd)f Ft(n)721 1344 y Fu(e)759 1337 y FB(and)h
Ft(s)e FB(=)g(1)i(in)f(the)g(upp)q(er)h(or)g Ft(s)e FB(=)g
Fs(\000)p FB(1)i(in)f(the)h(lo)o(w)o(er)e(half)i(plane)0
1399 y(should)j(surviv)o(e)f(the)g(R)o(G)h(\015o)o(w)g(to)g
Ft(N)722 1408 y Fu(f)769 1399 y FB(=)g(0)g(in)g(the)f(w)o(eak)h
(coupling)f(region.)35 b(All)20 b(other)h(states)g(m)o(ust)0
1462 y(disapp)q(ear.)33 b(There)20 b(are)g(t)o(w)o(o)g(p)q
(ossibilities.)31 b(A)19 b(state)i(ma)o(y)d(simply)g(drop)i(out)h(of)f
(the)g(sp)q(ectrum)e(since)0 1525 y(its)h(BPS)g(mass)g(div)o(erges)f
(as)i Ft(m)e Fs(!)h(1)g FB(as)g(is)g(the)g(case)g(of)h(all)f(states)g
(with)i(~)-26 b Ft(s)19 b Fs(6)p FB(=)g(0,)h(i.e)d Ft(s)i
Fs(6)p FB(=)g Ft(\017)8 b(n)1832 1532 y Fu(m)1868 1525
y FB(.)30 b(But)0 1588 y(a)19 b(state)g(can)f(also)h(disapp)q(ear)h(at)
e(a)h(p)q(oin)o(t)g Ft(u)f FB(\(k)o(ept)f(\014xed)i(\),)f(already)g(at)
h(\014nite)f Ft(m)p FB(,)g(b)q(ecause)h(it)f(is)g(\\hit")0
1650 y(b)o(y)e(its)h(corresp)q(onding)h(deca)o(y)e(curv)o(e)f(whic)o(h)
h(mo)o(v)o(es)f(out)o(w)o(ards)i(as)h Ft(m)e FB(is)h(increased.)22
b(W)l(e)17 b(will)e(see)i(b)q(elo)o(w)0 1713 y(that)f(this)g(latter)f
(p)q(ossibilit)o(y)g(is)g(realised)g(for)h(all)f(dy)o(ons)h(\(2)p
Ft(n;)8 b FB(1\))1204 1720 y Fr(0)1226 1713 y Ft(;)24
b(n)14 b Fs(6)p FB(=)g(0,)h(as)i(w)o(ell)d(as)i(for)g(the)g(the)f(dy)o
(ons)0 1776 y(\(2)p Ft(n)10 b FB(+)f(1\))172 1783 y Fm(\000)p
Fu(\017)220 1776 y Ft(;)23 b(n)14 b Fs(6)p FB(=)g Fs(\000)p
FB(1)p Ft(;)8 b FB(0.)21 b(The)16 b(remaining)d(undesired)i(states,)h
(namely)e(\(0)p Ft(;)8 b FB(1\))1470 1783 y Fr(0)1491
1776 y Ft(;)24 b FB(\()p Fs(\006)p FB(1)p Ft(;)8 b FB(1\))1676
1783 y Fm(\000)p Fu(\017)1739 1776 y FB(and)16 b(\(1)p
Ft(;)8 b FB(0\))1941 1783 y Fm(\006)p Fr(1)0 1838 y FB(simply)14
b(disapp)q(ear)j(b)q(ecause)g(their)e(BPS)h(masses)g(div)o(erge.)28
1977 y Fw(4.1.)36 b Fo(P)n(ossible)19 b(deca)n(y)f(reactions)g(and)h
(deca)n(y)g(curv)n(es)83 2105 y FB(In)c(this)g(section,)g(w)o(e)g
(explain)g(ho)o(w)g(the)g(claim)f(\(P\))h(stated)h(in)f(Section)g(3.2)h
(drastically)e(restricts)h(the)0 2168 y(n)o(um)o(b)q(er)g(of)j(p)q
(ossible)f(deca)o(y)f(reactions)i(and)f(deca)o(y)g(curv)o(es)f(on)h
(whic)o(h)g(they)f(ma)o(y)g(o)q(ccur.)24 b(W)l(e)17 b(will)f(only)0
2231 y(use)g(the)f(basis)h(of)g Ft(a)f FB(and)i Ft(a)503
2239 y Fu(D)553 2231 y FB(and)f(the)f(corresp)q(onding)i(quan)o(tum)d
(n)o(um)o(b)q(ers)g(\()p Ft(n)1492 2238 y Fu(e)1512 2231
y Ft(;)8 b(n)1563 2238 y Fu(m)1599 2231 y FB(\))1618
2238 y Fu(s)1638 2231 y FB(.)21 b(Recall)15 b(that)h(the)0
2293 y(BPS)i(mass)g(is)h Ft(M)334 2301 y Fr(BPS)428 2293
y FB(=)484 2252 y Fs(p)p 525 2252 25 2 v 525 2293 a FB(2)q
Fs(j)p Ft(n)593 2300 y Fu(m)629 2293 y Ft(a)655 2301
y Fu(D)702 2293 y Fs(\000)12 b Ft(n)782 2300 y Fu(e)802
2293 y Ft(a)g FB(+)h Ft(s)927 2273 y Fu(m)p 919 2282
52 2 v 919 2287 a Fm(p)p 951 2287 20 2 v 31 x Fr(2)975
2293 y Fs(j)p FB(.)28 b(As)18 b(discussed)g(ab)q(o)o(v)o(e,)h(the)f
(maximal)e(set)i(of)h(BPS)0 2365 y(states)g(then)g(consists)h(of)f
Fs(S)526 2372 y Fr(max)619 2365 y FB(\(as)g(w)o(ell)f(as)i(their)e(an)o
(tiparticles\).)28 b(These)19 b(states)h(also)f(constitute)g(the)0
2428 y(semi-classical)12 b(sp)q(ectrum.)19 b(Ob)o(viously)l(,)14
b(if)g(at)g(some)g(p)q(oin)o(t)g Ft(u)g Fs(2)g(M)g FB(a)h(BPS)f(state)h
(deca)o(ys)f(in)o(to)g(t)o(w)o(o)g(other)0 2490 y(states,)i(the)h
(latter)f(m)o(ust)e(b)q(e)j(BPS)f(states)h(and)g(m)o(ust)e(b)q(e)i(con)
o(tained)f(in)g(this)g(maximal)d(sp)q(ectrum)i Fs(S)1905
2497 y Fr(max)1979 2490 y FB(.)0 2553 y(As)g(in)g([4])f(one)h(ma)o(y)f
(also)h(c)o(hec)o(k)e(that)j(matc)o(hing)d(of)j(the)f(\015a)o(v)o(our)g
(quan)o(tum)e(n)o(um)o(b)q(ers)h(do)q(es)i(not)f(giv)o(e)f(rise)0
2616 y(to)k(an)o(y)g(new)g(constrain)o(ts:)25 b(the)18
b(\015a)o(v)o(our)g(quan)o(tum)f(n)o(um)o(b)q(ers)f(are)i(related)g(to)
g Ft(n)1521 2623 y Fu(e)1559 2616 y FB(and)h Ft(s)f FB(in)g(suc)o(h)f
(a)i(w)o(a)o(y)0 2678 y(that)c(they)e(matc)o(h)g(automatically)f(if)i
Ft(n)734 2685 y Fu(e)768 2678 y FB(and)h Ft(s)f FB(do.)21
b(The)14 b(follo)o(wing)g(results)g(do)g(not)h(dep)q(end)f(on)h
(whether)0 2741 y(the)f(bare)h(mass)f Ft(m)g FB(is)g(larger)h(or)g
(smaller)d(than)889 2721 y Fr(\003)916 2725 y Fn(2)p
889 2730 44 2 v 902 2758 a Fr(2)938 2741 y FB(.)21 b(F)l(or)15
b(reasons)g(men)o(tioned)d(at)j(the)f(end)h(of)g(Section)f(3.1,)976
2883 y Fp(18)p eop
%%Page: 20 20
20 19 bop 0 160 a FB(w)o(e)16 b(will)f(only)h(need)g(to)g(consider)g
(deca)o(ys)g(in)o(to)g Fv(two)h FB(t)o(yp)q(es)f(of)g(BPS)g(states:)506
285 y(\()p Ft(n)554 292 y Fu(e)574 285 y Ft(;)8 b(n)625
292 y Fu(m)661 285 y FB(\))680 292 y Fu(s)730 285 y Fs(!)30
b Ft(k)13 b Fs(\002)e FB(\()p Ft(n)946 264 y Fm(0)946
297 y Fu(e)966 285 y Ft(;)d(n)1017 264 y Fm(0)1017 297
y Fu(m)1053 285 y FB(\))1072 292 y Fu(s)1090 281 y Fj(0)1114
285 y FB(+)j Ft(l)h Fs(\002)e FB(\()p Ft(n)1287 264 y
Fm(00)1287 297 y Fu(e)1310 285 y Ft(;)e(n)1361 264 y
Fm(00)1361 297 y Fu(m)1397 285 y FB(\))1416 292 y Fu(s)1434
281 y Fj(00)1473 285 y Ft(:)405 b FB(\(4)p Ft(:)p FB(7\))0
409 y(The)12 b(quan)o(tum)g(n)o(um)o(b)q(ers)f Ft(n)521
391 y Fm(0)521 422 y Fu(m)557 409 y Ft(;)d(n)608 391
y Fm(00)608 422 y Fu(m)656 409 y FB(alw)o(a)o(ys)k(are)h(either)e(0)i
(or)g(1,)g(since)e(w)o(e)h(can)h(alw)o(a)o(ys)f(c)o(ho)q(ose)h
Ft(n)1765 391 y Fm(0)1765 422 y Fu(m)1801 409 y Ft(;)8
b(n)1852 391 y Fm(00)1852 422 y Fu(m)1902 409 y Fs(\025)14
b FB(0,)0 472 y(i.e.)20 b(a)15 b(state)h(\()p Ft(n)290
479 y Fu(e)310 472 y Ft(;)8 b Fs(\000)p FB(1\))414 479
y Fu(s)449 472 y FB(is)16 b(written)e(as)i(\()p Fs(\000)p
FB(1\))10 b Fs(\002)f FB(\()p Fs(\000)p Ft(n)972 479
y Fu(e)991 472 y Ft(;)f FB(1\))1056 479 y Fm(\000)p Fu(s)1106
472 y FB(.)21 b(One)15 b(has)i(to)e(establish)g(the)h(p)q(ossible)f
(deca)o(ys)0 534 y(of)i(eac)o(h)e(t)o(yp)q(e)h(of)h(BPS)f(state)g
(separately)l(.)83 615 y(As)e(an)h(axample,)e(w)o(e)g(presen)o(t)h(the)
g(discussion)g(of)h(all)f(p)q(ossible)g(deca)o(ys)g(for)h(the)f(dy)o
(ons)g(\(2)p Ft(n;)8 b FB(1\))1852 622 y Fr(0)1874 615
y FB(.)21 b(The)0 677 y(corresp)q(onding)c(deca)o(y)f(curv)o(es)f(are)
113 842 y(0)g(=)e Fs(=)p Ft(m)295 793 y(n)324 775 y Fm(0)324
806 y Fu(m)360 793 y Ft(a)386 802 y Fu(D)432 793 y Fs(\000)e
Ft(n)511 775 y Fm(0)511 806 y Fu(e)531 793 y Ft(a)f FB(+)h
Ft(s)639 775 y Fm(0)665 774 y Fu(m)p 657 782 52 2 v 657
787 a Fm(p)p 689 787 20 2 v 31 x Fr(2)p 295 831 418 2
v 404 876 a Ft(a)430 885 y Fu(D)475 876 y Fs(\000)g FB(2)p
Ft(na)781 842 y Fs(,)62 b FB(0)14 b(=)g Fs(=)p Ft(m)1079
793 y(r)1101 802 y Fr(d)1124 793 y Ft(a)d Fs(\000)1224
774 y Fu(m)p 1215 782 52 2 v 1215 787 a Fm(p)p 1247 787
20 2 v 31 x Fr(2)p 1075 831 201 2 v 1075 876 a Ft(a)1101
885 y Fu(D)1146 876 y Fs(\000)g FB(2)p Ft(na)1329 842
y(;)57 b(r)1422 851 y Fr(d)1459 842 y FB(=)1516 808 y
Ft(n)1545 790 y Fm(0)1545 821 y Fu(e)1576 808 y Fs(\000)11
b FB(2)p Ft(nn)1708 790 y Fm(0)1708 821 y Fu(m)p 1516
831 229 2 v 1612 876 a Ft(s)1635 862 y Fm(0)1765 842
y Ft(:)113 b FB(\(4)p Ft(:)p FB(8\))0 991 y(Either)18
b Ft(n)181 973 y Fm(0)181 1003 y Fu(m)234 991 y FB(=)f(0)i(or)g
Ft(n)423 973 y Fm(0)423 1003 y Fu(m)476 991 y FB(=)e(1.)28
b(Consider)18 b(\014rst)h Ft(n)934 973 y Fm(0)934 1003
y Fu(m)987 991 y FB(=)f(0.)27 b(Then)19 b(this)f(is)g(the)g(W-b)q(oson)
i(or)f(a)g(quark.)27 b(In)0 1053 y(the)18 b(\014rst)g(case)f(w)o(e)h
(simply)d(ha)o(v)o(e)i(\(2)p Ft(n;)8 b FB(1\))774 1060
y Fr(0)831 1053 y Fs(!)34 b Ft(k)14 b Fs(\002)e FB(\(2)p
Ft(;)c FB(0\))1113 1060 y Fr(0)1147 1053 y FB(+)k(\(2)p
Ft(n)g Fs(\000)g FB(2)p Ft(k)r(;)c FB(1\))1448 1060 y
Fr(0)1470 1053 y FB(.)26 b(The)18 b(v)m(alue)f(of)h Ft(r)i
FB(for)e(this)0 1115 y(deca)o(y)d(is)h Fs(1)p FB(.)21
b(In)15 b(the)h(second)g(case)g(w)o(e)f(can)h(ha)o(v)o(e)f
Ft(k)j FB(quarks)e(\(1)p Ft(;)8 b FB(0\))1253 1122 y
Fm(\006)p Fr(1)1321 1115 y FB(and)16 b(the)g(dy)o(on)g(\(2)p
Ft(n)10 b Fs(\000)g Ft(k)r(;)e FB(1\))1841 1122 y Fu(s)1859
1112 y Fj(00)1898 1115 y FB(with)0 1178 y Ft(s)23 1160
y Fm(00)64 1178 y FB(=)17 b Fs(\007)p Ft(k)r FB(.)28
b(Hence)17 b Fs(j)p Ft(k)r Fs(j)h FB(=)f(1)i(and)g(w)o(e)f(ha)o(v)o(e)g
(t)o(w)o(o)h(p)q(ossibilities:)24 b(\(2)p Ft(n;)8 b FB(1\))1348
1185 y Fr(0)1406 1178 y Fs(!)36 b FB(\(1)p Ft(;)8 b FB(0\))1600
1185 y Fm(\006)p Fr(1)1665 1178 y FB(+)k(\(2)p Ft(n)h
Fs(\000)g FB(1)p Ft(;)8 b FB(1\))1941 1185 y Fm(\007)p
Fr(1)0 1240 y FB(and)20 b(\(2)p Ft(n;)8 b FB(1\))235
1247 y Fr(0)296 1240 y Fs(!)39 b FB(\()p Fs(\000)p FB(1\))14
b Fs(\002)f FB(\(1)p Ft(;)8 b FB(0\))660 1247 y Fm(\006)p
Fr(1)725 1240 y FB(+)13 b(\(2)p Ft(n)h FB(+)f(1)p Ft(;)8
b FB(1\))1002 1247 y Fm(\006)p Fr(1)1074 1240 y FB(with)19
b Ft(r)i FB(=)f Fs(\006)p FB(1.)31 b(Consider)20 b(no)o(w)g
Ft(n)1738 1222 y Fm(0)1738 1252 y Fu(m)1793 1240 y FB(=)g(1)g(\(and)0
1302 y Ft(n)29 1284 y Fm(00)29 1315 y Fu(m)79 1302 y
FB(=)14 b(1,)f(otherwise)g(w)o(e)f(are)h(bac)o(k)g(to)g(the)f(previous)
h(case\).)20 b(Then)13 b(\(2)p Ft(n;)8 b FB(1\))1381
1309 y Fr(0)1417 1302 y FB(=)14 b Ft(k)6 b Fs(\002)t
FB(\()p Ft(n)1591 1284 y Fm(0)1591 1315 y Fu(e)1611 1302
y Ft(;)i FB(1\))1676 1309 y Fu(s)1694 1299 y Fj(0)1711
1302 y FB(+)t Ft(l)d Fs(\002)t FB(\()p Ft(n)1864 1284
y Fm(00)1864 1315 y Fu(e)1887 1302 y Ft(;)j FB(1\))1952
1309 y Fu(s)1970 1299 y Fj(00)0 1365 y FB(implies)16
b Ft(l)j FB(=)g(1)13 b Fs(\000)f Ft(k)21 b FB(and)f Ft(k)r(s)541
1346 y Fm(0)566 1365 y FB(+)13 b(\(1)g Fs(\000)g Ft(k)r
FB(\))p Ft(s)794 1346 y Fm(00)835 1365 y FB(=)19 b(0.)29
b(Since)18 b Fs(j)p Ft(s)1126 1346 y Fm(0)1139 1365 y
Fs(j)p Ft(;)8 b Fs(j)p Ft(s)1212 1346 y Fm(00)1234 1365
y Fs(j)18 b FB(=)g(0)i(or)f(1)g(this)g(implies)d Ft(s)1760
1346 y Fm(0)1791 1365 y FB(=)j Ft(s)1871 1346 y Fm(00)1912
1365 y FB(=)f(0)0 1427 y(\(since)k(the)h(cases)g Ft(k)k
FB(=)f(0)d(or)g Ft(k)28 b FB(=)d(1,)f(i.e.)40 b Ft(l)26
b FB(=)f(0)f(m)o(ust)d(b)q(e)i(excluded)f(b)q(ecause)h(they)g(do)g(not)
h(giv)o(e)0 1489 y(deca)o(ys\).)34 b(Hence)20 b Ft(n)385
1471 y Fm(0)385 1501 y Fu(e)426 1489 y FB(and)h Ft(n)554
1471 y Fm(00)554 1501 y Fu(e)598 1489 y FB(are)g(ev)o(en)e(and)j
Ft(n)f FB(=)h Ft(k)r(n)1065 1471 y Fm(0)1065 1501 y Fu(e)1099
1489 y FB(+)14 b(\(1)h Fs(\000)f Ft(k)r FB(\))p Ft(n)1337
1471 y Fm(00)1337 1501 y Fu(e)1360 1489 y FB(.)35 b(Finally)19
b(w)o(e)i(get)f(\(2)p Ft(n;)8 b FB(1\))1878 1496 y Fr(0)1943
1489 y Fs(!)0 1551 y Ft(k)13 b Fs(\002)e FB(\(2)p Ft(p;)d
FB(1\))220 1558 y Fr(0)253 1551 y FB(+)j(\(1)h Fs(\000)f
Ft(k)r FB(\))g Fs(\002)f FB(\(2)p Ft(q)r(;)e FB(1\))645
1558 y Fr(0)715 1551 y FB(with)17 b Ft(n)d FB(=)f Ft(k)r(p)f
FB(+)f(\(1)g Fs(\000)g Ft(k)r FB(\))p Ft(q)18 b FB(with)e
Ft(r)f FB(=)f Fs(1)i FB(again.)83 1633 y(W)l(e)23 b(ha)o(v)o(e)f
(determined)e(the)i(p)q(ossible)h(deca)o(ys)g(for)g(all)f(the)h(other)g
(states,)h(namely)d(the)i(W-b)q(oson)0 1695 y(\(2)p Ft(;)8
b FB(0\))108 1702 y Fr(0)130 1695 y FB(,)17 b(the)h(dy)o(ons)g(\(2)p
Ft(n)12 b FB(+)g(1)p Ft(;)c FB(1\))610 1702 y Fm(\006)p
Fr(1)680 1695 y FB(and)18 b(the)f(quarks)h(\(1)p Ft(;)8
b FB(0\))1128 1702 y Fm(\006)p Fr(1)1197 1695 y FB(in)18
b(exactly)e(the)h(same)g(w)o(a)o(y)l(.)25 b(The)18 b(results)0
1757 y(are)24 b(collected)e(in)i(T)l(able)g(1.)45 b(This)24
b(T)l(able)g(also)g(sho)o(ws)h(the)f(equations)g(that)g(determine)e
(the)h(curv)o(es)0 1819 y(corresp)q(onding)17 b(to)g(the)f(deca)o(ys.)
83 1900 y(As)d(already)h(noted)f(ab)q(o)o(v)o(e)h(and)g(as)g(will)e(b)q
(e)i(discussed)f(in)g(detail)g(b)q(elo)o(w,)g(not)h(all)f(curv)o(es)f
(are)i(relev)m(an)o(t.)0 1963 y(It)i(will)f(turn)h(out)h(that)g(the)f
(only)g(relev)m(an)o(t)f(curv)o(es)g(are)293 2124 y Fs(C)322
2104 y Fm(1)425 2124 y FB(:)63 b Fs(=)p Ft(m)681 2091
y(a)p 593 2113 202 2 v 593 2159 a(\017a)639 2167 y Fu(D)685
2159 y FB(+)747 2139 y Fu(m)p 739 2147 52 2 v 739 2152
a Fm(p)p 771 2152 20 2 v 31 x Fr(2)814 2124 y FB(=)13
b(0)98 b Ft(;)106 b Fs(C)1136 2104 y Fm(\006)1133 2137
y Fu(n)1230 2124 y FB(:)63 b Fs(=)p Ft(m)1413 2075 y(a)10
b Fs(\006)1513 2056 y Fu(m)p 1504 2064 52 2 v 1504 2069
a Fm(p)p 1536 2069 20 2 v 31 x Fr(2)p 1399 2113 177 2
v 1399 2159 a Ft(a)1425 2167 y Fu(D)1470 2159 y Fs(\000)h
Ft(na)1593 2124 y FB(=)j(0)j Ft(:)192 b FB(\(4)p Ft(:)p
FB(9\))28 2361 y Fw(4.2.)36 b Fo(Deca)n(y)18 b(curv)n(es)h(and)g(BPS)g
(sp)r(ectra)f(for)g(small)f(mass)h(\()p Ft(m)13 b(<)1429
2342 y Fr(\003)1456 2346 y Fn(2)p 1429 2350 44 2 v 1442
2378 a Fr(2)1478 2361 y Fo(\))0 2476 y FB(The)j(general)g(picture)p
0 2491 418 2 v 83 2557 a(W)l(e)i(are)h(no)o(w)g(ready)g(to)g(establish)
g(the)f(exact)g(existence)f(domains)i(for)g(ev)o(ery)e(BPS)h(state.)29
b(In)19 b(this)0 2619 y(subsection,)e(w)o(e)h(will)e(discuss)i(the)f
(case)h(of)f(small)f(mass,)h(i.e.)24 b Ft(m)16 b(<)1299
2600 y Fr(\003)1326 2604 y Fn(2)p 1299 2608 44 2 v 1311
2636 a Fr(2)1348 2619 y FB(.)25 b(Although)18 b(it)f(is)g(not)h(to)q(o)
h(m)o(uc)o(h)0 2686 y(di\013eren)o(t,)13 b(it)g(is)h(more)f(con)o(v)o
(enien)o(t)f(to)i(discuss)g(the)g(case)f(of)i Ft(m)e(>)1223
2667 y Fr(\003)1250 2671 y Fn(2)p 1223 2675 V 1235 2703
a Fr(2)1286 2686 y FB(separately)g(in)h(the)g(next)f(subsection.)0
2749 y(W)l(e)k(will)g(consider)g(eac)o(h)g(t)o(yp)q(e)g(of)h(BPS)f
(state)h(separately)l(.)24 b(W)l(e)18 b(ha)o(v)o(e)e(seen)i(that)f(for)
h(the)f(W-b)q(oson)j(and)976 2883 y Fp(19)p eop
%%Page: 21 21
21 20 bop 967 167 a @beginspecial 0 @llx 0 @lly 560 @urx
465 @ury 141 @rwi @setspecial
%%BeginDocument: rgft.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-36.0 500.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 120.00 scalefont setfont
600 600 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 120.00 scalefont setfont
9900 8325 m
gs 1 -1 sc (.) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 898 263 a Fo(T)-5 b(able)19 b(1:)44 382
y FB(initial)c(state)291 b(deca)o(y)16 b(pro)q(ducts)44
465 y Fs(\000)11 b(\000)f(\000)397 b(\000)11 b(\000)g(\000)805
b(\000)11 b(\000)g(\000)44 548 y FB(W)h Fs(\000)e FB(b)q(oson)18
b(\(2)p Ft(;)8 b FB(0\))403 555 y Fr(0)579 548 y FB(\(1)p
Ft(;)g FB(0\))687 555 y Fr(1)720 548 y FB(+)j(\(1)p Ft(;)d
FB(0\))877 555 y Fm(\000)p Fr(1)1523 548 y Ft(r)1545
555 y Fr(w)1589 548 y FB(=)14 b(0)44 631 y Fs(=)p Ft(m)136
597 y Fu(r)153 601 y Fn(w)177 597 y Fu(a)197 601 y Fl(D)225
597 y Fr(+)267 581 y Fl(m)p 260 588 41 2 v 260 592 a
Fj(p)p 285 592 16 2 v 21 x Fn(2)p 136 620 170 2 v 210
649 a Fu(a)324 631 y FB(=)g(0)179 b(\(2)p Ft(p)12 b FB(+)f(2)p
Ft(;)d FB(1\))796 638 y Fr(0)829 631 y FB(+)j(\()p Fs(\000)p
FB(1\))g Fs(\002)g FB(\(2)p Ft(p;)d FB(1\))1172 638 y
Fr(0)1523 631 y Ft(r)1545 638 y Fr(w)1589 631 y FB(=)14
b Fs(1)44 714 y Ft(r)66 721 y Fr(w)110 714 y FB(=)g Ft(n)191
696 y Fm(0)191 727 y Fu(m)227 714 y Ft(=s)274 696 y Fm(0)579
714 y FB(\(2)p Ft(p)e FB(+)f(1)p Ft(;)d FB(1\))796 721
y Fm(\006)p Fr(1)859 714 y FB(+)j(\()p Fs(\000)p FB(1\))g
Fs(\002)g FB(\(2)p Ft(p)h Fs(\000)e FB(1)p Ft(;)e FB(1\))1287
721 y Fm(\006)p Fr(1)1523 714 y Ft(r)1545 721 y Fr(w)1589
714 y FB(=)14 b Fs(\006)p FB(1)44 797 y Fs(\000)d(\000)f(\000)397
b(\000)11 b(\000)g(\000)805 b(\000)11 b(\000)g(\000)44
881 y FB(quarks)16 b(\(1)p Ft(;)8 b FB(0\))309 888 y
Fm(\006)p Fr(1)579 881 y FB(\(2)p Ft(;)g FB(0\))687 888
y Fr(0)720 881 y FB(+)j(\()p Fs(\000)p FB(1\))g Fs(\002)g
FB(\(1)p Ft(;)d FB(0\))1039 888 y Fm(\007)p Fr(1)1523
881 y Ft(r)1545 888 y Fr(q)1581 881 y FB(=)14 b(0)44
964 y Fs(=)p Ft(m)136 929 y Fu(r)153 933 y Fn(q)171 929
y Fu(a)191 933 y Fl(D)219 929 y Fr(+)260 913 y Fl(m)p
254 920 41 2 v 254 924 a Fj(p)p 279 924 16 2 v 21 x Fn(2)p
136 952 164 2 v 152 981 a Fm(\000)p Fu(a)p Fm(\006)244
965 y Fl(m)p 237 972 41 2 v 237 976 a Fj(p)p 262 976
16 2 v 21 x Fn(2)318 964 y FB(=)g(0)185 b(\(2)p Ft(p;)8
b FB(1\))711 971 y Fr(0)744 964 y FB(+)j(\()p Fs(\000)p
FB(1\))g Fs(\002)g FB(\(2)p Ft(p)h Fs(\000)f FB(1)p Ft(;)d
FB(1\))1173 971 y Fm(\007)p Fr(1)1523 964 y Ft(r)1545
971 y Fr(q)1581 964 y FB(=)14 b Fs(\007)1686 944 y Fr(1)p
1677 952 39 2 v 1677 981 a(2)p Fu(p)44 1050 y Ft(r)66
1057 y Fr(q)102 1050 y FB(=)g Ft(n)183 1032 y Fm(0)183
1062 y Fu(m)219 1050 y Ft(=)p FB(\()p Ft(s)285 1032 y
Fm(0)309 1050 y Fs(\007)c Ft(n)387 1032 y Fm(0)387 1062
y Fu(e)407 1050 y FB(\))153 b(\(2)p Ft(p)12 b FB(+)f(1)p
Ft(;)d FB(1\))796 1057 y Fm(\006)p Fr(1)859 1050 y FB(+)j(\()p
Fs(\000)p FB(1\))g Fs(\002)g FB(\(2)p Ft(p;)d FB(1\))1202
1057 y Fr(0)1523 1050 y Ft(r)1545 1057 y Fr(q)1581 1050
y FB(=)14 b Fs(\007)1686 1030 y Fr(1)p 1677 1039 V 1677
1067 a(2)p Fu(p)44 1133 y Fs(\000)d(\000)f(\000)397 b(\000)11
b(\000)g(\000)805 b(\000)11 b(\000)g(\000)44 1216 y FB(dy)o(ons)16
b(\(2)p Ft(n;)8 b FB(1\))319 1223 y Fr(0)579 1216 y Ft(k)13
b Fs(\002)e FB(\(2)p Ft(;)d FB(0\))775 1223 y Fr(0)808
1216 y FB(+)j(\(2)p Ft(n)g Fs(\000)g FB(2)p Ft(k)r(;)d
FB(1\))1106 1223 y Fr(0)1523 1216 y Ft(r)1545 1225 y
Fr(d)1582 1216 y FB(=)14 b Fs(1)579 1299 y FB(\(1)p Ft(;)8
b FB(0\))687 1306 y Fm(\006)p Fr(1)750 1299 y FB(+)j(\(2)p
Ft(n)g Fs(\000)g FB(1)p Ft(;)d FB(1\))1021 1306 y Fm(\007)p
Fr(1)1523 1299 y Ft(r)1545 1308 y Fr(d)1582 1299 y FB(=)14
b Fs(\006)p FB(1)44 1382 y Fs(=)p Ft(m)138 1347 y Fu(r)155
1351 y Fn(d)174 1347 y Fu(a)p Fm(\000)236 1332 y Fl(m)p
229 1339 41 2 v 229 1343 a Fj(p)p 254 1343 16 2 v 21
x Fn(2)p 136 1371 141 2 v 136 1399 a Fu(a)156 1403 y
Fl(D)184 1399 y Fm(\000)p Fr(2)p Fu(na)295 1382 y FB(=)g(0)208
b(\()p Fs(\000)p FB(1\))11 b Fs(\002)g FB(\(1)p Ft(;)d
FB(0\))849 1389 y Fm(\006)p Fr(1)912 1382 y FB(+)j(\(2)p
Ft(n)g FB(+)g(1)p Ft(;)d FB(1\))1182 1389 y Fm(\006)p
Fr(1)1523 1382 y Ft(r)1545 1391 y Fr(d)1582 1382 y FB(=)14
b Fs(\006)p FB(1)579 1465 y Ft(k)f Fs(\002)e FB(\(2)p
Ft(p;)d FB(1\))799 1472 y Fr(0)832 1465 y FB(+)j(\(1)h
Fs(\000)f Ft(k)r FB(\))g Fs(\002)f FB(\(2)p Ft(q)r(;)e
FB(1\))1224 1472 y Fr(0)44 1548 y Ft(r)66 1557 y Fr(d)103
1548 y FB(=)14 b(\()p Ft(n)203 1530 y Fm(0)203 1560 y
Fu(e)234 1548 y Fs(\000)d Ft(n)313 1555 y Fu(e)333 1548
y Ft(n)362 1530 y Fm(0)362 1560 y Fu(m)398 1548 y FB(\))p
Ft(=s)464 1530 y Fm(0)628 1548 y FB(with)16 b Ft(n)e
FB(=)g Ft(k)r(p)d FB(+)g(\(1)h Fs(\000)e Ft(k)r FB(\))p
Ft(q)406 b(r)1545 1557 y Fr(d)1582 1548 y FB(=)14 b Fs(1)44
1631 y(\000)d(\000)f(\000)397 b(\000)11 b(\000)g(\000)805
b(\000)11 b(\000)g(\000)44 1714 y FB(dy)o(ons)16 b(\(2)p
Ft(n)c FB(+)f(1)p Ft(;)d FB(1\))404 1721 y Fm(\006)p
Fr(1)579 1714 y Ft(k)13 b Fs(\002)e FB(\(2)p Ft(;)d FB(0\))775
1721 y Fr(0)808 1714 y FB(+)j(\(2)p Ft(n)g Fs(\000)g
FB(2)p Ft(k)j FB(+)d(1)p Ft(;)d FB(1\))1191 1721 y Fm(\006)p
Fr(1)1523 1714 y Ft(r)1545 1723 y Fr(d)1582 1714 y FB(=)14
b Fs(1)579 1797 y FB(\(1)p Ft(;)8 b FB(0\))687 1804 y
Fm(\006)p Fr(1)750 1797 y FB(+)j(\(2)p Ft(n;)d FB(1\))936
1804 y Fr(0)1523 1797 y Ft(r)1545 1806 y Fr(d)1582 1797
y FB(=)14 b Fs(\006)p FB(1)44 1880 y Fs(=)p Ft(m)217
1845 y Fu(r)234 1849 y Fn(d)253 1845 y Fu(a)p Fm(\000)315
1830 y Fl(m)p 309 1837 41 2 v 309 1841 a Fj(p)p 333 1841
16 2 v 333 1862 a Fn(2)p 136 1869 300 2 v 136 1899 a
Fu(a)156 1903 y Fl(D)184 1899 y Fm(\000)p Fr(\(2)p Fu(n)p
Fr(+1\))p Fu(a)p Fm(\006)397 1883 y Fl(m)p 390 1890 41
2 v 390 1894 a Fj(p)p 415 1894 16 2 v 21 x Fn(2)454 1880
y FB(=)g(0)49 b(2)11 b Fs(\002)g FB(\(1)p Ft(;)d FB(0\))772
1887 y Fm(\006)p Fr(1)835 1880 y FB(+)j(\(2)p Ft(n)h
Fs(\000)e FB(1)p Ft(;)e FB(1\))1106 1887 y Fm(\007)p
Fr(1)1523 1880 y Ft(r)1545 1889 y Fr(d)1582 1880 y FB(=)14
b Fs(\006)p FB(1)579 1963 y(\()p Fs(\000)p FB(1\))d Fs(\002)g
FB(\(1)p Ft(;)d FB(0\))849 1970 y Fm(\007)p Fr(1)912
1963 y FB(+)j(\(2)p Ft(n)g FB(+)g(2)p Ft(;)d FB(1\))1182
1970 y Fr(0)1523 1963 y Ft(r)1545 1972 y Fr(d)1582 1963
y FB(=)14 b Fs(\007)p FB(1)44 2046 y Ft(r)66 2055 y Fr(d)103
2046 y FB(=)160 2024 y Fu(n)183 2008 y Fj(0)183 2031
y Fl(e)200 2024 y Fm(\000)p Fu(n)253 2028 y Fl(e)269
2024 y Fu(n)292 2008 y Fj(0)292 2031 y Fl(m)p 160 2035
163 2 v 176 2063 a Fu(s)194 2053 y Fj(0)205 2063 y Fm(\000)p
Fu(sn)276 2051 y Fj(0)276 2068 y Fl(m)579 2046 y FB(\()p
Fs(\000)p FB(2\))d Fs(\002)g FB(\(1)p Ft(;)d FB(0\))849
2053 y Fm(\007)p Fr(1)912 2046 y FB(+)j(\(2)p Ft(n)g
FB(+)g(3)p Ft(;)d FB(1\))1182 2053 y Fm(\007)p Fr(1)1523
2046 y Ft(r)1545 2055 y Fr(d)1582 2046 y FB(=)14 b Fs(\007)p
FB(1)579 2129 y(\()p Fs(\000)p FB(1\))d Fs(\002)g FB(\(4)p
Ft(p)h Fs(\000)f FB(2)p Ft(n)g Fs(\000)g FB(1)p Ft(;)d
FB(1\))1073 2136 y Fm(\007)p Fr(1)1136 2129 y FB(+)j(2)g
Fs(\002)g FB(\(2)p Ft(p;)d FB(1\))1402 2136 y Fr(0)1523
2129 y Ft(r)1545 2138 y Fr(d)1582 2129 y FB(=)14 b Fs(\006)p
FB(\(2)p Ft(n)d Fs(\000)g FB(2)p Ft(p)h FB(+)f(1\))579
2212 y Ft(k)i Fs(\002)e FB(\(2)p Ft(p)h FB(+)f(1)p Ft(;)d
FB(1\))884 2219 y Fm(\006)p Fr(1)947 2212 y FB(+)j(\(1)g
Fs(\000)g Ft(k)r FB(\))g Fs(\002)g FB(\(2)p Ft(q)i FB(+)e(1)p
Ft(;)d FB(1\))1423 2219 y Fm(\006)p Fr(1)628 2295 y FB(with)16
b Ft(k)r(p)11 b FB(+)g(\(1)h Fs(\000)f Ft(k)r FB(\))p
Ft(q)k FB(=)f Ft(n)404 b(r)1545 2304 y Fr(d)1582 2295
y FB(=)14 b Fs(1)0 2471 y FB(the)k(dy)o(ons)h(\(2)p Ft(n;)8
b FB(1\))364 2478 y Fr(0)405 2471 y FB(w)o(e)18 b(only)h(need)f(to)h
(consider)f(three)g(curv)o(es)1224 2442 y Fu(?)1245 2471
y FB(:)26 b Ft(r)19 b FB(=)f Fs(\006)p FB(1)p Ft(;)27
b Fs(1)p FB(.)h(F)l(or)19 b(the)f(quarks)h(and)0 2534
y(the)d(dy)o(ons)h(\(2)p Ft(n)12 b FB(+)f(1)p Ft(;)d
FB(1\))445 2541 y Fm(\006)p Fr(1)514 2534 y FB(w)o(e)16
b(ha)o(v)o(e)g(a)h(priori)f(in\014nitely)f(man)o(y)g(p)q(ossible)i
(deca)o(y)f(curv)o(es)g(\()p Ft(p)f Fs(2)g Fo(Z)p FB(\),)h(but)h(it)p
0 2610 698 2 v 58 2659 a Fq(?)31 b Fp(The)11 b(curv)o(e)g
Fq(r)i Fp(=)e(0)f(for)h(the)g(W-b)q(oson)f(or)g(for)g(the)h(quarks)g
(is)f(simply)e Fi(=)p Fq(m)f(a)12 b Fp(=)g(0)e(whic)o(h)g(is)g(the)h
(half-line)e([)p Fq(\033)1775 2665 y Fd(3)1793 2659 y
Fq(;)e Fi(1)p Fp(\).)16 b(Since)100 2708 y(all)c(states)i(exist)f(in)g
(the)h(semiclassical)d(region)i Fq(u)f Fi(!)f(1)h Fp(in)h(the)h(upp)q
(er)g(and)f(in)f(the)i(lo)o(w)o(er)f(half)f(plane,)g(ev)o(ery)i(p)q
(oin)o(t)f(in)100 2758 y Fi(M)g Fp(can)h(b)q(e)h(reac)o(hed)g(from)d
(this)i(region)g(without)f(crossing)i([)p Fq(\033)1099
2764 y Fd(3)1117 2758 y Fq(;)7 b Fi(1)p Fp(\).)17 b(Th)o(us)d(the)g
Fi(=)p Fq(m)8 b(a)j Fp(=)h(0)i(curv)o(e)g(is)g(irrelev)n(an)o(t.)976
2883 y(20)p eop
%%Page: 22 22
22 21 bop 0 160 a FB(is)16 b(clear)f(that)i(only)f(a)h(few)f(v)m(alues)
g(of)g Ft(p)h FB(will)e(corresp)q(ond)i(to)g(kinematically)c(p)q
(ossible)j(deca)o(ys:)21 b(although)5 204 y Fu(Z)34 188
y Fj(0)p 5 212 40 2 v 11 240 a Fu(Z)64 223 y Fs(2)14
b Fo(R)g FB(for)i(all)e Ft(p)p FB(,)h(only)g(for)g(a)g(few)g
Ft(p)g FB(w)o(e)g(will)e(ha)o(v)o(e)h(the)h(additional)g(condition)g
(\(3.6\))g(that)g(0)f Fs(\024)1816 204 y Fu(k)7 b(Z)1872
188 y Fj(0)p 1816 212 68 2 v 1835 240 a Fu(Z)1902 223
y Fs(\024)14 b FB(1.)0 285 y(W)l(e)20 b(ha)o(v)o(e)g(computed)f(all)h
(curv)o(es)g(n)o(umerically)d(using)k(Mathematica.)33
b(Their)20 b(exact)g(shap)q(e)i(of)e(course)0 348 y(dep)q(ends)15
b(on)g(the)f(v)m(alue)g(of)h Ft(m=)p FB(\003)614 355
y Fr(2)635 348 y FB(,)g(but)g(is)f(not)h(of)g(m)o(uc)o(h)d(imp)q
(ortance.)19 b(Only)14 b(their)g(p)q(ositions)h(relativ)o(e)e(to)0
410 y(eac)o(h)j(other)i(and)f(to)g(the)g(singularities)f(actually)h
(matter)e(and)j(there)e(is)h(no)g(qualitativ)o(e)f(c)o(hange)h(as)g
(long)0 473 y(as)h Ft(m)c(<)176 454 y Fr(\003)203 458
y Fn(2)p 176 462 44 2 v 189 491 a Fr(2)225 473 y FB(.)23
b(T)l(o)18 b(c)o(hec)o(k)d(whether)i(a)g(giv)o(en)f(curv)o(e)g(is)h
(relev)m(an)o(t,)e(i.e.)22 b(whether)17 b(0)f Fs(\024)1575
454 y Fu(k)8 b(Z)1632 438 y Fj(0)p 1575 462 68 2 v 1595
491 a Fu(Z)1663 473 y Fs(\024)14 b FB(1)k(so)f(that)h(the)0
536 y(deca)o(y)g(is)h(kinematically)d(p)q(ossible)j(and)h(can)f(really)
f(happ)q(en,)i(it)f(is)g(enough)h(to)f(pro)q(ceed)g(as)h(follo)o(ws:)27
b(if)0 598 y(at)15 b Fv(some)h FB(p)q(oin)o(t)f(on)g(the)g(curv)o(e)f
(the)h(deca)o(y)f(is)h(kinematically)d(imp)q(ossible)h(\(whic)o(h)h
(can)i(b)q(e)f(easily)f(c)o(hec)o(k)o(ed)0 660 y(b)o(y)20
b(computing)f Ft(Z)354 642 y Fm(0)386 660 y FB(and)i
Ft(Z)j FB(n)o(umerically)16 b(at)21 b(this)f(p)q(oin)o(t\))g(one)g(can)
g(alw)o(a)o(ys)g(transp)q(ort)i(the)d(BPS)h(state)0 732
y(through)15 b(the)e(curv)o(e)f(at)i(this)g(p)q(oin)o(t)g(where)f(it)g
(cannot)h(deca)o(y)l(,)f(and)h(th)o(us)g(the)g(curv)o(e)e(is)h(irrelev)
m(an)o(t.)1808 703 y Fm(y)1846 732 y FB(On)h(the)0 795
y(other)j(hand,)h(to)f(sho)o(w)h(that)f(a)h(curv)o(e)e(is)h(relev)m(an)
o(t)f(w)o(e)g(m)o(ust)g(mak)o(e)f(sure)i(that)h(the)f(deca)o(y)f(is)h
(p)q(ossible)g(at)0 858 y(an)o(y)f(p)q(oin)o(t)h(of)f(the)g(curv)o(e.)
21 b(Since)15 b(the)h(real-v)m(alued)g(function)1164
839 y Fu(k)8 b(Z)1221 823 y Fj(0)p 1164 847 V 1184 875
a Fu(Z)1253 858 y FB(v)m(aries)16 b(smo)q(othly)g(along)h(the)f(curv)o
(e,)f(it)0 920 y(is)g(easy)h(to)g(see)f(whic)o(h)g(real)h(in)o(terv)m
(al)e(is)h(its)h(image)e(and)i(whether)g(it)f(is)g(en)o(tirely)f(con)o
(tained)h(within)g([0)p Ft(;)8 b FB(1].)83 1048 y(Let)24
b(us)g(already)f(presen)o(t)h(the)f(results)g(of)i(the)e(analysis)h
(that)g(will)f(b)q(e)g(giv)o(en)g(b)q(elo)o(w.)44 b(W)l(e)23
b(ha)o(v)o(e)0 1110 y(assem)o(bled)16 b(all)i(the)g Fv(r)n(elevant)i
FB(deca)o(y)d(curv)o(es)g(in)o(to)h(Fig.)27 b(4)19 b(that)f(sk)o(etc)o
(hes)f(their)g(relativ)o(e)g(p)q(ositions)i(and)0 1172
y(indicates)j(the)h(BPS)g(states)g(that)g(deca)o(y)f(across)i(these)f
(curv)o(es.)40 b(All)22 b(curv)o(es)g(go)h(through)h
Ft(\033)1822 1179 y Fr(3)1843 1172 y FB(,)g(while)0 1235
y(the)19 b(other)g(in)o(tersection)f(p)q(oin)o(t)i(with)f(the)g(real)g
(axis)g(dep)q(ends)h(on)g(the)f(curv)o(e:)26 b Ft(\033)1547
1242 y Fr(2)1568 1235 y Ft(;)h(\033)1637 1242 y Fr(1)1677
1235 y FB(and)20 b(the)f(p)q(oin)o(ts)0 1297 y Ft(x)28
1304 y Fr(2)p Fu(n)72 1297 y Ft(;)24 b(n)14 b FB(=)g(1)p
Ft(;)8 b FB(2)p Ft(;)g(:)g(:)g(:)83 1377 y FB(There)20
b(are)g(sev)o(eral)f(t)o(yp)q(es)h(of)g(states:)30 b(\014rst,)20
b(w)o(e)g(ha)o(v)o(e)f(the)h(states)h(that)f(b)q(ecome)f(massless)g(at)
i(the)0 1439 y(singularities.)f(These)13 b(are)h(\(0)p
Ft(;)8 b FB(1\))615 1446 y Fr(0)650 1439 y FB(and,)15
b(due)e(to)h(the)f(cuts)h(describ)q(ed)f(di\013eren)o(tly)f(in)h(the)h
(t)o(w)o(o)f(half)h(planes,)0 1502 y(\(0)p Ft(;)8 b FB(1\))108
1509 y Fr(0)143 1502 y FB(and)14 b(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))382 1509 y Fm(\006)p Fr(1)447 1502 y
FB(in)k(the)h(upp)q(er,)h(and)g(\(0)p Ft(;)8 b FB(1\))932
1509 y Fr(0)967 1502 y FB(and)14 b(\(1)p Ft(;)8 b FB(1\))1167
1509 y Fm(\006)p Fr(1)1232 1502 y FB(in)k(the)h(lo)o(w)o(er)g(half)g
(plane.)20 b(These)13 b(states)0 1564 y(exist)i(ev)o(erywhere)g
(\(throughout)i(the)f(corresp)q(onding)i(half)e(plane\).)83
1644 y(Second,)h(w)o(e)g(ha)o(v)o(e)g(the)g(other)h(dy)o(ons)g(of)f
Ft(n)889 1651 y Fu(e)925 1644 y FB(=)f Fs(\006)p FB(1,)i(the)f(quarks)h
(and)g(the)f(W-b)q(oson.)27 b(These)17 b(states)0 1706
y(deca)o(y)f(on)i(curv)o(es)e(in)h(the)g(inner,)g(strong)h(coupling)f
(region)g(of)h(the)f(Coulom)o(b)f(branc)o(h)h(of)h(mo)q(duli)e(space:)0
1769 y(The)g(W-b)q(oson)i(deca)o(ys)d(on)i Fs(C)557 1750
y Fm(1)597 1769 y FB(,)f(the)f(quark)h(\(1)p Ft(;)8 b
FB(0\))956 1776 y Fm(\000)p Fr(1)1024 1769 y FB(on)16
b Fs(C)1120 1748 y Fr(+)1117 1783 y(0)1168 1769 y FB(and)h(the)e(quark)
h(\(1)p Ft(;)8 b FB(0\))1592 1776 y Fr(1)1630 1769 y
FB(on)16 b(the)g(innermost)0 1831 y(curv)o(e)f Fs(C)159
1810 y Fm(\000)156 1846 y Fr(0)191 1831 y FB(,)h(while)f(the)h(dy)o
(ons)h(\()p Ft(\017;)8 b FB(1\))675 1838 y Fm(\000)p
Fu(\017)738 1831 y FB(deca)o(y)16 b(on)h Fs(C)971 1810
y Fr(+)968 1846 y(0)1019 1831 y FB(and)g(the)f(dy)o(ons)g(\()p
Ft(\017;)8 b FB(1\))1440 1838 y Fu(\017)1474 1831 y FB(on)17
b Fs(C)1571 1810 y Fm(\000)1568 1846 y Fr(0)1603 1831
y FB(.)83 1911 y(Third,)24 b(w)o(e)e(ha)o(v)o(e)h(the)f(dy)o(ons)h
(with)g Fs(j)p Ft(n)837 1918 y Fu(e)857 1911 y Fs(j)i(\025)g
FB(2.)41 b(As)23 b(discussed)g(ab)q(o)o(v)o(e,)h(among)e(these)h(one)g
(m)o(ust)0 1973 y(distinguish)18 b(t)o(w)o(o)g(sorts:)25
b(those)19 b(that)f(will)f(surviv)o(e)g(the)h(R)o(G)f(\015o)o(w)i
Ft(m)d Fs(!)h(1)h FB(to)g(the)g(pure)g(gauge)h(theory)0
2036 y(and)e(those)f(that)h(do)f(not.)22 b(The)16 b(dy)o(ons)g(that)h
(will)e(surviv)o(e)f(this)i(R)o(G)g(\015o)o(w)h(are)f(\(2)p
Ft(n)11 b FB(+)g(1)p Ft(;)d FB(1\))1691 2043 y Fr(1)1729
2036 y FB(in)15 b(the)h(upp)q(er)0 2098 y(half)g(plane)f(and)i(\(2)p
Ft(n)10 b FB(+)g(1)p Ft(;)e FB(1\))539 2105 y Fm(\000)p
Fr(1)607 2098 y FB(in)15 b(the)h(lo)o(w)o(er)f(half)h(plane.)21
b(These)15 b(dy)o(ons)h(\()p Ft(n)e Fs(6)p FB(=)g Fs(\000)p
FB(1)p Ft(;)8 b FB(0\))16 b(all)f(deca)o(y)g(on)i(the)0
2160 y(curv)o(e)f Fs(C)160 2142 y Fm(1)218 2160 y FB(whic)o(h)h(th)o
(us)h(pla)o(ys)f(a)h(priviledged)d(role.)25 b(The)17
b(other)h(dy)o(ons,)f(namely)f(\(2)p Ft(n;)8 b FB(1\))1696
2167 y Fr(0)1735 2160 y FB(\()p Ft(n)16 b Fs(6)p FB(=)g(0\))i(and)0
2222 y(\(2)p Ft(n)10 b FB(+)g(1)p Ft(;)e FB(1\))219 2229
y Fm(\000)p Fr(1)287 2222 y FB(in)15 b(the)h(upp)q(er)g(and)g(\(2)p
Ft(n)10 b FB(+)g(1)p Ft(;)e FB(1\))879 2229 y Fr(1)917
2222 y FB(in)15 b(the)h(in)f(the)g(lo)o(w)o(er)g(half)h(plane)f(\()p
Ft(n)f Fs(6)p FB(=)g Fs(\000)p FB(1)p Ft(;)8 b FB(0\))16
b(deca)o(y)f(on)0 2284 y(curv)o(es)g Fs(C)178 2264 y
Fm(\006)175 2301 y Fr(2)p Fu(k)217 2284 y Ft(;)24 b(k)16
b Fs(6)p FB(=)e(0)i(\(where)g Fs(j)p FB(2)p Ft(k)r Fs(j)f
FB(equals)h Fs(j)p Ft(n)833 2291 y Fu(e)853 2284 y Fs(j)p
FB(,)f Fs(j)p Ft(n)939 2291 y Fu(e)959 2284 y Fs(j)10
b FB(+)g(1)17 b(or)f Fs(j)p Ft(n)1174 2291 y Fu(e)1194
2284 y Fs(j)10 b(\000)g FB(1\).)21 b(There)16 b(are)f(only)h(t)o(w)o(o)
g(states)g(that)0 2349 y(deca)o(y)h(on)g(eac)o(h)g(of)h(these)f(curv)o
(es)g Fs(C)679 2328 y Fm(\006)676 2365 y Fr(2)p Fu(k)718
2349 y Ft(;)25 b(k)18 b Fs(6)p FB(=)e(0.)25 b(These)17
b(curv)o(es)g(mo)o(v)o(e)e(more)h(and)i(more)e(out)o(w)o(ards)i(as)g
Ft(m)0 2411 y FB(is)g(increased.)25 b(Also,)17 b(as)h
Fs(j)p Ft(k)r Fs(j)g FB(gets)g(bigger)f(\(i.e.)25 b(the)17
b Fs(j)p Ft(n)1030 2418 y Fu(e)1050 2411 y Fs(j)h FB(of)g(the)f
(corresp)q(onding)i(dy)o(ons)f(increase\))f(these)0 2473
y(curv)o(es)g(more)g(and)h(more)f(reac)o(h)h(out)g(to)o(w)o(ards)h(the)
e(semiclassical)f(region.)26 b(Con)o(v)o(ersely)l(,)17
b(as)i Ft(m)d Fs(!)h FB(0,)h(all)0 2535 y(curv)o(es)d(\015o)o(w)i(to)o
(w)o(ards)g(a)f(single)g(curv)o(e,)f(sa)o(y)h Fs(C)866
2517 y Fm(1)907 2535 y FB(.)p 0 2609 698 2 v 60 2659
a Fi(y)37 b Fp(Here)16 b(w)o(e)f(actually)f(use)i(the)g(fact)f(that)g
(the)h(family)c(of)i(curv)o(es)i(for)f(a)g Fc(given)g
Fp(state)h(is)f(suc)o(h)h(that)f(the)g(curv)o(es)i(do)e(not)100
2708 y(cross)h(eac)o(h)g(other,)f(except)i(p)q(ossibly)d(on)h(the)h
(real)f(axis.)21 b(Note)16 b(that)f(w)o(e)g(alw)o(a)o(ys)f(consider)i
(the)g(parts)g(of)e(a)h(curv)o(e)h(in)100 2758 y(the)e(lo)o(w)o(er)g
(and)f(upp)q(er)i(half)e(plane)h(separately)m(.)976 2883
y(21)p eop
%%Page: 23 23
23 22 bop 229 2417 a @beginspecial 0 @llx 0 @lly 837
@urx 1253 @ury 3685 @rwi @setspecial
%%BeginDocument: rgf18.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-34.0 1348.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 270.00 scalefont setfont
5326 4726 m
gs 1 -1 sc (\(-5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6001 4876 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4651 5401 m
gs 1 -1 sc (\(-4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5326 5551 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8851 9376 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9076 9526 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9076 9151 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7651 9301 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7801 9076 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8251 8476 m
gs 1 -1 sc (\(2,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8776 8626 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5326 3376 m
gs 1 -1 sc (\(5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5851 3526 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2926 5101 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3151 4876 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3151 5326 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3826 6826 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4051 6976 m
gs 1 -1 sc (-4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4051 6601 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5551 7276 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5776 7051 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5701 7426 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6901 8551 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7126 8701 m
gs 1 -1 sc (-2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7126 8326 m
gs 1 -1 sc (-) col-1 show gr
30.000 slw
% Arc
n 10288.00 13362.44 3305.40 -24.32 -155.68 arc
gs col-1 s gr

% Arc
n 9109.66 9110.45 5090.04 34.59 145.40 arcn
gs col-1 s gr

% Arc
n 7888.00 8243.50 6588.52 34.77 145.23 arcn
gs col-1 s gr

% Arc
n 7887.76 9405.69 6001.90 25.61 154.38 arcn
gs col-1 s gr

% Arc
n 10325.50 10641.53 3270.44 24.56 155.44 arcn
gs col-1 s gr

% Arc
n 7888.00 15761.00 6589.94 -34.79 -145.21 arc
gs col-1 s gr

% Arc
n 9125.85 14883.24 5073.13 -34.63 -145.38 arc
gs col-1 s gr

% Arc
n 7888.00 14595.40 6001.72 -25.61 -154.39 arc
gs col-1 s gr

% Ellipse
n 10300 12000 3000 2438 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 13280 12005 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 880.33 795.33]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 13300 12000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 876.67 790.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 9680 12000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 635.33 790.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7300 12005 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 476.67 790.33]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 11500 12004 1800 1200 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 10300 12000 3000 3638 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9100 12000 4200 6600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 13279 12004 m 679 12004 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 9679 12004 m 679 12004 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 270.00 scalefont setfont
9450 11400 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9675 11550 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9675 11250 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9450 12750 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9675 12900 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9675 12600 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11400 10650 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11925 10800 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10500 10650 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11025 10800 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9900 9375 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10425 9525 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11100 9525 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11625 9675 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8475 7275 m
gs 1 -1 sc (\(-2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9150 7425 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9675 7050 m
gs 1 -1 sc (\(-3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10350 7200 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7200 5400 m
gs 1 -1 sc (\(2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7725 5550 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8250 5025 m
gs 1 -1 sc (\(3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8775 5175 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4500 3900 m
gs 1 -1 sc (\(4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5025 4050 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2400 3300 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2625 3450 m
gs 1 -1 sc (-6) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2625 3075 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3300 2400 m
gs 1 -1 sc (\(-6,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3975 2550 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4500 1800 m
gs 1 -1 sc (\(-7,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5175 1950 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10200 13425 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10875 13650 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11700 13425 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12225 13650 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9000 14850 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9225 15000 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9225 14700 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10050 14850 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10575 15000 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11100 14700 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11775 14850 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8400 15600 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8625 15450 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11700 15525 m
gs 1 -1 sc (\(2,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12225 15675 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9000 15900 m
gs 1 -1 sc (all  \(2n+1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10350 16050 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9300 16350 m
gs 1 -1 sc (except  n=-1,0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7800 16200 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8025 16350 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8025 15975 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8700 16725 m
gs 1 -1 sc (\(2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9225 16950 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9900 16950 m
gs 1 -1 sc (\(3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10425 17100 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5700 17100 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5925 16950 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6450 18000 m
gs 1 -1 sc (\(-2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7125 18225 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7500 18750 m
gs 1 -1 sc (\(-3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8175 18900 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4350 18000 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4575 18150 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4575 17850 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 18900 m
gs 1 -1 sc (\(4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5625 19125 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6000 19650 m
gs 1 -1 sc (\(5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6525 19800 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3900 20025 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4125 19875 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 20700 m
gs 1 -1 sc (\(-4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5775 20850 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6900 21000 m
gs 1 -1 sc (\(-5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 21150 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3300 21300 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3525 21450 m
gs 1 -1 sc (6) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3525 21150 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4425 21825 m
gs 1 -1 sc (\(6,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4950 22050 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5475 22275 m
gs 1 -1 sc (\(7,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6000 22425 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9150 8100 m
gs 1 -1 sc (all  \(2n+1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11025 8100 m
gs 1 -1 sc (except) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11400 8475 m
gs 1 -1 sc (n=0,-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2475 11625 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2625 11775 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 11700 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5250 11850 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4125 20175 m
gs 1 -1 sc (-4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5925 17250 m
gs 1 -1 sc (-2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10575 8325 m
gs 1 -1 sc (1) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2531 a Fo(Fig.)31 b(4:)26 b FB(Sho)o(wn)19
b(are)f(a)h(sk)o(etc)o(h)e(of)h(the)g(relativ)o(e)f(p)q(ositions)i(of)f
(the)h(relev)m(an)o(t)e(deca)o(y)g(curv)o(es)118 2590
y(for)d Ft(m)g(<)303 2571 y Fr(\003)330 2575 y Fn(2)p
303 2579 44 2 v 316 2608 a Fr(2)366 2590 y FB(\(for)g(not)g(to)q(o)h
(large)f Fs(j)p Ft(n)784 2597 y Fu(e)804 2590 y Fs(j)p
FB(\))f(as)i(w)o(ell)d(as)j(the)e(BPS)h(states)g(that)g(deca)o(y)f
(across)i(these)118 2647 y(curv)o(es.)22 b(Three)16 b(states)i(do)f
(not)g(deca)o(y)f(an)o(ywhere)h(and)g(still)f(are)h(presen)o(t)f(in)g
(the)h(innermost)118 2704 y(region)g(inside)e Fs(C)432
2683 y Fm(\000)429 2719 y Fr(0)464 2704 y FB(.)23 b(They)16
b(are)g(describ)q(ed)g(as)h(\(0)p Ft(;)8 b FB(1\))1092
2711 y Fr(0)1131 2704 y FB(and)17 b(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))1373 2711 y Fm(\006)p Fr(1)1441 2704
y FB(in)16 b(the)g(upp)q(er,)h(and)g(as)118 2761 y(\(0)p
Ft(;)8 b FB(1\))226 2768 y Fr(0)261 2761 y FB(and)14
b(\(1)p Ft(;)8 b FB(1\))461 2768 y Fm(\006)p Fr(1)526
2761 y FB(in)13 b(the)g(lo)o(w)o(er)f(half)h(plane.)20
b(Note)13 b(that,)h(in)e(realit)o(y)l(,)g(the)h(angles)h(at)f(whic)o(h)
118 2813 y(the)j(curv)o(es)f(meet)e(the)j(real)f(axis)h(at)g(the)g(p)q
(oin)o(ts)g Ft(x)1063 2821 y Fu(k)1101 2813 y FB(are)g(sligh)o(tly)f
(di\013eren)o(t)g(from)f(what)j(they)118 2870 y(app)q(ear)i(to)e(b)q(e)
h(in)f(the)g(Figure:)23 b(indeed,)17 b(the)g(curv)o(es)g
Fs(C)1162 2849 y Fm(\000)1159 2886 y(\000)p Fu(k)q Fm(\000)p
Fr(2)1261 2870 y FB(,)g(resp.)25 b Fs(C)1447 2849 y Fr(+)1444
2886 y Fu(k)1479 2870 y FB(,)17 b(in)h(the)f(upp)q(er)g(half)118
2937 y(plane)e(are)h(the)f(smo)q(oth)h(con)o(tin)o(uations)f(of)h(the)g
(curv)o(es)e Fs(C)1199 2917 y Fr(+)1196 2954 y Fm(\000)p
Fu(k)1249 2937 y FB(,)i(resp.)21 b Fs(C)1430 2917 y Fm(\000)1427
2954 y Fu(k)q Fr(+2)1499 2937 y FB(,)15 b(in)h(the)f(lo)o(w)o(er)f
(half)118 2997 y(plane,)i(in)g(agreemen)o(t)e(with)i(the)g(mono)q(drom)
o(y)f(around)i(in\014nit)o(y)l(.)976 2883 y Fp(22)p eop
%%Page: 24 24
24 23 bop 83 160 a FB(There)14 b(are)h(a)g(couple)f(of)h(other)f(p)q
(oin)o(ts)h(w)o(orth)g(men)o(tioning.)k(First)14 b(remark,)f(that)i
(the)f(whole)g(picture)0 222 y(is)19 b(compatible)e(with)i(the)g
Ft(C)t(P)26 b FB(transformation)19 b(\()p Ft(n)984 229
y Fu(e)1004 222 y Ft(;)8 b(n)1055 229 y Fu(m)1091 222
y FB(\))1110 229 y Fu(s)1149 222 y Fs(!)18 b FB(\()p
Fs(\000)p Ft(n)1304 229 y Fu(e)1324 222 y Ft(;)8 b(n)1375
229 y Fu(m)1411 222 y FB(\))1430 229 y Fm(\000)p Fu(s)1499
222 y FB(under)19 b(re\015ection)f(b)o(y)h(the)0 284
y(real)f Ft(u)p FB(-axis.)26 b(Second,)18 b(since)f(all)g(curv)o(es)g
(go)i(through)g(the)e(singularit)o(y)h Ft(\033)1396 291
y Fr(3)1417 284 y FB(,)f(i.e.)25 b(all)18 b(existence)e(domains)0
346 y(touc)o(h)j Ft(\033)165 353 y Fr(3)186 346 y FB(,)h(it)g(follo)o
(ws)f(that)h(at)g(this)f(p)q(oin)o(t)h(all)f(BPS)h(states)g(exist.)30
b(The)20 b(same)e(is)i(true)f(for)h(the)f(p)q(oin)o(ts)0
409 y Ft(u)g FB(that)i(lie)d(on)i(the)g(part)g(of)g(the)g(real)f
Ft(u)g FB(line)g(to)h(the)f(righ)o(t)h(of)g Ft(\033)1240
416 y Fr(3)1261 409 y FB(.)32 b(Indeed,)19 b(as)h Fs(j)p
Ft(n)1589 416 y Fu(e)1609 409 y Fs(j)g FB(is)f(increased,)h(the)0
471 y(corresp)q(onding)h(dy)o(on)e(curv)o(es)g(lea)o(ving)f
Ft(\033)788 478 y Fr(3)829 471 y FB(to)i(the)f(righ)o(t)g(with)h(an)g
(ev)o(er)e(smaller)f(slop)q(e)j(get)g(closer)f(and)0
533 y(closer)d(to)g(an)o(y)h(giv)o(en)e(p)q(oin)o(t)h(on)h(the)f(real)g
(in)o(terv)m(al)f(\()p Ft(\033)1012 540 y Fr(3)1033 533
y Ft(;)8 b Fs(1)p FB(\))16 b(but)g(nev)o(er)f(touc)o(h)h(it.)83
615 y(Finally)d(w)o(e)h(note)h(that)g(the)f(whole)h(picture)e(is)i(p)q
(erfectly)e(consisten)o(t:)20 b(if)14 b(a)h(BPS)f(state)h(deca)o(ys)f
(across)0 677 y(a)g(giv)o(en)g(curv)o(e,)e(the)i(deca)o(y)g(pro)q
(ducts)g(are)h(also)f(BPS)g(states)h(that)f(m)o(ust)f(exist)g(in)h(the)
f(region)i(considered,)0 739 y(i.e.)25 b(on)18 b(b)q(oth)h(sides)f(of)g
(the)g(curv)o(e.)25 b(Indeed,)17 b(this)h(is)g(alw)o(a)o(ys)f(the)h
(case.)26 b(As)18 b(an)g(example,)e(consider)i(the)0
801 y(dy)o(ons)g(\(2)p Ft(n;)8 b FB(1\))277 808 y Fr(0)317
801 y FB(\()p Ft(n)17 b Fs(\025)f FB(1\).)27 b(In)18
b(the)g(upp)q(er)g(half)g(plane)f(they)h(deca)o(y)f(on)i(the)e(curv)o
(es)g Fs(C)1624 781 y Fr(+)1621 816 y(2)p Fu(n)1684 801
y FB(in)o(to)h(the)f(dy)o(ons)0 864 y(\(2)p Ft(n)6 b
Fs(\000)g FB(1)p Ft(;)i FB(1\))212 871 y Fr(1)248 864
y FB(and)15 b(the)e(quark)h(\(1)p Ft(;)8 b FB(0\))666
871 y Fm(\000)p Fr(1)718 864 y FB(.)20 b(These)14 b(dy)o(ons)g(\(2)p
Ft(n)6 b Fs(\000)g FB(1)p Ft(;)i FB(1\))1239 871 y Fr(1)1275
864 y FB(exist)13 b(ev)o(erywhere)f(in)i(the)f(upp)q(er)i(half)0
926 y(plane)h(outside)h Fs(C)328 908 y Fm(1)369 926 y
FB(,)f(while)g(the)g(quark)g(\(1)p Ft(;)8 b FB(0\))857
933 y Fm(\000)p Fr(1)926 926 y FB(exists)16 b(ev)o(erywhere)e(outside)j
Fs(C)1512 905 y Fr(+)1509 941 y(0)1544 926 y FB(,)f(and)h(in)g
(particular)f(in)0 988 y(the)j(vicinit)o(y)d(of)j(the)g(deca)o(y)f
(curv)o(es)f(of)i(\(2)p Ft(n;)8 b FB(1\))893 995 y Fr(0)934
988 y FB(considered.)29 b(Moreo)o(v)o(er,)17 b(in)i(man)o(y)e(cases)i
(w)o(e)g(p)q(erform)0 1051 y(sev)o(eral)c(additional)h(consistency)g(c)
o(hec)o(ks)f(to)h(con\014rm)f(the)h(existence)f(domains)h(w)o(e)g
(determined.)83 1132 y(No)o(w)i(let)f(us)h(pro)o(v)o(e)g(that)g(our)h
(general)e(picture)g(w)o(e)h(just)g(describ)q(ed)g(is)g(indeed)f(true.)
26 b(W)l(e)18 b(b)q(egin)g(b)o(y)0 1194 y(studying)e(the)g(W-b)q(oson.)
0 1291 y(The)g(W-b)q(oson)p 0 1297 291 2 v 406 2035 a
@beginspecial 0 @llx 0 @lly 580 @urx 329 @ury 2834 @rwi
@setspecial
%%BeginDocument: rgf9.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 331.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
60.000 slw
% Arc
n 6600.00 2349.00 3023.35 172.87 7.13 arcn
gs col-1 s gr

% Arc
n 6600.00 3099.00 3023.35 -172.87 -7.13 arc
gs col-1 s gr

120.000 slw
% Ellipse
n 9600 2724 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 635.00 176.60]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 6000 2724 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 395.00 176.60]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3600 2724 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 235.00 176.60]  PATmp PATsp ef gr PATusp gs col-1 s gr

30.000 slw
% Ellipse
n 7800 2724 1800 450 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 7200 2724 2400 1200 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 1200 2724 m 9600 2724 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 2724 m 6000 2724 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
10500 2874 m
gs 1 -1 sc (A) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4800 1524 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4800 4224 m
gs 1 -1 sc (B') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6300 2124 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6300 3624 m
gs 1 -1 sc (C') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 2649 m
gs 1 -1 sc (D) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 3099 m
gs 1 -1 sc (D') col-1 show gr
/Symbol findfont 360.00 scalefont setfont
5550 3150 m
gs 1 -1 sc (s) col-1 show gr
/Symbol findfont 360.00 scalefont setfont
5775 3300 m
gs 1 -1 sc (2) col-1 show gr
/Symbol findfont 360.00 scalefont setfont
9750 3150 m
gs 1 -1 sc (s) col-1 show gr
/Symbol findfont 360.00 scalefont setfont
9975 3300 m
gs 1 -1 sc (3) col-1 show gr
/Symbol findfont 360.00 scalefont setfont
3076 3151 m
gs 1 -1 sc (s) col-1 show gr
/Symbol findfont 360.00 scalefont setfont
3226 3301 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 5400 m
gs 1 -1 sc (r =-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6300 4350 m
gs 1 -1 sc (r =oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 3525 m
gs 1 -1 sc (r =1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 2175 m
gs 1 -1 sc (r =-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 2250 m
gs 1 -1 sc (w) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6300 1425 m
gs 1 -1 sc (r =oo) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6375 1500 m
gs 1 -1 sc (w) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 300 m
gs 1 -1 sc (r =1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8475 375 m
gs 1 -1 sc (w) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8475 5475 m
gs 1 -1 sc (w) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6375 4425 m
gs 1 -1 sc (w) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 3600 m
gs 1 -1 sc (w) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2153 a Fo(Fig.)36 b(5:)28 b FB(Sk)o(etc)o(h)18
b(of)i(the)f(p)q(ossible)h(deca)o(y)f(curv)o(es)f(of)i(the)g(W-b)q
(oson)h(\(2)p Ft(;)8 b FB(0\))1568 2160 y Fr(0)1610 2153
y FB(for)19 b Ft(m)h(<)1812 2133 y Fr(\003)1839 2137
y Fn(2)p 1812 2141 44 2 v 1824 2170 a Fr(2)1861 2153
y FB(.)118 2209 y(The)g(thic)o(k)f(curv)o(es)g Ft(r)523
2216 y Fr(w)574 2209 y FB(=)h(1)g(in)g(the)g(upp)q(er)g(half)g(plane)g
(and)h Ft(r)1323 2216 y Fr(w)1373 2209 y FB(=)g Fs(\000)p
FB(1)f(in)g(the)f(lo)o(w)o(er)g(half)118 2258 y(plane)d(are)g(the)g
(only)h(ones)f(that)h(turn)f(out)h(to)g(b)q(e)f(relev)m(an)o(t:)k(they)
c(are)g Fs(C)1479 2240 y Fm(1)1520 2258 y FB(.)83 2403
y(F)l(rom)h(T)l(able)h(1)h(w)o(e)f(see)g(that)h(the)f(a)h(priori)f(p)q
(ossible)h(deca)o(ys)f(are)g(in)o(to)g(a)h(dy)o(on)f(and)h(an)g(an)o
(ti-dy)o(on.)0 2478 y(The)d(three)g(curv)o(es)f Fs(=)p
Ft(m)466 2443 y Fu(r)483 2447 y Fn(w)508 2443 y Fu(a)528
2447 y Fl(D)556 2443 y Fr(+)597 2428 y Fl(m)p 591 2435
41 2 v 591 2439 a Fj(p)p 615 2439 16 2 v 615 2460 a Fn(2)p
466 2466 170 2 v 541 2495 a Fu(a)654 2478 y FB(=)f(0)j(with)f
Ft(r)880 2485 y Fr(w)924 2478 y FB(=)e Fs(\006)p FB(1)p
Ft(;)i Fs(1)g FB(are)h(sho)o(wn)g(in)e(Fig.)21 b(5.)83
2559 y(First)d(consider)f(the)h(curv)o(e)f Ft(r)635 2566
y Fr(w)682 2559 y FB(=)g Fs(1)p FB(.)26 b(On)18 b(this)g(curv)o(e)f
Ft(a)1165 2567 y Fu(D)1199 2559 y Ft(=a)h FB(is)g(real)g(and)g(v)m
(aries)g(from)f Fs(\000)p FB(1)h(to)g(0)h(in)0 2621 y(the)d(upp)q(er)h
(half)g(plane)f(\()p Ft(\017)e(>)g FB(0\))j(and)g(from)f(0)h(to)g(+1)g
(in)f(the)g(lo)o(w)o(er)g(half)g(plane)h(\()p Ft(\017)d(<)g
FB(0\).)23 b(It)16 b(is)g(then)g(easy)0 2683 y(to)j(see)g(that)g(the)g
(only)g(kinematically)d(allo)o(w)o(ed)i(deca)o(ys)g(are)h(\(2)p
Ft(;)8 b FB(0\))1278 2690 y Fr(0)1319 2683 y Fs(!)18
b FB(\(0)p Ft(;)8 b FB(1\))1495 2690 y Fr(0)1530 2683
y FB(+)13 b(\()p Fs(\000)p FB(1\))g Fs(\002)g FB(\()p
Fs(\000)p FB(2)p Ft(;)8 b FB(1\))1894 2690 y Fr(0)1934
2683 y FB(for)0 2746 y Ft(\017)20 b(>)f FB(0)i(and)f(\(2)p
Ft(;)8 b FB(0\))348 2753 y Fr(0)390 2746 y Fs(!)19 b
FB(\(2)p Ft(;)8 b FB(1\))567 2753 y Fr(0)603 2746 y FB(+)13
b(\()p Fs(\000)p FB(1\))h Fs(\002)f FB(\(0)p Ft(;)8 b
FB(1\))929 2753 y Fr(0)970 2746 y FB(for)20 b Ft(\017)g(<)g
FB(0.)32 b(On)20 b(the)f Ft(r)1410 2753 y Fr(w)1461 2746
y FB(=)g(+1)h(curv)o(e)f(w)o(e)g(similarly)976 2883 y
Fp(23)p eop
%%Page: 25 25
25 24 bop 0 160 a FB(\014nd)17 b(that)h(the)e(kinematically)e(p)q
(ossible)j(deca)o(ys)f(are)h(\(2)p Ft(;)8 b FB(0\))1120
167 y Fr(0)1157 160 y Fs(!)15 b FB(\(1)p Ft(;)8 b FB(1\))1330
167 y Fr(1)1363 160 y FB(+)k(\()p Fs(\000)p FB(1\))f
Fs(\002)g FB(\()p Fs(\000)p FB(1)p Ft(;)d FB(1\))1722
167 y Fr(1)1761 160 y FB(and)17 b(on)h(the)0 222 y Ft(r)22
229 y Fr(w)66 222 y FB(=)c Fs(\000)p FB(1)i(curv)o(e)f(\(2)p
Ft(;)8 b FB(0\))435 229 y Fr(0)471 222 y Fs(!)14 b FB(\(1)p
Ft(;)8 b FB(1\))643 229 y Fm(\000)p Fr(1)705 222 y FB(+)j(\()p
Fs(\000)p FB(1\))h Fs(\002)e FB(\()p Fs(\000)p FB(1)p
Ft(;)e FB(1\))1063 229 y Fm(\000)p Fr(1)1131 222 y FB(for)17
b(b)q(oth)g Ft(\017)c(>)h FB(0)j(and)g Ft(\017)c(<)h
FB(0.)83 306 y(Of)e(course,)h(as)g(already)f(men)o(tioned)e(ab)q(o)o(v)
o(e,)i(suc)o(h)h(deca)o(ys)e(can)i(only)f(tak)o(e)f(place)h(if)g(the)g
(\014nal)g(states)h(do)0 368 y(indeed)i(exist)f(on)i(the)g(curv)o(e)e
(considered.)20 b(This)c(will)e(b)q(e)i(c)o(hec)o(k)o(ed)d(b)q(elo)o(w)
i(for)h(the)f(deca)o(y)g(on)h Fs(C)1776 350 y Fm(1)1816
368 y FB(,)g(but)f(for)0 431 y(the)h(momen)o(t)d(w)o(e)j(in)o(vite)e
(the)i(reader)g(to)g(consult)g(the)g(complete)e(Figure)i(4)g(to)h(con)o
(vince)d(herself/himself)0 493 y(that)j(this)g(is)f(indeed)g(the)h
(case.)23 b(W)l(e)16 b(kno)o(w)h(that)g(the)g(W-b)q(oson)i(exists)d(in)
g(region)h Ft(A)g FB(\(connected)f(to)h(the)0 556 y(semiclassical)g
(domain\).)31 b(Also)19 b(w)o(e)h(kno)o(w)g(that)g(in)f(the)h
Ft(m)f Fs(!)h FB(0)g(limit)d Ft(\033)1409 563 y Fr(2)1450
556 y FB(coincides)h(with)i Ft(\033)1802 563 y Fr(1)1843
556 y FB(and)g(all)0 618 y(curv)o(es)14 b(b)q(ecome)g(one)i(and)f(the)g
(same)g(curv)o(e)f(going)i(through)g Ft(\033)1178 625
y Fr(1)1213 618 y FB(=)e Ft(\033)1293 625 y Fr(2)1329
618 y FB(and)i Ft(\033)1451 625 y Fr(3)1472 618 y FB(.)21
b(F)l(rom)14 b([4])g(w)o(e)h(then)g(kno)o(w)0 680 y(that)h(the)g(W-b)q
(oson)h(do)q(es)g(not)f(exist)f(inside)g(this)g(single)g
Ft(m)f FB(=)g(0)i(curv)o(e.)k(By)15 b(the)g(R)o(G)g(\015o)o(w)i(to)f
(\014nite)f Ft(m)g FB(it)0 743 y(is)g(then)g(clear)g(that)h(it)f(do)q
(es)h(not)g(exist)e(in)h(the)h(innermost)e(regions)h
Ft(D)j FB(and)e Ft(D)1460 725 y Fm(0)1473 743 y FB(.)21
b(W)l(e)15 b(will)f(no)o(w)i(sho)o(w)g(that)0 805 y(the)g(W-b)q(oson)i
(cannot)f(exist)f(in)f(regions)i Ft(B)s(;)8 b(B)890 787
y Fm(0)901 805 y Ft(;)g(C)20 b FB(or)d Ft(C)1077 787
y Fm(0)1105 805 y FB(either.)83 889 y(Supp)q(ose)e(that)f(\(2)p
Ft(;)8 b FB(0\))483 896 y Fr(0)518 889 y FB(exists)13
b(in)g(region)h Ft(B)s FB(.)20 b(Then)13 b(w)o(e)h(can)f(transp)q(ort)i
(it)e(through)i(the)e(cut)h(to)f(region)0 953 y Ft(B)40
935 y Fm(0)75 953 y FB(without)23 b(crossing)h(an)o(y)f(deca)o(y)f
(curv)o(e.)40 b(There)22 b(it)h(w)o(ould)g(b)q(e)g(describ)q(ed)1494
924 y Fu(?)1538 953 y FB(b)o(y)f(\()p Ft(M)1683 935 y
Fm(\003)1678 967 y Fr(2)p Fm(\001)p Fr(3)1729 953 y FB(\))1748
935 y Fm(\000)p Fr(1)1800 953 y FB(\(2)p Ft(;)8 b FB(0\))1908
960 y Fr(0)1955 953 y FB(=)0 1015 y(\(0)p Ft(;)g FB(2\))108
1022 y Fm(\000)p Fr(2)160 1015 y FB(.)30 b(Note)19 b(that)h(the)f
(state)h(\(0)p Ft(;)8 b FB(2\))752 1022 y Fm(\000)p Fr(2)823
1015 y FB(is)19 b(di\013eren)o(t)g(from)f(\(2)p Ft(;)8
b FB(0\))1297 1022 y Fr(0)1338 1015 y FB(and)20 b(w)o(ould)g(ha)o(v)o
(e)e(its)i(o)o(wn)f(deca)o(y)0 1078 y(curv)o(es.)g(W)l(e)13
b(do)h(not)g(sa)o(y)f(that)h(\(0)p Ft(;)8 b FB(2\))689
1085 y Fm(\000)p Fr(2)754 1078 y FB(w)o(ould)13 b(exist)g(in)g(all)f
(of)i(region)f Ft(B)1360 1060 y Fm(0)1373 1078 y FB(,)g(but)g(at)h
(least)f(it)g(w)o(ould)g(exist)g(in)0 1140 y(a)i(region)g(just)g(b)q
(elo)o(w)f(the)h(cut)f(that)h(separates)h Ft(B)h FB(and)e
Ft(B)1082 1122 y Fm(0)1094 1140 y FB(.)21 b(But)14 b(suc)o(h)h(a)g
(state)g(with)f Ft(n)1628 1147 y Fu(m)1678 1140 y FB(=)g(2)h(should)g
(not)0 1203 y(exist)e(an)o(ywhere)h(on)h Fs(M)f FB(,)g(hence)g(\(2)p
Ft(;)8 b FB(0\))738 1210 y Fr(0)774 1203 y FB(cannot)15
b(exist)e(in)h Ft(B)s FB(.)20 b(Supp)q(ose)15 b(no)o(w)g(\(2)p
Ft(;)8 b FB(0\))1571 1210 y Fr(0)1607 1203 y FB(exists)14
b(in)g Ft(B)1835 1185 y Fm(0)1847 1203 y FB(.)20 b(Then)0
1265 y(transp)q(ort)13 b(it)d(through)i(the)f(cut)g(in)o(to)g(region)g
Ft(B)j FB(where)d(it)g(is)f(describ)q(ed)h(as)h Ft(M)1418
1247 y Fm(\003)1413 1279 y Fr(2)p Fm(\001)p Fr(3)1464
1265 y FB(\(2)p Ft(;)c FB(0\))1572 1272 y Fr(0)1608 1265
y FB(=)14 b(\(0)p Ft(;)8 b Fs(\000)p FB(2\))1807 1272
y Fm(\000)p Fr(2)1869 1265 y FB(whic)o(h)0 1328 y(again)16
b(do)q(es)g(not)f(exist.)20 b(Exactly)15 b(the)g(same)f(argumen)o(t)g
(applies)g(for)i(regions)f Ft(C)k FB(and)c Ft(C)1642
1310 y Fm(0)1654 1328 y FB(.)21 b(Indep)q(enden)o(tly)0
1390 y(of)14 b(the)g(ab)q(o)o(v)o(e)g(R)o(G-\015o)o(w)h(argumen)o(t,)e
(one)h(can)g(see)g(similarly)d(that)k(\(2)p Ft(;)8 b
FB(0\))1350 1397 y Fr(0)1386 1390 y FB(cannot)14 b(exist)f(in)h
Ft(D)i FB(or)f Ft(D)1866 1372 y Fm(0)1879 1390 y FB(.)20
b(If)14 b(it)0 1453 y(w)o(ould,)g(there)g(w)o(ould)h(b)q(e)f(a)h(\()p
Ft(M)592 1435 y Fm(\003)587 1467 y Fr(3)613 1453 y FB(\))632
1435 y Fm(\007)p Fr(1)684 1453 y FB(\(2)p Ft(;)8 b FB(0\))792
1460 y Fr(0)827 1453 y FB(=)14 b(\(2)p Ft(;)8 b Fs(\006)p
FB(4\))1026 1460 y Fr(0)1062 1453 y FB(in)14 b Ft(D)1158
1435 y Fm(0)1186 1453 y FB(or)h Ft(D)q FB(.)21 b(W)l(e)14
b(conclude)g(that)h(\(2)p Ft(;)8 b FB(0\))1813 1460 y
Fr(0)1849 1453 y FB(cannot)0 1515 y(exist)16 b(in)h(an)o(y)g(of)g(the)g
(regions)g Ft(B)s(;)8 b(B)676 1497 y Fm(0)688 1515 y
Ft(;)g(C)q(;)g(C)807 1497 y Fm(0)818 1515 y Ft(;)g(D)19
b FB(and)f Ft(D)1036 1497 y Fm(0)1049 1515 y FB(.)24
b(Hence)15 b(it)i(is)g(the)f Ft(r)1438 1522 y Fr(w)1484
1515 y FB(=)f(1)i(curv)o(e)f(for)i Ft(\017)c(>)i FB(0)h(and)0
1578 y(the)f Ft(r)106 1585 y Fr(w)150 1578 y FB(=)e Fs(\000)p
FB(1)i(curv)o(e)f(for)i Ft(\017)c(<)h FB(0)j(that)f(b)q(order)h(the)f
(existence)e(domain)i(of)g(the)g(W-b)q(oson.)23 b(These)17
b(are)f(the)0 1640 y(t)o(w)o(o)f(halv)o(es)g(of)h(the)f
Fs(C)404 1622 y Fm(1)460 1640 y FB(curv)o(e)f(as)i(de\014ned)f(in)g
(\(4.9\).)22 b(In)15 b(this)g(sense,)g Fs(C)1328 1622
y Fm(1)1384 1640 y FB(is)g(the)g(only)h(relev)m(an)o(t)e(curv)o(e)g
(for)0 1703 y(this)i(BPS)g(state.)83 1786 y(Note)j(that)i
Ft(M)361 1793 y Fr(2)p Fm(\001)p Fr(3)432 1786 y FB(acts)f(on)g(\()p
Ft(n)655 1793 y Fu(e)675 1786 y Ft(;)8 b(n)726 1793 y
Fu(m)762 1786 y FB(\))20 b(as)h Ft(S)h Fs(2)f FB(SL\(2)p
Ft(;)8 b Fo(Z)p FB(\),)21 b(i.e.)31 b(it)19 b(exc)o(hanges)h
Ft(n)1589 1793 y Fu(e)1629 1786 y FB(and)g Ft(n)1756
1793 y Fu(m)1812 1786 y FB(\(up)g(to)g(a)0 1849 y(sign\).)h(Th)o(us)15
b(whenev)o(er)e(w)o(e)h(ha)o(v)o(e)g(a)h(state)f(with)h
Fs(j)p Ft(n)962 1856 y Fu(e)982 1849 y Fs(j)e(\025)h
FB(2)h(it)f(cannot)h(exist)f(in)g(a)h(region)f(that)h(is)g(b)q(ounded)0
1911 y(b)o(y)k(part)h(of)f(the)g(cut)h([)p Ft(\033)455
1918 y Fr(1)475 1911 y Ft(;)8 b(\033)525 1918 y Fr(2)546
1911 y FB(])19 b(\(as)h(are)f(regions)h Ft(B)s(;)8 b(B)1016
1893 y Fm(0)1027 1911 y Ft(;)g(C)23 b FB(and)d Ft(C)1244
1893 y Fm(0)1275 1911 y FB(for)g(the)f(W-b)q(oson\))i(since)e(this)g
(state)0 1974 y(w)o(ould)c(b)q(e)g(describ)q(ed)f(on)h(the)g(other)g
(side)f(of)h(the)g(cut)f(b)o(y)g(a)i Fs(j)p Ft(n)1159
1981 y Fu(m)1195 1974 y Fs(j)d(\025)h FB(2.)21 b(This)15
b(is)f(a)i(v)o(ery)d(useful)i(fact)f(whic)o(h)0 2036
y(w)o(e)i(will)f(emplo)o(y)f(m)o(uc)o(h)g(in)i(the)g(follo)o(wing.)0
2137 y(The)g(quark)g(\(1)p Ft(;)8 b FB(0\))346 2144 y
Fr(1)p 0 2156 369 2 v 83 2221 a FB(F)l(rom)15 b(T)l(able)h(1)g(w)o(e)g
(see)g(that)g(there)g(is)f(an)i(in\014nit)o(y)e(of)h(a)h(priori)e(p)q
(ossible)i(deca)o(ys)e(on)i(the)f(in\014nite)f(set)0
2283 y(of)i(curv)o(es)e(lab)q(elled)g(b)o(y)h Ft(r)475
2290 y Fr(q)511 2283 y FB(=)e Fs(\000)616 2264 y Fr(1)p
607 2272 39 2 v 607 2300 a(2)p Fu(p)650 2283 y FB(,)i(including)f
Ft(r)913 2290 y Fr(q)949 2283 y FB(=)f Fs(1)i FB(for)h
Ft(p)d FB(=)g(0,)i(as)h(indicated)e(in)h(Fig)g(6.)83
2368 y(One)i(easily)f(c)o(hec)o(ks)f(that)i(for)g(all)g(curv)o(es)f
(with)g Ft(p)g Fs(6)p FB(=)g(0)h(the)g(deca)o(ys)f(are)h(kinematically)
d(imp)q(ossible.)0 2430 y(F)l(or)e Ft(p)h FB(=)g(0,)f(ho)o(w)o(ev)o
(er,)f(\(1)p Ft(;)c FB(0\))531 2437 y Fr(1)567 2430 y
Fs(!)13 b FB(\(0)p Ft(;)8 b FB(1\))738 2437 y Fr(0)764
2430 y FB(+)t(\()p Fs(\000)p FB(1\))t Fs(\002)t FB(\()p
Fs(\000)p FB(1)p Ft(;)g FB(1\))1101 2437 y Fm(\000)p
Fr(1)1165 2430 y FB(is)13 b(kinematicall)o(y)d(p)q(ossible)j(for)g
Ft(\017)g(>)h FB(0)f(while)0 2493 y(for)j Ft(\017)e(<)f
FB(0)k(it)e(is)h(\(1)p Ft(;)8 b FB(0\))405 2500 y Fr(1)440
2493 y Fs(!)14 b FB(\()p Fs(\000)p FB(1\))c Fs(\002)h
FB(\(0)p Ft(;)d FB(1\))773 2500 y Fr(0)805 2493 y FB(+)i(\(1)p
Ft(;)e FB(1\))961 2500 y Fr(1)983 2493 y FB(.)21 b(Note)15
b(that)i(in)e(b)q(oth)i(cases)f(the)g(quark)g(deca)o(ys)f(in)o(to)p
0 2587 698 2 v 58 2698 a Fq(?)34 b Fp(F)m(or)14 b(t)o(yp)q(ographical)f
(con)o(v)o(enience)i(w)o(e)f(write)g Fq(M)889 2683 y
Ff(\003)908 2698 y Fp(\()p Fq(n)949 2704 y Fh(e)967 2698
y Fq(;)7 b(n)1011 2704 y Fh(m)1042 2698 y Fp(\))1058
2704 y Fh(s)1090 2698 y Fp(instead)14 b(of)f Fq(M)1325
2683 y Ff(\003)1351 2602 y Fg(0)1351 2675 y(B)1351 2702
y(@)1401 2632 y Fq(n)1426 2638 y Fh(e)1394 2698 y Fq(n)1419
2704 y Fh(m)1413 2764 y Fq(s)1458 2602 y Fg(1)1458 2675
y(C)1458 2702 y(A)1494 2698 y Fp(.)976 2883 y(24)p eop
%%Page: 26 26
26 25 bop 524 650 a @beginspecial 0 @llx 0 @lly 519 @urx
292 @ury 2267 @rwi @setspecial
%%BeginDocument: rgf10.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 290.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
120.000 slw
% Ellipse
n 9600 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 635.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 6000 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 395.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3600 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 235.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

30.000 slw
% Ellipse
n 8250 2400 1350 900 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8850 2400 750 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6600 2400 3000 1800 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6000 2400 3600 2400 0 360 DrawEllipse gs col-1 s gr

60.000 slw
% Ellipse
n 7800 2400 1800 1200 0 360 DrawEllipse gs col-1 s gr

30.000 slw
% Polyline
n 1200 2400 m 9600 2400 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 2400 m 6000 2400 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
7575 2850 m
gs 1 -1 sc (1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 2850 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3000 3300 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1800 3300 m
gs 1 -1 sc (-1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1875 1500 m
gs 1 -1 sc (1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3375 1500 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 1875 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7425 2175 m
gs 1 -1 sc (-1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 3300 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 1800 m
gs 1 -1 sc (oo) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 768 a Fo(Fig.)23 b(6:)d FB(Sk)o(etc)o(h)13
b(of)h(the)f(p)q(ossible)h(deca)o(y)f(curv)o(es)g(of)h(the)f(quark)h
(\(1)p Ft(;)8 b FB(0\))1427 775 y Fr(1)1463 768 y FB(for)14
b Ft(m)f(<)1648 748 y Fr(\003)1675 752 y Fn(2)p 1648
757 44 2 v 1660 785 a Fr(2)1710 768 y FB(lab)q(elled)118
833 y(b)o(y)i(the)g(v)m(alues)h(of)g Ft(r)490 840 y Fr(q)512
833 y FB(.)21 b(The)15 b(thic)o(k)g(curv)o(e)f Ft(r)919
840 y Fr(q)955 833 y FB(=)g Fs(1)h FB(is)g Fs(C)1149
812 y Fm(\000)1146 848 y Fr(0)1197 833 y FB(and)h(is)f(the)h(only)f
(curv)o(e)f(that)i(turns)118 887 y(out)h(to)f(b)q(e)h(relev)m(an)o(t.)0
995 y(the)f(t)o(w)o(o)f(BPS)h(states)g(that)h(b)q(ecome)d(massless)h
(at)h(the)g(singularities)f Ft(\033)1339 1002 y Fr(2)1376
995 y FB(and)h Ft(\033)1498 1002 y Fr(3)1519 995 y FB(,)g(cf.)k(Fig.)h
(2,)16 b(and)g(hence)0 1058 y(indeed)i(exist)g(throughout)j(the)e
(corresp)q(onding)h(half)f(planes,)g(as)h(w)o(e)e(will)g(see)h(b)q(elo)
o(w.)29 b(It)19 b(is)g(no)o(w)g(clear)0 1120 y(that)f(\(1)p
Ft(;)8 b FB(0\))215 1127 y Fr(1)254 1120 y FB(exists)17
b(ev)o(erywhere)f(outside)i(the)f Ft(r)922 1127 y Fr(q)960
1120 y FB(=)f Fs(1)i FB(curv)o(e)e(whic)o(h)h(is)g(nothing)i(else)d
(than)i(the)g(curv)o(e)0 1182 y Fs(C)29 1162 y Fm(\000)26
1197 y Fr(0)80 1182 y FB(as)i(de\014ned)f(in)f(eq.)30
b(\(4.9\),)19 b(while)f(it)h(cannot)h(exist)e(inside,)g(as)i(one)f
(sees)g(either)f(from)g(the)h(R)o(G-\015o)o(w)0 1245
y(argumen)o(t)14 b(or)h(otherwise)f(since)g(one)h(w)o(ould)g(get)g
(states)g(\()p Ft(M)1125 1227 y Fm(\003)1120 1259 y Fr(3)1147
1245 y FB(\))1166 1227 y Fm(\006)p Fr(1)1217 1245 y FB(\(1)p
Ft(;)8 b FB(0\))1325 1252 y Fr(1)1361 1245 y FB(=)14
b(\(1)p Ft(;)8 b Fs(\007)p FB(2\))1560 1252 y Fr(1)1596
1245 y FB(with)15 b Fs(j)p Ft(n)1749 1252 y Fu(m)1784
1245 y Fs(j)f FB(=)g(2)h(that)0 1307 y(do)i(not)f(exist.)0
1406 y(The)g(quark)g(\(1)p Ft(;)8 b FB(0\))346 1413 y
Fm(\000)p Fr(1)p 0 1425 399 2 v 524 1962 a @beginspecial
0 @llx 0 @lly 593 @urx 292 @ury 2267 @rwi @setspecial
%%BeginDocument: rgf11.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 360.00 scalefont setfont
1877 1727 m
gs 1 -1 sc (1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3452 1727 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3377 3902 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1802 3902 m
gs 1 -1 sc (-1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5252 1727 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5327 3902 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7352 3452 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7277 2102 m
gs 1 -1 sc (-1/2) col-1 show gr
30.000 slw
% Ellipse
n 10801 2701 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 715.07 175.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10801 2701 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.07 170.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7201 2701 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.07 170.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4801 2701 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.07 170.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 9001 2701 1800 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 7201 2701 3600 1800 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6601 2701 4200 2400 0 360 DrawEllipse gs col-1 s gr

75.000 slw
% Ellipse
n 7801 2701 3000 1200 0 360 DrawEllipse gs col-1 s gr

30.000 slw
% Polyline
n 1201 2701 m 10801 2701 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 7201 2701 m 1201 2701 l  gs col-1 s gr 	[] 0 setdash
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2080 a Fo(Fig.)45 b(7:)33 b FB(Sk)o(etc)o(h)21
b(of)h(the)g(p)q(ossible)h(deca)o(y)e(curv)o(es)g(of)i(the)f(quark)g
(\(1)p Ft(;)8 b FB(0\))1538 2087 y Fm(\000)p Fr(1)1612
2080 y FB(for)22 b Ft(m)i(<)1825 2060 y Fr(\003)1852
2064 y Fn(2)p 1825 2068 44 2 v 1838 2097 a Fr(2)118 2144
y FB(lab)q(elled)17 b(b)o(y)h(the)g(v)m(alues)g(of)g
Ft(r)682 2151 y Fr(q)705 2144 y FB(.)27 b(The)18 b(thic)o(k)f(curv)o(e)
g Ft(r)1126 2151 y Fr(q)1165 2144 y FB(=)g Fs(1)h FB(is)g
Fs(C)1368 2124 y Fr(+)1365 2159 y(0)1418 2144 y FB(and)h(is)f(the)g
(only)g(curv)o(e)118 2199 y(that)f(turns)f(out)h(to)g(b)q(e)f(relev)m
(an)o(t.)83 2348 y(Again,)h(there)g(is)g(an)g(in\014nit)o(y)f(of)i(a)f
(priori)g(p)q(ossible)g(deca)o(ys)g(on)h(the)f(in\014nite)f(set)h(of)g
(curv)o(es)g(lab)q(elled)0 2410 y(b)o(y)f Ft(r)90 2417
y Fr(q)126 2410 y FB(=)192 2391 y Fr(1)p 183 2399 39
2 v 183 2427 a(2)p Fu(p)226 2410 y FB(,)g(see)g(Fig.)21
b(7.)83 2494 y(W)l(e)14 b(\014nd)g(again)g(that)h(all)e(deca)o(ys)g
(are)h(kinematically)d(imp)q(ossible,)h(except)g(for)j
Ft(p)f FB(=)g(0)g(on)g(the)g Ft(r)1855 2501 y Fr(q)1891
2494 y FB(=)g Fs(1)0 2556 y FB(curv)o(e:)22 b(\(1)p Ft(;)8
b FB(0\))259 2563 y Fm(\000)p Fr(1)327 2556 y Fs(!)16
b FB(\(0)p Ft(;)8 b FB(1\))501 2563 y Fr(0)534 2556 y
FB(+)k(\()p Fs(\000)p FB(1\))g Fs(\002)g FB(\()p Fs(\000)p
FB(1)p Ft(;)c FB(1\))895 2563 y Fr(1)934 2556 y FB(for)17
b Ft(\017)f(>)g FB(0)i(and)g(\(1)p Ft(;)8 b FB(0\))1345
2563 y Fm(\000)p Fr(1)1412 2556 y Fs(!)16 b FB(\()p Fs(\000)p
FB(1\))c Fs(\002)f FB(\(0)p Ft(;)d FB(1\))1749 2563 y
Fr(0)1783 2556 y FB(+)k(\(1)p Ft(;)c FB(1\))1941 2563
y Fm(\000)p Fr(1)0 2619 y FB(for)19 b Ft(\017)e(<)h FB(0.)28
b(Note)19 b(again)g(that)g(the)f(relev)m(an)o(t)g(curv)o(e)f(go)q(es)j
(through)f Ft(\033)1326 2626 y Fr(1)1366 2619 y FB(and)g
Ft(\033)1491 2626 y Fr(3)1531 2619 y FB(and)g(that)g(the)f(deca)o(y)g
(is)0 2681 y(precisely)c(in)o(to)h(the)g(states)i(that)f(are)f
(massless)g(at)h Ft(\033)984 2688 y Fr(1)1021 2681 y
FB(and)g Ft(\033)1143 2688 y Fr(3)1164 2681 y FB(,)f(cf.)21
b(Fig)15 b(2.)22 b(Th)o(us)16 b(w)o(e)f(see)g(that)h(the)g(quark)0
2743 y(\(1)p Ft(;)8 b FB(0\))108 2750 y Fm(\000)p Fr(1)176
2743 y FB(exists)15 b(ev)o(erywhere)f(outside)i(the)g
Ft(r)837 2750 y Fr(q)873 2743 y FB(=)e Fs(1)i FB(curv)o(e)f(and)h(do)q
(es)h(not)f(exist)g(inside)f(this)h(curv)o(e.)k(The)976
2883 y Fp(25)p eop
%%Page: 27 27
27 26 bop 0 160 a FB(latter)21 b(fact)g(follo)o(ws)g(once)g(more)e
(from)h(the)h(R)o(G-\015o)o(w)h(from)e Ft(m)i FB(=)g(0)f(or)h(using)f
(\()p Ft(M)1609 142 y Fm(\003)1604 174 y Fr(3)1631 160
y FB(\))1650 142 y Fm(\006)p Fr(1)1722 160 y FB(whic)o(h)g(w)o(ould)0
222 y(generate)e(a)g(state)g(with)f Fs(j)p Ft(n)519 229
y Fu(m)555 222 y Fs(j)g FB(=)g(2)h(that)g(do)q(es)h(not)f(exist.)28
b(Note)18 b(that)h(here)f(the)h Ft(r)1583 229 y Fr(q)1623
222 y FB(=)f Fs(1)g FB(curv)o(e)g(is)g Fs(C)1960 202
y Fr(+)1957 237 y(0)0 285 y FB(whic)o(h)e(is)h(di\013eren)o(t)f(from)f
(the)i(relev)m(an)o(t)f(deca)o(y)g(curv)o(e)f Fs(C)1063
267 y Fm(1)1121 285 y FB(for)i(the)f(W-b)q(oson)j(\(see)d(eq.)23
b(\(4.9\)\))17 b(although)0 347 y(b)q(oth)g(curv)o(es)e(go)j(through)f
Ft(\033)542 354 y Fr(1)579 347 y FB(and)g Ft(\033)702
354 y Fr(3)723 347 y FB(:)k Fs(C)787 326 y Fr(+)784 362
y(0)835 347 y FB(lies)16 b(inside)f Fs(C)1087 329 y Fm(1)1128
347 y FB(.)0 440 y(The)h(magnetic)f(monop)q(ole)h(\(0)p
Ft(;)8 b FB(1\))638 447 y Fr(0)p 0 459 660 2 v 524 920
a @beginspecial 0 @llx 0 @lly 519 @urx 220 @ury 2267
@rwi @setspecial
%%BeginDocument: rgf12.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 254.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 360.00 scalefont setfont
4576 1801 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4576 3151 m
gs 1 -1 sc (oo) col-1 show gr
120.000 slw
% Ellipse
n 9600 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 635.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 6000 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 395.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3600 2400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 235.00 155.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

30.000 slw
% Ellipse
n 6600 2400 3000 1800 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 7800 2400 1800 1200 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 7200 2400 2400 1500 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 1200 2400 m 9600 2400 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 2400 m 6000 2400 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
3300 1800 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3300 3150 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 1875 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 3150 m
gs 1 -1 sc (1) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1034 a Fo(Fig.)32 b(8:)25 b FB(Sk)o(etc)o(h)17
b(of)i(the)f(p)q(ossible)g(deca)o(y)g(curv)o(es)f(of)i(the)f(magnetic)f
(monop)q(ole)h(\(0)p Ft(;)8 b FB(1\))1776 1041 y Fr(0)1816
1034 y FB(for)118 1096 y Ft(m)14 b(<)231 1076 y Fr(\003)258
1080 y Fn(2)p 231 1085 44 2 v 244 1113 a Fr(2)297 1096
y FB(lab)q(elled)h(b)o(y)g(the)h(v)m(alues)h(of)f Ft(r)851
1105 y Fr(d)875 1096 y FB(.)83 1232 y(As)g(for)h(all)f(dy)o(ons)h(with)
f(ev)o(en)f Ft(n)688 1239 y Fu(e)708 1232 y FB(,)h(there)g(are)h(only)f
(three)g(p)q(ossible)g(deca)o(y)g(curv)o(es:)21 b Ft(r)15
b FB(=)g Fs(\006)p FB(1)h(and)h Fs(1)p FB(.)0 1294 y(F)l(or)e(the)g
(magnetic)f(monop)q(ole,)g(whic)o(h)h(is)g(massless)f(at)i
Ft(\033)1076 1301 y Fr(3)1112 1294 y FB(these)f(three)g(curv)o(es)f
(are)h(as)h(sho)o(wn)g(in)f(Fig.)21 b(8.)83 1374 y(All)c(curv)o(es)f
(go)j(through)g Ft(\033)596 1381 y Fr(3)617 1374 y FB(.)26
b(Hence)17 b(an)o(y)g(p)q(oin)o(t)h Ft(u)g FB(can)g(b)q(e)g(reac)o(hed)
f(b)o(y)h(a)g(path)g(that)h(starts)f(at)h Ft(\033)1972
1381 y Fr(3)0 1436 y FB(and)i(do)q(es)g(not)g(cross)g(an)o(y)f(curv)o
(e.)32 b(Since)20 b(the)g(monop)q(ole)g(certainly)f(exists)h(at)h
Ft(\033)1567 1443 y Fr(3)1588 1436 y FB(,)g(w)o(e)e(conclude)h(that)0
1498 y(it)g(m)o(ust)g(exist)f(ev)o(erywhere.)33 b(As)21
b(a)g(consistency)f(c)o(hec)o(k,)f(one)i(can)g(v)o(erify)e(that)i
(after)g(transp)q(orting)h(it)0 1560 y(through)e(an)o(y)f(of)h(the)e
(cuts)h(it)g(is)g(decrib)q(ed)f(b)o(y)h(quan)o(tum)f(n)o(um)o(b)q(ers)f
(that)j(still)e(corresp)q(ond)i(to)f(allo)o(w)o(ed)0
1622 y(BPS)d(states)h(that)f(indeed)g(do)h(exist)e(there.)0
1716 y(The)h(dy)o(ons)h(\(2)p Ft(n;)8 b FB(1\))376 1723
y Fr(0)414 1716 y FB(with)16 b Ft(n)e Fs(6)p FB(=)g(0)p
0 1734 645 2 v 83 1796 a(Let)k(\014rst)g(2)p Ft(n)f Fs(\025)f
FB(4.)26 b(F)l(or)17 b(all)h(these)f(dy)o(ons)h(the)f(three)g(curv)o
(es)g Ft(r)1271 1805 y Fr(d)1311 1796 y FB(=)f Fs(\006)p
FB(1)i(and)g Fs(1)g FB(are)f(as)i(sk)o(etc)o(hed)d(in)0
1858 y(Fig.)21 b(9.)83 1938 y(In)e(eac)o(h)f(half)h(plane)g(there)f
(are)i(only)e(t)o(w)o(o)h(curv)o(es.)29 b(The)19 b Ft(r)h
FB(=)e Fs(1)h FB(curv)o(es)f(are)h(the)g(same)f(for)h(all)g
Ft(n)p FB(,)0 2000 y(while)c(the)g Ft(r)232 2009 y Fr(d)269
2000 y FB(=)f(1)i(curv)o(e)f(in)g(the)h(lo)o(w)o(er)e(half)i(plane)g
(starts)g(at)g(the)g(p)q(oin)o(t)f Ft(x)1415 2007 y Fr(2)p
Fu(n)p Fm(\000)p Fr(2)1524 2000 y FB(on)i(the)e(real)g(axis)h(where)0
2062 y(the)h Ft(r)107 2071 y Fr(d)146 2062 y FB(=)f Fs(\000)p
FB(1)h(curv)o(e)g(in)g(the)g(upp)q(er)g(half)h(plane)f(of)h(the)f(dy)o
(on)g(\(2)p Ft(n)12 b Fs(\000)g FB(2)p Ft(;)c FB(1\))1410
2069 y Fr(0)1449 2062 y FB(had)18 b(ended.)24 b(In)17
b(particular,)0 2124 y Ft(x)28 2131 y Fr(2)p Fu(n)85
2124 y FB(increases)c(as)h Ft(n)p FB(\()p Ft(>)f FB(0\))h(is)f
(increased.)19 b(Since)13 b(the)f(regions)i Ft(B)1179
2131 y Fu(n)1204 2124 y Ft(;)i(B)1274 2106 y Fm(0)1271
2136 y Fu(n)1297 2124 y Ft(;)g(C)1362 2131 y Fu(n)1400
2124 y FB(and)e Ft(C)1531 2106 y Fm(0)1527 2136 y Fu(n)1565
2124 y FB(all)e(are)i(b)q(ounded)g(b)o(y)e(a)0 2186 y(p)q(ortion)i(of)g
(the)g(cut)f([)p Ft(\033)427 2193 y Fr(1)448 2186 y Ft(;)8
b(\033)498 2193 y Fr(2)519 2186 y FB(],)13 b(b)o(y)g(the)g(argumen)o(t)
g(giv)o(en)g(at)h(the)f(end)h(of)f(the)h(subsection)g(on)g(the)f(W-b)q
(oson,)0 2248 y(the)f(dy)o(ons)h(\(2)p Ft(n;)8 b FB(1\))352
2255 y Fr(0)386 2248 y FB(ha)o(ving)13 b Fs(j)p Ft(n)583
2255 y Fu(e)603 2248 y Fs(j)g(\025)h FB(2,)f(cannot)g(exist)f(in)g
(either)g(of)g(these)h(regions:)19 b(they)12 b(can)h(only)f(exist)g(in)
0 2311 y(regions)i Ft(A)200 2318 y Fu(n)225 2311 y FB(.)21
b(The)14 b(deca)o(y)f(on)i(the)f Ft(r)661 2319 y Fr(d)698
2311 y FB(=)g Fs(\000)p FB(1)g(curv)o(e)f(\(whic)o(h)h(is)g
Fs(C)1188 2290 y Fr(+)1185 2325 y(2)p Fu(n)1229 2311
y FB(\))g(is)g(\(2)p Ft(n;)8 b FB(1\))1446 2318 y Fr(0)1482
2311 y Fs(!)14 b FB(\(1)p Ft(;)8 b FB(0\))1654 2318 y
Fm(\000)p Fr(1)1712 2311 y FB(+)f(\(2)p Ft(n)g Fs(\000)g
FB(1)p Ft(;)h FB(1\))1971 2318 y Fr(1)0 2373 y FB(while)22
b(the)h(deca)o(y)f(on)h(the)g Ft(r)554 2382 y Fr(d)602
2373 y FB(=)i(1)e(curv)o(e)f(\(whic)o(h)g(is)h Fs(C)1099
2352 y Fm(\000)1096 2388 y Fr(2)p Fu(n)1141 2373 y FB(\))f(is)h(\(2)p
Ft(n;)8 b FB(1\))1375 2380 y Fr(0)1422 2373 y Fs(!)25
b FB(\(1)p Ft(;)8 b FB(0\))1605 2380 y Fr(1)1642 2373
y FB(+)16 b(\(2)p Ft(n)g Fs(\000)f FB(1)p Ft(;)8 b FB(1\))1927
2380 y Fm(\000)p Fr(1)1979 2373 y FB(.)0 2435 y(W)l(e)19
b(will)g(see)g(b)q(elo)o(w)g(that)h(\(2)p Ft(n)14 b Fs(\000)f
FB(1)p Ft(;)8 b FB(1\))742 2442 y Fr(1)764 2435 y FB(,)19
b(resp.)31 b(\(2)p Ft(n)14 b Fs(\000)f FB(1)p Ft(;)8
b FB(1\))1156 2442 y Fm(\000)p Fr(1)1227 2435 y FB(deca)o(y)19
b(on)h(curv)o(es)f(that)h(are)f(inside)g(the)0 2497 y(curv)o(es)i
Fs(C)184 2477 y Fr(+)181 2512 y(2)p Fu(n)225 2497 y FB(,)i(resp.)37
b Fs(C)429 2477 y Fm(\000)426 2512 y Fr(2)p Fu(n)470
2497 y FB(,)23 b(so)f(that)g(the)f(\014nal)h(states)g(of)f(the)h(deca)o
(ys)f(of)h(\(2)p Ft(n;)8 b FB(1\))1538 2504 y Fr(0)1581
2497 y FB(indeed)21 b(exist.)36 b(Note)0 2559 y(the)16
b(follo)o(wing)f(consistency)g(c)o(hec)o(k:)k(if)c(w)o(e)h(transp)q
(ort)h(the)e(dy)o(on)h(\(2)p Ft(n;)8 b FB(1\))1365 2566
y Fr(0)1403 2559 y FB(from)15 b(region)g Ft(A)1700 2566
y Fu(n)1741 2559 y FB(through)i(the)0 2621 y(in)o(terv)m(al)g([)p
Ft(x)220 2628 y Fr(2)p Fu(n)264 2621 y Ft(;)8 b(x)314
2628 y Fr(2)p Fu(n)p Fm(\000)p Fr(2)407 2621 y FB(])18
b(in)o(to)g(the)g(upp)q(er)h(half)g(plane,)f(it)g(is)g(describ)q(ed)g
(on)h(the)f(other)h(side)f(of)h(the)f(cut)g(as)0 2684
y Ft(M)52 2666 y Fm(\003)47 2698 y Fr(1)p Fm(\001)p Fr(2)p
Fm(\001)p Fr(3)128 2684 y FB(\(2)p Ft(n;)8 b FB(1\))265
2691 y Fr(0)307 2684 y FB(=)20 b(\(2)14 b Fs(\000)f FB(2)p
Ft(n;)8 b Fs(\000)p FB(1\))631 2691 y Fr(0)673 2684 y
FB(=)20 b Fs(\000)p FB(\(2)p Ft(n)14 b Fs(\000)f FB(2)p
Ft(;)8 b FB(1\))997 2691 y Fr(0)1039 2684 y FB(whic)o(h)19
b(indeed)g(do)q(es)h(exist)g(in)f(the)h(region)g(ab)q(o)o(v)o(e)0
2746 y([)p Ft(x)42 2753 y Fr(2)p Fu(n)86 2746 y Ft(;)8
b(x)136 2753 y Fr(2)p Fu(n)p Fm(\000)p Fr(2)229 2746
y FB(].)976 2883 y Fp(26)p eop
%%Page: 28 28
28 27 bop 406 1179 a @beginspecial 0 @llx 0 @lly 680
@urx 611 @ury 2834 @rwi @setspecial
%%BeginDocument: rgf14.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 723.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 360.00 scalefont setfont
4500 6600 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4725 6750 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4501 9676 m
gs 1 -1 sc (B') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4726 9826 m
gs 1 -1 sc (n) col-1 show gr
75.000 slw
% Arc
n 6300.00 6720.00 4803.37 20.47 159.53 arcn
gs col-1 s gr

% Arc
n 7200.00 8400.00 3600.00 0.00 180.00 arc
gs col-1 s gr

30.000 slw
% Ellipse
n 10800 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 715.00 555.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10800 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 8400 8400 2400 1800 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 1200 8400 m 10800 8400 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 7200 8400 m 1200 8400 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
10500 3900 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 10050 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 6975 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
12000 6600 m
gs 1 -1 sc (A) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8700 7725 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8700 9225 m
gs 1 -1 sc (C') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8925 7875 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8925 9375 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4200 11100 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1575 8925 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1725 9150 m
gs 1 -1 sc (2n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3075 8100 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3300 8250 m
gs 1 -1 sc (2n-2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
12225 6750 m
gs 1 -1 sc (n) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1294 a Fo(Fig.)43 b(9:)32 b FB(Sk)o(etc)o(h)20
b(of)i(the)f(p)q(ossible)h(deca)o(y)f(curv)o(es)g(of)g(the)h(dy)o(ons)g
(\(2)p Ft(n;)8 b FB(1\))1559 1301 y Fr(0)1581 1294 y
FB(,)22 b(2)p Ft(n)i Fs(\025)e FB(4,)h(for)118 1356 y
Ft(m)17 b(<)238 1336 y Fr(\003)265 1340 y Fn(2)p 238
1344 44 2 v 250 1373 a Fr(2)305 1356 y FB(lab)q(elled)g(b)o(y)h(the)g
(v)m(alues)g(of)h Ft(r)870 1365 y Fr(d)893 1356 y FB(.)27
b(The)18 b(thic)o(k)f(curv)o(es)h(are)g(those)g(that)h(turn)f(out)h(to)
118 1420 y(b)q(e)d(relev)m(an)o(t.)21 b(They)16 b(are)g
Fs(C)624 1400 y Fr(+)621 1435 y(2)p Fu(n)682 1420 y FB(in)g(the)g(upp)q
(er)g(half)h(plane)f(and)h Fs(C)1313 1400 y Fm(\000)1310
1435 y Fr(2)p Fu(n)1370 1420 y FB(in)f(the)g(lo)o(w)o(er)g(half)g
(plane.)83 1526 y(No)o(w)h(consider)h(the)f(dy)o(on)g(\(2)p
Ft(;)8 b FB(1\))700 1533 y Fr(0)722 1526 y FB(,)18 b(i.e.)23
b Ft(n)17 b FB(=)e(1.)26 b(Then)18 b(the)f(p)q(oin)o(t)g
Ft(x)1374 1533 y Fr(2)p Fu(n)p Fm(\000)p Fr(2)1484 1526
y Fs(\021)e Ft(x)1566 1533 y Fr(0)1605 1526 y FB(coincides)h(with)i
(the)0 1588 y(singularit)o(y)h Ft(\033)273 1595 y Fr(1)294
1588 y FB(,)h(but)g(this)f(do)q(es)i(not)f(c)o(hange)f(the)h(general)f
(argumen)o(t)f(just)i(giv)o(en.)31 b(What)20 b(is)f(di\013eren)o(t)0
1650 y(ho)o(w)o(ev)o(er,)g(is)h(the)g(app)q(earence)h(of)f(an)h
(additional)f(curv)o(e)f(in)h(the)g(lo)o(w)o(er)f(half)h(plane,)h
(namely)d Ft(r)1827 1659 y Fr(d)1871 1650 y FB(=)i Fs(\000)p
FB(1)0 1712 y(whic)o(h)14 b(go)q(es)h(from)f Ft(\033)385
1719 y Fr(2)421 1712 y FB(to)g Ft(\033)506 1719 y Fr(3)542
1712 y FB(and)h(separates)g(region)g Ft(C)1029 1694 y
Fm(0)1025 1726 y Fr(1)1061 1712 y FB(in)o(to)f(a)h(region)g
Ft(C)1381 1694 y Fm(0)1407 1712 y FB(and)g(an)g(innermost)e(region)i
Ft(D)q FB(.)0 1774 y(The)g(ab)q(o)o(v)o(e)g(argumen)o(t)f(that)h(the)g
(dy)o(on)g(cannot)h(exist)e(in)h(region)g Ft(C)1271 1756
y Fm(0)1267 1787 y Fu(n)1307 1774 y FB(no)o(w)g(applies)g(to)g
Ft(C)1666 1756 y Fm(0)1678 1774 y FB(.)21 b(T)l(o)15
b(sho)o(w)h(that)0 1836 y(\(2)p Ft(;)8 b FB(1\))108 1843
y Fr(0)146 1836 y FB(cannot)16 b(exist)f(in)h Ft(D)i
FB(either,)c(it)i(is)g(enough)g(to)h(sho)o(w)f(that)h(it)e(cannot)i
(deca)o(y)e(across)i(this)e Ft(r)1840 1845 y Fr(d)1878
1836 y FB(=)e Fs(\000)p FB(1)0 1898 y(curv)o(e)20 b(separating)h
Ft(C)414 1880 y Fm(0)447 1898 y FB(and)h Ft(D)q FB(.)36
b(The)21 b(only)g(kinematicall)o(y)d(p)q(ossible)j(deca)o(y)f(on)i
(this)f(curv)o(e)e(w)o(ould)i(b)q(e)0 1961 y(\(2)p Ft(;)8
b FB(1\))108 1968 y Fr(0)150 1961 y Fs(!)20 b FB(\(1)p
Ft(;)8 b FB(0\))328 1968 y Fm(\000)p Fr(1)394 1961 y
FB(+)13 b(\(1)p Ft(;)8 b FB(1\))553 1968 y Fr(1)575 1961
y FB(.)33 b(But)19 b(the)h(quark)g(\(1)p Ft(;)8 b FB(0\))1060
1968 y Fm(\000)p Fr(1)1132 1961 y FB(do)q(es)21 b(not)f(exist)f(in)h
(the)g(neigh)o(b)q(ourho)q(o)q(d)i(on)0 2023 y(either)17
b(side)h(of)h(this)f(curv)o(e)f(as)i(w)o(e)f(ha)o(v)o(e)g(sho)o(wn)h
(ab)q(o)o(v)o(e.)28 b(So)18 b(\(2)p Ft(;)8 b FB(1\))1269
2030 y Fr(0)1310 2023 y FB(cannot)19 b(exist)e(in)h(region)h
Ft(D)h FB(either.)0 2085 y(This)g(also)h(follo)o(ws)g(from)e(the)h(R)o
(G-\015o)o(w)h(from)e Ft(m)h FB(=)h(0)g(or)g(b)o(y)f(applying)g
Ft(M)1461 2067 y Fm(\003)1456 2099 y Fr(3)1503 2085 y
FB(when)g(crossing)h(the)f(cut,)0 2147 y(whic)o(h)c(pro)o(vides)f(some)
g(consistency)h(c)o(hec)o(ks.)83 2225 y(Con)o(trary)c(to)h(the)e(other)
h(states)g(considered)g(b)q(efore,)g(the)g(dy)o(ons)g(\(2)p
Ft(n;)c FB(1\))1421 2232 y Fr(0)1455 2225 y FB(with)j
Ft(n)j Fs(\025)g FB(1)e(ha)o(v)o(e)f(existence)0 2287
y(domains)18 b(that)i(are)f(asymmetric)d(with)j(resp)q(ect)f(to)i
(re\015ection)e(b)o(y)h(the)f(real)h(axis,)g(i.e.)29
b(under)19 b(complex)0 2349 y(conjugation.)28 b(Ho)o(w)o(ev)o(er)16
b(this)i(is)g(not)h(surprising:)25 b(re\015ection)17
b(corresp)q(onds)j(to)e Ft(C)t(P)25 b FB(and)19 b(for)f(the)g(states)0
2411 y(considered)e(b)q(efore,)h Ft(C)t(P)23 b FB(only)17
b(mapp)q(ed)f(them)f(to)i(their)f(an)o(tiparticles)f(whic)o(h)h(m)o
(ust)g(exist)g(in)g(the)h(same)0 2473 y(domains.)j(On)14
b(the)f(other)h(hand,)h Ft(C)t(P)20 b FB(maps)14 b(the)f(dy)o(on)h(\(2)
p Ft(n;)8 b FB(1\))1181 2480 y Fr(0)1217 2473 y FB(to)14
b(\()p Fs(\000)p FB(2)p Ft(n;)8 b FB(1\))1450 2480 y
Fr(0)1486 2473 y FB(whic)o(h)13 b(is)g(a)i(di\013eren)o(t)e(BPS)0
2535 y(state.)30 b Ft(C)t(P)c FB(then)19 b(tells)g(us)g(that)h(the)f
(dy)o(ons)g(\()p Fs(\000)p FB(2)p Ft(n;)8 b FB(1\))1042
2542 y Fr(0)1083 2535 y FB(exist)18 b(in)h(domains)p
1457 2495 62 2 v 19 w Ft(A)1494 2542 y Fu(n)1538 2535
y FB(that)h(are)f(the)g(complex)0 2598 y(conjugate)g(of)f(the)g
(existence)f(domains)g Ft(A)807 2605 y Fu(n)850 2598
y FB(of)i(the)f(\(2)p Ft(n;)8 b FB(1\))1131 2605 y Fr(0)1153
2598 y FB(.)27 b(The)18 b(domains)p 1491 2558 V 18 w
Ft(A)1528 2605 y Fu(n)1571 2598 y FB(are)g(b)q(ounded)h(b)o(y)f(the)0
2667 y(curv)o(es)d Fs(C)178 2647 y Fm(\000)175 2682 y(\000)p
Fr(2)p Fu(n)264 2667 y FB(=)p 315 2618 71 2 v 13 w Fs(C)344
2647 y Fm(\000)341 2682 y Fr(2)p Fu(n)402 2667 y FB(in)h(the)g(upp)q
(er)h(half)f(plane)g(and)h(b)o(y)f Fs(C)1101 2647 y Fr(+)1098
2682 y Fm(\000)p Fr(2)p Fu(n)1186 2667 y FB(=)p 1238
2618 V 14 w Fs(C)1267 2647 y Fr(+)1264 2682 y(2)p Fu(n)1325
2667 y FB(in)g(the)g(lo)o(w)o(er)f(half)h(plane)g(\()p
Ft(n)e(>)g FB(0\).)83 2746 y(Next)g(w)o(e)h(will)f(turn)h(to)g(the)g
(dy)o(ons)g(with)g(o)q(dd)h Ft(n)982 2753 y Fu(e)1017
2746 y FB(and)g Ft(s)e FB(=)g Fs(\006)p FB(1.)21 b(Since)14
b(the)h(dy)o(ons)g(\(2)p Ft(n)9 b FB(+)g(1)p Ft(;)f FB(1\))1861
2753 y Fm(\000)p Fr(1)1927 2746 y FB(are)976 2883 y Fp(27)p
eop
%%Page: 29 29
29 28 bop 0 160 a FB(the)15 b Ft(C)t(P)23 b FB(conjugates)16
b(of)g(the)g(dy)o(ons)g(\()p Fs(\000)p FB(2)p Ft(n)10
b Fs(\000)f FB(1)p Ft(;)f FB(1\))950 167 y Fr(+1)1018
160 y FB(it)15 b(is)g(enough)i(to)f(consider)f(the)h(dy)o(ons)f(\(2)p
Ft(n)c FB(+)f(1)p Ft(;)e FB(1\))1971 167 y Fr(1)0 222
y FB(for)17 b(all)f Ft(n)e Fs(2)g Fo(Z)p FB(.)22 b(F)l(or)16
b(eac)o(h)g(of)h(these)f(dy)o(ons)g(of)h(o)q(dd)g Ft(n)1000
229 y Fu(e)1020 222 y FB(,)f(there)g(is)g(an)h(in\014nit)o(y)e(of)i(a)g
(priori)f(p)q(ossible)g(deca)o(y)0 284 y(curv)o(es,)f(one)h(for)h(ev)o
(ery)e(o)q(dd)i Ft(r)g FB(and)g(one)g(for)f Ft(r)f FB(=)f
Fs(1)p FB(.)0 384 y(The)i(dy)o(on)g(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))366 391 y Fr(1)p 0 402 389 2 v 524 1337
a @beginspecial 0 @llx 0 @lly 614 @urx 560 @ury 2267
@rwi @setspecial
%%BeginDocument: rgf15.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 723.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 720.00 scalefont setfont
8025 9675 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
8100 9600 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
8175 9525 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7125 10275 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7200 10200 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7275 10125 m
gs 1 -1 sc (.) col-1 show gr
30.000 slw
% Arc
n 9000.00 8400.00 1800.00 0.00 180.00 arc
gs col-1 s gr

% Arc
n 9600.00 8400.00 1200.00 0.00 180.00 arc
gs col-1 s gr

% Arc
n 10200.00 8400.00 600.00 0.00 180.00 arc
gs col-1 s gr

% Arc
n 8250.00 8550.00 2554.41 -3.37 -176.63 arc
gs col-1 s gr

% Arc
n 7800.00 9075.00 3075.00 -12.68 -167.32 arcn
gs col-1 s gr

% Arc
n 7800.00 8340.00 3000.60 1.15 178.85 arcn
gs col-1 s gr

% Arc
n 7800.00 7622.73 3099.06 14.53 165.47 arcn
gs col-1 s gr

% Arc
n 7800.00 7050.00 3289.76 24.23 155.77 arcn
gs col-1 s gr

% Arc
n 7800.00 6585.00 3506.31 31.17 148.83 arcn
gs col-1 s gr

75.000 slw
% Arc
n 7800.00 8950.00 3050.00 -10.39 -169.61 arc
gs col-1 s gr

30.000 slw
% Ellipse
n 10800 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 715.00 555.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10800 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 8400 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 550.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 8400 m 10800 8400 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 7200 8400 m 1200 8400 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
4500 10500 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 10200 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6975 9600 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8325 9300 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9450 9000 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 5925 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 5250 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 4425 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 3675 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 2925 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 4725 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 4875 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 5025 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 3975 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 4125 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7500 4275 m
gs 1 -1 sc (.) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1456 a Fo(Fig.)42 b(10:)31 b FB(Sk)o(etc)o(h)20
b(of)h(the)h(p)q(ossible)f(deca)o(y)g(curv)o(es)f(of)h(the)g(dy)o(on)h
(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1573 1463 y Fr(1)1616
1456 y FB(for)21 b Ft(m)h(<)1825 1436 y Fr(\003)1852
1440 y Fn(2)p 1825 1444 44 2 v 1838 1473 a Fr(2)118 1520
y FB(lab)q(elled)17 b(b)o(y)f(the)i(v)m(alues)f(of)h
Ft(r)679 1529 y Fr(d)702 1520 y FB(.)25 b(The)18 b(thic)o(k)e(curv)o(e)
g(\()p Fs(C)1145 1500 y Fr(+)1142 1535 y(0)1177 1520
y FB(\))i(is)f(the)g(one)h(that)g(turns)g(out)f(to)h(b)q(e)118
1574 y(relev)m(an)o(t.)83 1725 y(All)e(curv)o(es)g(go)h(through)h
Ft(\033)592 1732 y Fr(3)613 1725 y FB(,)f(and)h(the)e(curv)o(es)g(in)h
(the)g(upp)q(er)g(half)g(plane)g(all)f(end)h(at)g Ft(\033)1734
1732 y Fr(1)1772 1725 y FB(where)g(this)0 1788 y(dy)o(on)f(is)g
(massless.)21 b(The)16 b(curv)o(es)f(are)i(sho)o(wn)g(in)e(Fig.)21
b(10.)83 1870 y(Since)c(the)h(dy)o(on)g(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))566 1877 y Fr(1)605 1870 y FB(exists)17
b(at)i Ft(\033)831 1877 y Fr(1)869 1870 y FB(when)f(approac)o(hed)h
(from)e(the)g(upp)q(er)h(half)g(plane,)g(w)o(e)f(can)0
1933 y(alw)o(a)o(ys)12 b(transp)q(ort)h(it)f(to)g(an)o(y)g(p)q(oin)o(t)
g(in)f(this)h(half)g(plane)g(without)g(crossing)g(an)o(y)g(curv)o(e,)f
(and)i(th)o(us)f(w)o(e)f(kno)o(w)0 1995 y(that)i(it)f(exists)g(ev)o
(erywhere)f(in)h(the)h(upp)q(er)g(half)f(plane.)20 b(Let)13
b(us)g(no)o(w)g(fo)q(cus)g(on)g(the)f(lo)o(w)o(er)g(half)h(plane.)20
b(The)0 2058 y(curv)o(es)11 b(with)i Ft(r)275 2066 y
Fr(d)312 2058 y FB(=)h Fs(\000)p FB(2)p Ft(p)s Fs(\000)s
FB(1)g(corresp)q(ond)f(to)g(the)f(deca)o(ys)g(\()p Fs(\000)p
FB(1)p Ft(;)c FB(1\))1212 2065 y Fr(1)1247 2058 y Fs(!)14
b FB(2)s Fs(\002)s FB(\(2)p Ft(p;)8 b FB(1\))1512 2065
y Fr(0)1538 2058 y FB(+)s(\()p Fs(\000)p FB(1\))s Fs(\002)s
FB(\(4)p Ft(p)s FB(+)s(1)p Ft(;)g FB(1\))1925 2065 y
Fm(\000)p Fr(1)1979 2058 y FB(.)0 2120 y(Clearly)l(,)14
b(if)i Fs(j)p Ft(p)p Fs(j)g FB(is)f(to)q(o)i(large,)e(the)h(\014nal)g
(states)g(will)e(b)q(e)i(to)q(o)h(massiv)o(e)d(and)i(the)g(deca)o(y)f
(is)g(imp)q(ossible.)20 b(W)l(e)0 2182 y(\014nd)11 b(that)h(on)g(the)f
Ft(r)357 2191 y Fr(d)394 2182 y FB(=)j Fs(\000)p FB(1)d(curv)o(e)f(\()p
Ft(p)k FB(=)g(0\))e(the)f(deca)o(y)f(\()p Fs(\000)p FB(1)p
Ft(;)e FB(1\))1165 2189 y Fr(1)1201 2182 y Fs(!)13 b
FB(2)q Fs(\002)q FB(\(0)p Ft(;)8 b FB(1\))1437 2189 y
Fr(0)1459 2182 y FB(+)q(\()p Fs(\000)p FB(1\))q Fs(\002)q
FB(\(1)p Ft(;)g FB(1\))1748 2189 y Fm(\000)p Fr(1)1810
2182 y FB(is)j(indeed)0 2245 y(p)q(ossible,)18 b(i.e.)26
b(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))436 2252 y Fr(1)476
2245 y FB(deca)o(ys)17 b(in)o(to)h(the)g(states)h(that)f(are)h
(massless)e(at)i Ft(\033)1436 2252 y Fr(3)1475 2245 y
FB(and)f Ft(\033)1599 2252 y Fr(1)1639 2245 y FB(in)f(the)h(lo)o(w)o
(er)g(half)0 2307 y(plane.)h(W)l(e)11 b(also)h(\014nd)f(that)h(no)f
(deca)o(ys)g(are)g(kinematically)d(p)q(ossible)j(on)h(the)e
Ft(r)1437 2316 y Fr(d)1475 2307 y FB(=)j Fs(\000)p FB(3)p
Ft(;)k Fs(\000)p FB(5)p Ft(;)f(:)8 b(:)g(:)i FB(curv)o(es.)19
b(In)0 2370 y(an)o(y)14 b(case,)g(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))352 2377 y Fr(1)387 2370 y FB(cannot)15
b(exist)e(in)h(an)o(y)f(of)i(the)e(regions)i(in)e(the)h(lo)o(w)o(er)f
(half)h(plane)g(b)q(et)o(w)o(een)f(t)o(w)o(o)g(curv)o(es)0
2432 y Ft(r)22 2441 y Fr(d)60 2432 y FB(=)i Fs(\000)p
FB(2)p Ft(p)d Fs(\000)f FB(1)18 b(and)f Ft(r)421 2441
y Fr(d)459 2432 y FB(=)e Fs(\000)p FB(2)p Ft(p)d Fs(\000)f
FB(3)18 b(\()p Ft(p)d FB(=)g(0)p Ft(;)h FB(1)p Ft(;)h
FB(2)p Ft(;)f(:)8 b(:)g(:)p FB(\))16 b(b)q(ecause)h(these)g(regions)g
(touc)o(h)g(part)g(of)g(the)g(cut)0 2495 y([)p Ft(\033)42
2502 y Fr(1)63 2495 y Ft(;)8 b(\033)113 2502 y Fr(2)133
2495 y FB(])14 b(and)h(hence)f(the)g(existence)f(of)i(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))877 2502 y Fr(1)913
2495 y FB(w)o(ould)14 b(imply)e(the)j(existence)d(of)j
Ft(M)1582 2476 y Fm(\003)1577 2509 y Fr(2)p Fm(\001)p
Fr(3)1629 2495 y FB(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1776
2502 y Fr(1)1811 2495 y FB(=)14 b(\(1)p Ft(;)8 b FB(1\))1971
2502 y Fr(3)0 2557 y FB(just)21 b(ab)q(o)o(v)o(e)g(the)f(cut.)35
b(Ho)o(w)o(ev)o(er,)20 b(suc)o(h)g(a)i(state)f(has)g
Ft(s)h FB(=)f(3)g(and)h(cannot)f(exist.)34 b(Similarly)l(,)19
b(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1971 2564 y Fr(1)0
2619 y FB(cannot)19 b(exist)e(b)q(et)o(w)o(een)g(an)o(y)h(of)g(the)f
(curv)o(es)g Ft(r)878 2628 y Fr(d)919 2619 y FB(=)f(2)p
Ft(p)d FB(+)f(1)19 b(and)f Ft(r)1245 2628 y Fr(d)1285
2619 y FB(=)f(2)p Ft(p)c FB(+)f(3)19 b(\()p Ft(p)e FB(=)f(0)p
Ft(;)h FB(1)p Ft(;)f FB(2)p Ft(;)h(:)8 b(:)g(:)o FB(\))18
b(in)g(the)0 2682 y(lo)o(w)o(er)e(half)i(plane)f(b)q(ecause)g(they)g
(touc)o(h)g(part)h(of)g(the)f(cut)g([)p Ft(\033)1160
2689 y Fr(2)1180 2682 y Ft(;)8 b(\033)1230 2689 y Fr(3)1251
2682 y FB(],)17 b(and)h(w)o(e)e(w)o(ould)i(similarly)c(conclude)0
2744 y(that)h(a)g(state)g Ft(M)313 2726 y Fm(\003)308
2758 y Fr(3)334 2744 y FB(\()p Fs(\000)p FB(1)p Ft(;)8
b FB(1\))481 2751 y Fr(1)517 2744 y FB(=)14 b(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(3\))716 2751 y Fr(1)752 2744 y FB(w)o(ould)14
b(exist)g(just)h(ab)q(o)o(v)o(e)f(the)h(cut.)20 b(W)l(e)14
b(conclude)g(that)h(the)g(dy)o(on)976 2883 y Fp(28)p
eop
%%Page: 30 30
30 29 bop 0 160 a FB(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))147
167 y Fr(1)185 160 y FB(exists)15 b(ev)o(erywhere)f(except)h(in)h(the)g
(region)g(of)g(the)g(lo)o(w)o(er)f(half)h(plane)g(that)g(is)g(b)q
(ounded)h(b)o(y)f(the)0 222 y(cut)i([)p Ft(\033)128 229
y Fr(1)148 222 y Ft(;)8 b(\033)198 229 y Fr(3)219 222
y FB(])17 b(and)i(the)e Ft(r)454 231 y Fr(d)494 222 y
FB(=)g Fs(\000)p FB(1)h(curv)o(e)e(whic)o(h)i(is)f(nothing)i(else)e
(than)h Fs(C)1372 201 y Fr(+)1369 237 y(0)1422 222 y
FB(\(or)g(actually)f(its)h(part)g(in)g(the)0 284 y(lo)o(w)o(er)d(half)i
(plane\).)83 366 y(As)h(discussed)h(ab)q(o)o(v)o(e,)g(it)f(follo)o(ws)g
(from)g Ft(C)t(P)25 b FB(that)19 b(the)g(dy)o(on)f(\(1)p
Ft(;)8 b FB(1\))1377 373 y Fm(\000)p Fr(1)1448 366 y
FB(exists)18 b(ev)o(erywhere)f(outside)0 428 y(the)e(mirror)e(image)g
(of)j(the)e(region)h(just)g(describ)q(ed,)f(whic)o(h)g(is)h(b)q(ounded)
h(b)o(y)e([)p Ft(\033)1469 435 y Fr(1)1490 428 y Ft(;)8
b(\033)1540 435 y Fr(3)1561 428 y FB(])14 b(and)h(the)g(part)g(in)g
(the)0 490 y(upp)q(er)i(half)f(plane)g(of)g(the)g(curv)o(e)f
Fs(C)664 470 y Fr(+)661 505 y(0)697 490 y FB(.)0 588
y(The)h(dy)o(on)g(\(1)p Ft(;)8 b FB(1\))327 595 y Fr(1)p
0 606 350 2 v 524 1460 a @beginspecial 0 @llx 0 @lly
602 @urx 500 @ury 2267 @rwi @setspecial
%%BeginDocument: rgf16.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 562.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Arc
n 9001.00 1951.00 5550.00 71.08 108.92 arc
gs col-1 s gr

% Arc
n 9001.00 5851.00 2250.00 36.87 143.13 arc
gs col-1 s gr

% Arc
n 9001.00 6871.00 1830.00 10.39 169.61 arc
gs col-1 s gr

% Arc
n 9001.00 7479.57 1821.43 -8.80 -171.20 arc
gs col-1 s gr

75.000 slw
% Arc
n 9001.00 8551.00 2250.00 -36.87 -143.13 arcn
gs col-1 s gr

30.000 slw
% Arc
n 8401.00 7901.00 2500.00 -16.26 -163.74 arcn
gs col-1 s gr

% Arc
n 7801.00 7707.25 3042.42 -9.58 -170.42 arcn
gs col-1 s gr

% Arc
n 7201.00 6826.00 3619.48 5.95 174.05 arcn
gs col-1 s gr

% Arc
n 6600.00 5566.50 4506.48 21.25 158.75 arcn
gs col-1 s gr

% Ellipse
n 10802 7202 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 715.13 475.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10802 7202 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.13 470.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7202 7202 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.13 470.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4802 7202 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.13 470.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1202 7202 m 10802 7202 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 7202 7202 m 1202 7202 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
7800 9300 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8100 8850 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8175 8325 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 7800 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7650 6525 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7200 5550 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6825 4650 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 3225 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3900 1500 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 3750 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 3900 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 4050 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 4950 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 5100 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
7800 5250 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 7650 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 7800 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 7950 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 8250 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 8400 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
9000 8550 m
gs 1 -1 sc (.) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1579 a Fo(Fig.)23 b(11:)d FB(Sk)o(etc)o(h)11
b(of)j(the)e(p)q(ossible)i(deca)o(y)e(curv)o(es)g(of)h(the)g(dy)o(on)g
(\(1)p Ft(;)8 b FB(1\))1429 1586 y Fr(1)1464 1579 y FB(for)13
b Ft(m)h(<)1649 1559 y Fr(\003)1676 1563 y Fn(2)p 1649
1567 44 2 v 1661 1596 a Fr(2)1710 1579 y FB(lab)q(elled)118
1643 y(b)o(y)i(the)g(v)m(alues)g(of)h Ft(r)493 1652 y
Fr(d)516 1643 y FB(.)k(The)c(thic)o(k)d(curv)o(e)i(\()p
Fs(C)952 1623 y Fm(\000)949 1658 y Fr(0)984 1643 y FB(\))g(is)g(the)g
(one)g(that)h(turns)g(out)f(to)h(b)q(e)f(relev)m(an)o(t.)83
1789 y(All)f(curv)o(es)g(go)i(through)h Ft(\033)590 1796
y Fr(3)611 1789 y FB(,)d(and)i(the)f(curv)o(es)g(in)g(the)g(lo)o(w)o
(er)f(half)h(plane)g(all)g(start)h(at)f Ft(\033)1735
1796 y Fr(2)1773 1789 y FB(where)g(this)0 1852 y(dy)o(on)g(is)g
(massless.)21 b(They)16 b(are)g(sho)o(wn)h(in)f(Fig.)21
b(11.)83 1933 y(Again,)13 b(an)o(y)f(p)q(oin)o(t)h(in)f(the)g(lo)o(w)o
(er)g(half)g(plane)g(can)h(b)q(e)g(reac)o(hed)e(from)h
Ft(\033)1385 1940 y Fr(2)1418 1933 y FB(without)h(crossing)g(an)o(y)f
(curv)o(e,)0 1995 y(and)k(hence)e(\(1)p Ft(;)8 b FB(1\))336
2002 y Fr(1)373 1995 y FB(exists)14 b(ev)o(erywhere)f(in)i(the)f(lo)o
(w)o(er)g(half)h(plane.)21 b(What)16 b(ab)q(out)g(the)f(upp)q(er)g
(half)g(plane?)0 2058 y(It)g(turns)h(out)g(that)g(there)f(the)h(only)f
(curv)o(e)f(on)i(whic)o(h)f(a)h(deca)o(y)f(is)h(kinematicall)o(y)d(p)q
(ossible)i(is)h(the)f Ft(r)1879 2067 y Fr(d)1916 2058
y FB(=)f(1)0 2120 y(curv)o(e)g(with)i(the)f(deca)o(y)g(\(1)p
Ft(;)8 b FB(1\))566 2127 y Fr(1)602 2120 y Fs(!)13 b
FB(2)d Fs(\002)g FB(\(0)p Ft(;)e FB(1\))856 2127 y Fr(0)887
2120 y FB(+)i(\()p Fs(\000)p FB(1\))g Fs(\002)f FB(\()p
Fs(\000)p FB(1)p Ft(;)f FB(1\))1241 2127 y Fm(\000)p
Fr(1)1308 2120 y FB(with)16 b(the)f(\014nal)h(states)g(b)q(eing)g
(again)0 2182 y(those)h(BPS)f(states)h(that)g(are)g(massless)e(at)i
Ft(\033)847 2189 y Fr(3)885 2182 y FB(and)g Ft(\033)1008
2189 y Fr(2)1045 2182 y FB(in)f(the)h(upp)q(er)f(half)h(plane.)22
b(It)16 b(is)g(then)g(clear)g(that)0 2245 y(this)e(deca)o(y)g(m)o(ust)e
(happ)q(en)k(as)e(\(1)p Ft(;)8 b FB(1\))681 2252 y Fr(1)718
2245 y FB(cannot)14 b(exist)g(inside)f(the)h Ft(r)1229
2253 y Fr(d)1267 2245 y FB(=)f(1)i(curv)o(e.)k(This)c(can)f(b)q(e)h
(seen)f(either)0 2307 y(from)k(the)i(R)o(G-\015o)o(w)g(argumen)o(t)e
(from)g Ft(m)h FB(=)g(0,)i(or)f(else)e(since)h(the)g(existence)f(of)i
(\(1)p Ft(;)8 b FB(1\))1663 2314 y Fr(1)1704 2307 y FB(in)19
b(this)g(region)0 2369 y(w)o(ould)e(imply)d(the)i(existence)f(of)i(\()p
Ft(M)699 2351 y Fm(\003)694 2383 y Fr(3)720 2369 y FB(\))739
2351 y Fm(\000)p Fr(1)791 2369 y FB(\(1)p Ft(;)8 b FB(1\))899
2376 y Fr(1)935 2369 y FB(=)14 b(\(1)p Ft(;)8 b FB(3\))1095
2376 y Fr(1)1133 2369 y FB(b)q(elo)o(w)17 b(the)f(cut)h([)p
Ft(\033)1483 2376 y Fr(2)1503 2369 y Ft(;)8 b(\033)1553
2376 y Fr(3)1574 2369 y FB(])16 b(whic)o(h)g(is)g(excluded.)0
2432 y(W)l(e)k(conclude)g(that)g(the)g(dy)o(on)h(\(1)p
Ft(;)8 b FB(1\))722 2439 y Fr(1)764 2432 y FB(exists)19
b(ev)o(erywhere)g(outside)h(the)g(region)h(b)q(ounded)g(b)o(y)f([)p
Ft(\033)1888 2439 y Fr(2)1908 2432 y Ft(;)8 b(\033)1958
2439 y Fr(3)1979 2432 y FB(])0 2494 y(and)15 b(the)e
Ft(r)196 2503 y Fr(d)234 2494 y FB(=)g(1)i(curv)o(e)e(in)h(the)f(upp)q
(er)i(half)f(plane)g(whic)o(h)f(is)h(nothing)g(else)g(than)g(the)g
(corresp)q(onding)h(part)0 2556 y(of)i Fs(C)85 2536 y
Fm(\000)82 2571 y Fr(0)117 2556 y FB(.)22 b(By)15 b Ft(C)t(P)23
b FB(w)o(e)16 b(see)g(that)h(the)f(dy)o(on)h(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))930 2563 y Fm(\000)p Fr(1)998
2556 y FB(exists)15 b(ev)o(erywhere)g(outside)h(a)h(region)g(b)q
(ounded)g(b)o(y)0 2619 y([)p Ft(\033)42 2626 y Fr(2)63
2619 y Ft(;)8 b(\033)113 2626 y Fr(3)133 2619 y FB(])16
b(and)h(the)f(part)h(of)f Fs(C)532 2598 y Fm(\000)529
2634 y Fr(0)581 2619 y FB(in)g(the)g(lo)o(w)o(er)f(half)h(plane.)0
2716 y(The)g(dy)o(ons)h(\(2)p Ft(n)11 b FB(+)g(1)p Ft(;)d
FB(1\))460 2723 y Fr(1)498 2716 y FB(with)16 b Ft(n)e(>)g
FB(0)p 0 2735 729 2 v 976 2883 a Fp(29)p eop
%%Page: 31 31
31 30 bop 406 1022 a @beginspecial 0 @llx 0 @lly 652
@urx 499 @ury 2834 @rwi @setspecial
%%BeginDocument: rgf17.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 553.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Ellipse
n 10802 4802 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 715.13 315.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10802 4802 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.13 310.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7202 4802 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.13 310.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4802 4802 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.13 310.13]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1202 4802 m 10802 4802 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 7202 4802 m 1202 4802 l  gs col-1 s gr 	[] 0 setdash
30.000 slw
% Arc
n 9000.00 3450.00 2250.00 36.87 143.13 arc
gs col-1 s gr

% Arc
n 8100.00 3675.00 2925.00 22.62 157.38 arc
gs col-1 s gr

% Arc
n 8700.00 5700.00 2284.73 -23.20 -156.80 arcn
gs col-1 s gr

% Arc
n 8400.00 4600.00 2408.32 4.76 175.24 arcn
gs col-1 s gr

75.000 slw
% Arc
n 7800.00 4250.00 3050.00 10.39 169.61 arcn
gs col-1 s gr

% Arc
n 6637.50 4625.00 4166.18 2.41 177.59 arc
gs col-1 s gr

/Times-Roman findfont 360.00 scalefont setfont
2025 4500 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2250 4650 m
gs 1 -1 sc (2n-2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 6900 m
gs 1 -1 sc (2n-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 5925 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6600 9150 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8250 3300 m
gs 1 -1 sc (2n-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7875 2100 m
gs 1 -1 sc (2n+1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 1050 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11700 4800 m
gs 1 -1 sc (A) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5400 3600 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4800 6900 m
gs 1 -1 sc (B') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6900 6000 m
gs 1 -1 sc (C') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6900 3600 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8700 4200 m
gs 1 -1 sc (D) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8700 5400 m
gs 1 -1 sc (D') col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1140 a Fo(Fig.)25 b(12:)d FB(Sk)o(etc)o(h)15
b(of)i(the)f(p)q(ossible)h(deca)o(y)f(curv)o(es)f(of)i(the)f(dy)o(ons)h
(\(2)p Ft(n)12 b FB(+)f(1)p Ft(;)d FB(1\))1598 1147 y
Fr(1)1637 1140 y FB(for)16 b Ft(m)e(<)1825 1121 y Fr(\003)1852
1125 y Fn(2)p 1825 1129 44 2 v 1838 1158 a Fr(2)118 1197
y FB(lab)q(elled)e(b)o(y)h(the)g(v)m(alues)g(of)h Ft(r)658
1206 y Fr(d)681 1197 y FB(.)21 b(The)13 b(thic)o(k)f(curv)o(es)g(are)h
(those)h(that)g(turn)f(out)h(to)f(b)q(e)h(relev)m(an)o(t.)118
1254 y(They)i(are)g Fs(C)354 1236 y Fm(1)411 1254 y FB(in)g(the)g(upp)q
(er)h(half)f(plane)g(and)h Fs(C)1042 1233 y Fm(\000)1039
1269 y Fr(2)p Fu(n)1100 1254 y FB(in)f(the)g(lo)o(w)o(er)f(half)h
(plane.)83 1363 y(Among)e(the)h(in\014nit)o(y)e(of)j(a)f(priori)f(p)q
(ossible)i(deca)o(y)e(curv)o(es,)g(w)o(e)g(\014nd)h(that)h(the)e(deca)o
(ys)h(are)g(kinemati-)0 1425 y(cally)g(p)q(ossible)h(only)f(on)i(the)e
(follo)o(wing)h(ones:)21 b(in)16 b(the)f(upp)q(er)i(half)e(plane)h(on)g
Ft(r)1482 1434 y Fr(d)1520 1425 y FB(=)d Fs(1)p FB(,)j
Ft(r)1673 1434 y Fr(d)1710 1425 y FB(=)e(2)p Ft(n)d FB(+)f(1)16
b(and)0 1487 y Ft(r)22 1496 y Fr(d)59 1487 y FB(=)e(2)p
Ft(n)d Fs(\000)f FB(1)16 b(and)h(in)e(the)h(lo)o(w)o(er)f(half)g(plane)
h(on)g Ft(r)940 1496 y Fr(d)978 1487 y FB(=)d Fs(1)p
FB(,)j Ft(r)1131 1496 y Fr(d)1168 1487 y FB(=)e(2)p Ft(n)d
Fs(\000)f FB(1)16 b(and)g Ft(r)1489 1496 y Fr(d)1527
1487 y FB(=)d(1.)22 b(These)16 b(curv)o(es)e(are)0 1549
y(sho)o(wn)j(in)f(Fig.)21 b(12.)83 1628 y(The)16 b(curv)o(es)e(sho)o
(wn)j(in)e(Fig.)21 b(12)16 b(are)g(generic,)f(except)f(for)i(2)p
Ft(n)10 b FB(+)g(1)k(=)g(5)i(where)g(the)f Ft(r)1677
1637 y Fr(d)1714 1628 y FB(=)f(2)p Ft(n)c Fs(\000)g FB(1)k(=)g(3)0
1690 y(curv)o(e)g(in)g(the)h(upp)q(er)h(half)f(plane)f(ends)h(at)h
Ft(\033)826 1697 y Fr(2)847 1690 y FB(,)f(and)g(for)h(2)p
Ft(n)9 b FB(+)f(1)14 b(=)g(3)h(where)g(there)g(is)f(no)i
Ft(r)1680 1699 y Fr(d)1717 1690 y FB(=)e(2)p Ft(n)9 b
Fs(\000)f FB(1)14 b(=)g(1)0 1753 y(curv)o(e)f(in)h(the)f(upp)q(er)i
(half)f(plane)f(and)i(where)f(the)g Ft(r)959 1761 y Fr(d)996
1753 y FB(=)g(2)p Ft(n)7 b Fs(\000)g FB(1)13 b(curv)o(e)g(in)h(the)g
(lo)o(w)o(er)f(half)h(plane)g(coincides)0 1815 y(with)i(the)g
Ft(r)217 1823 y Fr(d)254 1815 y FB(=)e(1)j(curv)o(e)e(and)i(starts)g
(at)f Ft(x)795 1822 y Fr(0)830 1815 y Fs(\021)e Ft(\033)911
1822 y Fr(1)932 1815 y FB(.)83 1894 y(There)i(are)h(t)o(w)o(o)f
(kinematically)d(p)q(ossible)k(deca)o(ys)f(on)g(the)h
Ft(r)1212 1903 y Fr(d)1249 1894 y FB(=)d(1)j(curv)o(e:)k(\(2)p
Ft(n)11 b FB(+)g(1)p Ft(;)d FB(1\))1713 1901 y Fr(1)1750
1894 y Fs(!)14 b FB(\(1)p Ft(;)8 b FB(0\))1922 1901 y
Fr(1)1955 1894 y FB(+)0 1956 y(\(2)p Ft(n;)g FB(1\))137
1963 y Fr(0)177 1956 y FB(and)20 b(\(2)p Ft(n)13 b FB(+)f(1)p
Ft(;)c FB(1\))499 1963 y Fr(1)539 1956 y Fs(!)17 b FB(2)c
Fs(\002)g FB(\(1)p Ft(;)8 b FB(0\))803 1963 y Fr(1)837
1956 y FB(+)13 b(\(2)p Ft(n)g Fs(\000)f FB(1)p Ft(;)c
FB(1\))1113 1963 y Fm(\000)p Fr(1)1165 1956 y FB(.)28
b(But)18 b(this)g(curv)o(e)g(is)g Fs(C)1616 1935 y Fm(\000)1613
1971 y Fr(2)p Fu(n)1676 1956 y FB(and)h(hence)f(also)0
2018 y(the)g(deca)o(y)g(curv)o(e)f(of)i(\(2)p Ft(n;)8
b FB(1\))551 2025 y Fr(0)592 2018 y FB(\(where)18 b(the)g(latter)g
(deca)o(ys)g(in)o(to)g(\(1)p Ft(;)8 b FB(0\))1341 2025
y Fr(1)1375 2018 y FB(+)13 b(\(2)p Ft(n)g Fs(\000)f FB(1)p
Ft(;)c FB(1\))1651 2025 y Fm(\000)p Fr(1)1703 2018 y
FB(\),)19 b(so)g(that)g(the)0 2080 y(\014rst)d(of)g(the)f(t)o(w)o(o)h
(deca)o(ys)f(cannot)h(tak)o(e)f(place)g(\(or)h(actually)f(is)h(iden)o
(tical)e(to)i(the)f(second\).)21 b(On)16 b(the)f(other)0
2142 y(hand,)20 b(w)o(e)f(will)f(see)h(b)q(elo)o(w)g(that)g(\(2)p
Ft(n)14 b Fs(\000)f FB(1)p Ft(;)8 b FB(1\))867 2149 y
Fm(\000)p Fr(1)938 2142 y FB(exists)18 b(in)h(the)g(lo)o(w)o(er)f(half)
h(plane)g(ev)o(erywhere)f(outside)0 2204 y(the)c(curv)o(e)g
Fs(C)240 2186 y Fm(1)295 2204 y FB(whic)o(h)g(is)h(w)o(ell)e(inside)h
Fs(C)744 2184 y Fm(\000)741 2219 y Fr(2)p Fu(n)800 2204
y FB(\()p Ft(n)g(>)g FB(0\),)h(so)g(that)g(the)g(second)f(of)h(the)g(t)
o(w)o(o)f(deca)o(ys)g(can)h(indeed)0 2267 y(tak)o(e)f(place.)20
b(In)14 b(the)h(upp)q(er)f(half)h(plane,)f(on)h(the)f
Ft(r)933 2275 y Fr(d)971 2267 y FB(=)f Fs(1)i FB(curv)o(e)e(\(whic)o(h)
h(is)g Fs(C)1448 2248 y Fm(1)1489 2267 y FB(\))g(w)o(e)h(can)f(ha)o(v)o
(e)g(the)g(deca)o(y)0 2329 y(\(2)p Ft(n)f FB(+)g(1)p
Ft(;)8 b FB(1\))225 2336 y Fr(1)266 2329 y Fs(!)18 b
FB(\()p Ft(n)13 b FB(+)g(1\))g Fs(\002)g FB(\(1)p Ft(;)8
b FB(1\))662 2336 y Fr(1)697 2329 y FB(+)k(\()p Fs(\000)p
Ft(n)p FB(\))h Fs(\002)g FB(\()p Fs(\000)p FB(1)p Ft(;)8
b FB(1\))1065 2336 y Fr(1)1105 2329 y FB(in)o(to)19 b(\014nal)g(states)
h(that)f(do)h(exist)e(there.)29 b(The)0 2391 y(existence)13
b(of)j(\(2)p Ft(n)9 b FB(+)g(1)p Ft(;)f FB(1\))478 2398
y Fr(1)515 2391 y FB(in)15 b(regions)g Ft(B)s(;)h(C)q(;)g(D)q(;)h(B)983
2373 y Fm(0)995 2391 y Ft(;)f(C)1064 2373 y Fm(0)1091
2391 y FB(and)g Ft(D)1226 2373 y Fm(0)1255 2391 y FB(is)f(ruled)f(out)i
(b)o(y)e(the)h(b)o(y)g(no)o(w)h(familiar)0 2453 y(argumen)o(ts)i(of)h
(transp)q(orting)h(the)f(state)g(through)h(the)e(cuts)h([)p
Ft(\033)1211 2460 y Fr(1)1232 2453 y Ft(;)8 b(\033)1282
2460 y Fr(2)1303 2453 y FB(])18 b(or)h([)p Ft(\033)1439
2460 y Fr(2)1460 2453 y Ft(;)8 b(\033)1510 2460 y Fr(3)1531
2453 y FB(])18 b(and)h(th)o(us)g(generating)0 2515 y(states)e(\()p
Ft(M)210 2497 y Fm(\003)205 2529 y Fr(2)p Fm(\001)p Fr(3)256
2515 y FB(\))275 2497 y Fm(\006)p Fr(1)326 2515 y FB(\(2)p
Ft(n)12 b FB(+)f(1)p Ft(;)d FB(1\))548 2522 y Fr(1)586
2515 y FB(or)16 b(\()p Ft(M)716 2497 y Fm(\003)711 2529
y Fr(3)738 2515 y FB(\))757 2497 y Fm(\006)p Fr(1)808
2515 y FB(\(2)p Ft(n)c FB(+)f(1)p Ft(;)d FB(1\))1030
2522 y Fr(1)1068 2515 y FB(that)17 b(w)o(ould)f(ha)o(v)o(e)f
Fs(j)p Ft(n)1471 2522 y Fu(m)1507 2515 y Fs(j)f(\025)f
FB(2.)0 2607 y(The)j(dy)o(ons)h(\(2)p Ft(n)11 b FB(+)g(1)p
Ft(;)d FB(1\))460 2614 y Fr(1)498 2607 y FB(with)16 b
Ft(n)e(<)g Fs(\000)p FB(1)p 0 2626 768 2 v 83 2686 a(The)19
b(deca)o(y)g(curv)o(es)f(on)h(whic)o(h)g(the)g(deca)o(ys)f(are)h
(kinematically)d(p)q(ossible)j(lo)q(ok)h(qualitativ)o(ely)d(v)o(ery)0
2749 y(m)o(uc)o(h)d(lik)o(e)g(those)i(of)g(Fig.)21 b(12.)h(The)16
b(only)g(curv)o(e)e(that)j(starts)f(in)g(the)g(lo)o(w)o(er)f(half)h
(plane)f(to)i(the)e(left)g(of)i Ft(\033)1972 2756 y Fr(1)976
2883 y Fp(30)p eop
%%Page: 32 32
32 31 bop 0 161 a FB(is)17 b(the)g(curv)o(e)f Fs(C)295
140 y Fr(+)292 176 y(2)p Fu(n)p Fr(+2)403 161 y FB(\(whic)o(h)g(is)h
(no)o(w)g Ft(r)736 170 y Fr(d)775 161 y FB(=)e Fs(\000)p
FB(1)j(and)f(replaces)g(the)g Ft(r)1297 170 y Fr(d)1335
161 y FB(=)f(1)h(curv)o(e)f(of)h(Fig.)24 b(12\),)18 b(while)e(in)0
223 y(the)h(upp)q(er)h(half)f(plane)g(w)o(e)g(still)f(ha)o(v)o(e)g(the)
h(same)g Ft(r)g FB(=)e Fs(1)i FB(curv)o(e)f Fs(C)1264
205 y Fm(1)1305 223 y FB(.)24 b(By)17 b(the)g(same)f(argumen)o(ts,)g
(using)0 285 y(\()p Ft(M)71 267 y Fm(\003)66 299 y Fr(2)p
Fm(\001)p Fr(3)117 285 y FB(\))136 267 y Fm(\006)p Fr(1)200
285 y FB(and)e(\()p Ft(M)363 267 y Fm(\003)358 299 y
Fr(3)385 285 y FB(\))404 267 y Fm(\006)p Fr(1)455 285
y FB(,)f(w)o(e)g(can)g(sho)o(w)g(that)h(the)f(dy)o(ons)g(under)g
(consideration)g(only)g(exist)f(outside)h(these)0 348
y(t)o(w)o(o)20 b(curv)o(es.)30 b(The)20 b(deca)o(y)f(on)h
Fs(C)617 330 y Fm(1)678 348 y FB(is)f(e.g.)31 b(\(2)p
Ft(n)14 b FB(+)g(1)p Ft(;)8 b FB(1\))1062 355 y Fr(1)1103
348 y Fs(!)20 b FB(\()p Ft(n)13 b FB(+)h(1\))f Fs(\002)h
FB(\(1)p Ft(;)8 b FB(1\))1503 355 y Fr(1)1538 348 y FB(+)13
b(\()p Fs(\000)p Ft(n)p FB(\))g Fs(\002)h FB(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))1908 355 y Fr(1)1949 348 y FB(as)0
410 y(b)q(efore,)16 b(while)f(on)i Fs(C)384 389 y Fr(+)381
425 y(2)p Fu(n)p Fr(+2)491 410 y FB(it)f(is)g(\(2)p Ft(n)11
b FB(+)g(1)p Ft(;)d FB(1\))810 417 y Fr(1)846 410 y Fs(!)14
b FB(2)d Fs(\002)g FB(\()p Fs(\000)p FB(1)p Ft(;)d FB(0\))1142
417 y Fr(1)1175 410 y FB(+)j(\(2)p Ft(n)g FB(+)g(3)p
Ft(;)d FB(1\))1445 417 y Fm(\000)p Fr(1)1513 410 y FB(whic)o(h)16
b(do)g(exist)g(there.)0 507 y(The)g(dy)o(ons)h(\(2)p
Ft(n)11 b FB(+)g(1)p Ft(;)d FB(1\))460 514 y Fm(\000)p
Fr(1)p 0 525 513 2 v 83 588 a FB(These)16 b(dy)o(ons)h(are)f(the)g
Ft(C)t(P)23 b FB(conjugate)17 b(states)g(of)g(\()p Fs(\000)p
FB(2)p Ft(n)11 b Fs(\000)g FB(1)p Ft(;)d FB(1\))1298
595 y Fr(1)1320 588 y FB(.)21 b(Hence,)15 b(in)h(the)g(lo)o(w)o(er)f
(half)i(plane)0 651 y(they)h(alw)o(a)o(ys)h(exist)f(ev)o(erywhere)g
(outside)h(the)f(curv)o(e)g Fs(C)1065 633 y Fm(1)1106
651 y FB(,)h(while)f(in)h(the)f(upp)q(er)i(half)e(plane)h(they)g(only)0
713 y(exist)e(outside)i(curv)o(es)e Fs(C)468 692 y Fr(+)465
728 y(2)p Fu(n)528 713 y FB(if)g Ft(n)h(>)f FB(0)h(and)h(only)f
(outside)g(curv)o(es)f Fs(C)1274 692 y Fm(\000)1271 728
y Fr(2)p Fu(n)p Fr(+2)1383 713 y FB(if)h Ft(n)f(<)g Fs(\000)p
FB(1.)28 b(As)18 b(a)g(consistency)0 775 y(c)o(hec)o(k,)13
b(consider)h(transp)q(orting)i(a)e(dy)o(on)h(\(2)p Ft(n)7
b FB(+)g(1)p Ft(;)h FB(1\))980 782 y Fr(1)1017 775 y
FB(with)14 b Ft(n)g(>)g FB(0)h(through)g(the)g(cut)f(\()p
Fs(\0001)p Ft(;)8 b(\033)1765 782 y Fr(1)1785 775 y FB(])14
b(\(see)g(Fig.)0 837 y(12\))j(in)o(to)g(the)f(region)h(b)q(elo)o(w)f
(the)g(cut.)22 b(Then)17 b(this)f(state)h(is)g(describ)q(ed)f(there)g
(b)o(y)g(\()p Ft(M)1614 819 y Fm(\003)1609 851 y Fr(1)p
Fm(\001)p Fr(2)p Fm(\001)p Fr(3)1690 837 y FB(\))1709
819 y Fm(\000)p Fr(1)1760 837 y FB(\(2)p Ft(n)1832 844
y Fr(1)1854 837 y Ft(;)8 b FB(1\))1919 844 y Fr(1)1955
837 y FB(=)0 900 y Fs(\000)p FB(\(2)p Ft(n)k FB(+)g(3)p
Ft(;)c FB(1\))262 907 y Fm(\000)p Fr(1)314 900 y FB(.)25
b(This)17 b(state)h(indeed)f(exists)g(in)g(this)h(region)f(b)q(ecause)h
(it)f(is)g(outside)h Fs(C)1661 882 y Fm(1)1719 900 y
FB(\(in)f(the)g(lo)o(w)o(er)0 962 y(half)f(plane\).)28
1085 y Fw(4.3.)36 b Fo(Deca)n(y)18 b(curv)n(es)h(and)g(BPS)g(sp)r
(ectra)f(for)g(large)g(mass)g(\()p Ft(m)c(>)1421 1066
y Fr(\003)1448 1070 y Fn(2)p 1421 1074 44 2 v 1434 1103
a Fr(2)1470 1085 y Fo(\))0 1200 y FB(The)i(general)g(picture)p
0 1216 418 2 v 83 1285 a(As)c Ft(m)g FB(is)h(increased)e(from)h
Ft(m)h(<)684 1265 y Fr(\003)711 1269 y Fn(2)p 684 1273
44 2 v 696 1302 a Fr(2)745 1285 y FB(to)g Ft(m)h(>)914
1265 y Fr(\003)941 1269 y Fn(2)p 914 1273 V 927 1302
a Fr(2)976 1285 y FB(one)e(go)q(es)i(through)f Ft(m)h
FB(=)1459 1265 y Fr(\003)1486 1269 y Fn(2)p 1459 1273
V 1471 1302 a Fr(2)1520 1285 y FB(where)e(the)g(singularities)0
1352 y Ft(\033)28 1359 y Fr(2)64 1352 y FB(and)k Ft(\033)186
1359 y Fr(3)222 1352 y FB(coincide)e(and)i(where)e(new)i(states)f(b)q
(ecome)f(massless.)20 b(A)o(t)14 b Ft(m)g(>)1446 1332
y Fr(\003)1473 1336 y Fn(2)p 1446 1340 V 1459 1369 a
Fr(2)1495 1352 y FB(,)h(the)g(quan)o(tum)f(n)o(um)o(b)q(ers)0
1414 y(of)g(the)g(massless)f(states)h(at)g(these)g(t)o(w)o(o)g
(singularities)f(ha)o(v)o(e)g(c)o(hanged.)20 b(One)14
b(m)o(ust)e(ho)o(w)o(ev)o(er)h(k)o(eep)g(in)g(mind)0
1476 y(that)g(this)f(is)h(a)g(somewhat)f(\\lo)q(cal")h(e\013ect,)f
(where)g(lo)q(calit)o(y)g(here)g(refers)g(to)h(the)f(distance)g(on)h
(the)f(Coulom)o(b)0 1539 y(branc)o(h:)22 b(these)17 b(rearrangemen)o
(ts)e(do)j(not)f(m)o(uc)o(h)e(a\013ect)i Ft(a)p FB(\()p
Ft(u)p FB(\))f(or)h Ft(a)1263 1547 y Fu(D)1297 1539 y
FB(\()p Ft(u)p FB(\))g(for)g Ft(u)g FB(far)g(a)o(w)o(a)o(y)l(,)f(i.e.)
22 b(suc)o(h)16 b(that)0 1601 y Fs(j)p Ft(u)6 b Fs(\000)g
Ft(\033)121 1608 y Fr(2)141 1601 y Fs(j)14 b(\035)f(j)p
Ft(\033)274 1608 y Fr(2)301 1601 y Fs(\000)6 b Ft(\033)374
1608 y Fr(3)394 1601 y Fs(j)p FB(.)21 b(What)14 b(do)q(es)g(this)g
(mean)e(for)i(the)g(relev)m(an)o(t)e(deca)o(y)h(curv)o(es)g(and)h
(existence)e(domains)0 1663 y(of)19 b(the)g(BPS)g(states)h(of)g(Fig.)29
b(4?)i(W)l(e)19 b(exp)q(ect,)g(and)h(v)o(erify)d(b)q(elo)o(w,)i(that)h
(all)f(what)g(can)h(happ)q(en)g(is)f(the)0 1725 y(follo)o(wing:)h(as)14
b Ft(m)g FB(=)395 1706 y Fr(\003)422 1710 y Fn(2)p 395
1714 V 407 1743 a Fr(2)457 1725 y FB(and)h Ft(\033)578
1732 y Fr(2)613 1725 y FB(=)f Ft(\033)693 1732 y Fr(3)714
1725 y FB(,)g(the)f(curv)o(e)g Fs(C)980 1705 y Fm(\000)977
1740 y Fr(0)1026 1725 y FB(has)i(shrunk)f(to)g(a)h(p)q(oin)o(t.)20
b(Then)14 b(as)h Ft(m)e FB(is)h(increased)0 1792 y(b)q(ey)o(ond)173
1773 y Fr(\003)200 1777 y Fn(2)p 173 1781 V 186 1810
a Fr(2)238 1792 y FB(and)i Ft(\033)360 1799 y Fr(3)396
1792 y FB(mo)o(v)o(es)e(o\013)i(to)f(the)h(righ)o(t,)e(all)h(curv)o(es)
g(\(except)f Fs(C)1297 1772 y Fm(\000)1294 1807 y Fr(0)1329
1792 y FB(\))h(remain)f(\\attac)o(hed")i(to)g(the)f(real)0
1855 y(axis)k(\\at)g(the)g(left")f(at)h(p)q(oin)o(ts)h
Ft(\033)627 1862 y Fr(1)648 1855 y Ft(;)26 b(x)716 1862
y Fr(2)p Fu(n)779 1855 y FB(\(that,)20 b(of)f(course,)g(do)g(mo)o(v)o
(e)e(as)i Ft(m)g FB(is)f(v)m(aried\),)h(while)f(at)h(their)0
1917 y(righ)o(t)d(some)e(curv)o(es)h(remain)f(attac)o(hed)i(at)h
Ft(\033)837 1924 y Fr(2)873 1917 y FB(while)e(others)i(are)f(attac)o
(hed)f(at)i Ft(\033)1514 1924 y Fr(3)1535 1917 y FB(.)k(It)15
b(turns)h(out)h(that)f(all)0 1979 y(curv)o(es)h Fs(C)180
1959 y Fr(+)177 1994 y(2)p Fu(n)222 1979 y Ft(;)f(n)g
Fs(2)h Fo(Z)h FB(are)g(attac)o(hed)g(to)g Ft(\033)772
1986 y Fr(2)793 1979 y FB(,)g(and)h(all)e(curv)o(es)g
Fs(C)1171 1959 y Fm(\000)1168 1994 y Fr(2)p Fu(n)1231
1979 y FB(with)g Ft(n)g(<)g FB(0)h(for)g Ft(\017)e(>)h
FB(0)h(and)h Ft(n)d(>)h FB(0)h(for)0 2042 y Ft(\017)c(<)g
FB(0)j(are)g(attac)o(hed)g(to)g Ft(\033)497 2049 y Fr(3)518
2042 y FB(.)22 b(But)16 b(there)g(app)q(ears)i(also)f(a)g(new)g(family)
d(of)j(relev)m(an)o(t)e(curv)o(es,)h(attac)o(hed)g(to)0
2104 y Ft(\033)28 2111 y Fr(2)63 2104 y FB(and)f Ft(\033)184
2111 y Fr(3)205 2104 y FB(:)21 b(these)14 b(are)g(the)h(curv)o(es)e
Fs(C)701 2083 y Fm(\000)698 2119 y Fr(2)p Fu(n)757 2104
y FB(with)i Ft(n)e Fs(\025)h FB(0)h(for)g Ft(\017)e(>)h
FB(0)h(and)g Ft(n)f Fs(\024)f FB(0)i(for)g Ft(\017)e(<)h
FB(0.)21 b(All)13 b(this)i(is)f(sho)o(wn)0 2166 y(in)k(Fig.)26
b(13.)i(The)18 b(only)g(states)g(existing)f(inside)h(the)f
Fs(C)1047 2146 y Fr(+)1044 2181 y(0)1098 2166 y FB(curv)o(e)f(are)j
(the)e(three)h(dy)o(ons)g(\()p Ft(\017;)8 b FB(1\))1769
2173 y Fu(\017)1787 2166 y FB(,)18 b(\()p Fs(\000)p Ft(\017;)8
b FB(1\))1962 2173 y Fu(\017)1979 2166 y FB(,)0 2228
y(\()p Fs(\000)p Ft(\017;)g FB(1\))143 2235 y Fm(\000)p
Fu(\017)209 2228 y FB(as)20 b(w)o(ell)d(as)j(the)f(quark)f(\(1)p
Ft(;)8 b FB(0\))771 2235 y Fr(1)812 2228 y FB(and)20
b(the)f(monop)q(ole)f(\(0)p Ft(;)8 b FB(1\))1328 2235
y Fr(0)1350 2228 y FB(.)29 b(The)19 b(dy)o(on)g(\()p
Fs(\000)p Ft(\017;)8 b FB(1\))1761 2235 y Fm(\000)p Fu(\017)1827
2228 y FB(and)20 b(the)0 2291 y(monop)q(ole)d(\(0)p Ft(;)8
b FB(1\))330 2298 y Fr(0)370 2291 y FB(ho)o(w)o(ev)o(er)16
b(deca)o(y)h(on)h(the)f(curv)o(e)g Fs(C)1010 2270 y Fm(\000)1007
2306 y Fr(0)1060 2291 y FB(b)q(et)o(w)o(een)f Ft(\033)1277
2298 y Fr(2)1316 2291 y FB(and)i Ft(\033)1440 2298 y
Fr(3)1461 2291 y FB(.)26 b(So,)18 b(as)g(alw)o(a)o(ys,)f(the)h(only)0
2353 y(BPS)c(states)h(that)g(exist)f(ev)o(erywhere)e(are)i(the)h(three)
e(states)i(that)g(are)g(resp)q(onsible)f(for)h(the)f(singularities,)0
2415 y(namely)g(the)i(t)o(w)o(o)g(dy)o(ons)h(\()p Fs(\006)p
Ft(\017;)8 b FB(1\))627 2422 y Fu(\017)660 2415 y FB(and)17
b(the)f(quark)g(\(1)p Ft(;)8 b FB(0\))1085 2422 y Fr(1)1107
2415 y FB(.)83 2497 y(Note)18 b(that,)i(as)f Ft(m)e Fs(!)h(1)p
FB(,)h(the)f(sp)q(ecial)g(dy)o(ons)h(\()p Fs(\000)p Ft(\017;)8
b FB(1\))1130 2504 y Fu(\017)1166 2497 y FB(and)19 b(\()p
Ft(\017;)8 b FB(1\))1367 2504 y Fu(\017)1404 2497 y FB(ha)o(v)o(e)17
b(\014nite)i(masses)f(as)h(do)g(all)0 2559 y(dy)o(ons)e(\(2)p
Ft(n)11 b FB(+)g(1)p Ft(;)d FB(1\))360 2566 y Fu(\017)395
2559 y FB(as)17 b(w)o(ell)e(as)i(the)f(W-b)q(oson.)24
b(These)16 b(states)h(th)o(us)g(surviv)o(e)e(the)h(R)o(G)g(\015o)o(w)h
(to)g(the)f(pure)0 2621 y(gauge)g(theory)l(.)21 b(These)15
b(surviving)g(states)h(all)e(deca)o(y)h(on)h(one)f(and)h(the)f(same)f
(curv)o(e,)g Fs(C)1620 2603 y Fm(1)1676 2621 y FB(whic)o(h)h(one)g(ma)o
(y)0 2683 y(consider)g(as)h(\014xed)f(under)h(the)f(\015o)o(w)h
(\(except)e(for)h(\()p Fs(\000)p Ft(\017;)8 b FB(1\))1074
2690 y Fu(\017)1107 2683 y FB(and)16 b(\()p Ft(\017;)8
b FB(1\))1305 2690 y Fu(\017)1323 2683 y FB(,)15 b(of)g(course\).)21
b(After)15 b(transforming)0 2746 y(to)g(the)g(natural)h(quan)o(tum)e(n)
o(um)o(b)q(ers)f(\()r(~)-26 b Ft(n)759 2753 y Fu(e)779
2746 y Ft(;)8 b(n)830 2753 y Fu(m)866 2746 y FB(\))886
2754 y Fr(~)-20 b Fu(s)920 2746 y FB(of)15 b(the)g(pure)g(gauge)h
(theory)l(,)f(see)f(eq.)21 b(\(4.6\),)15 b(w)o(e)f(see)h(that)976
2883 y Fp(31)p eop
%%Page: 33 33
33 32 bop 110 2291 a @beginspecial 0 @llx 0 @lly 839
@urx 1029 @ury 4252 @rwi @setspecial
%%BeginDocument: rgf19.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 1032.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Ellipse
n 14403 8305 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 950.20 543.67]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7203 8305 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 470.20 543.67]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 9603 8305 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 630.20 543.67]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1203 8305 m 9603 8305 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1203 8305 m 14403 8305 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 270.00 scalefont setfont
10351 6128 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10576 5978 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10501 6278 m
gs 1 -1 sc ( 0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11326 5903 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11851 6053 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12526 6053 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13201 6278 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10651 9128 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10876 8978 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10801 9278 m
gs 1 -1 sc (-4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11401 9203 m
gs 1 -1 sc (\(-4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12076 9353 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8026 6878 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8551 7028 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8101 7253 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8626 7403 m
gs 1 -1 sc (-1) col-1 show gr
30.000 slw
% Arc
n 9600.00 9511.38 4950.01 -14.14 -165.86 arc
gs col-1 s gr

% Arc
n 8400.00 10227.00 6301.24 -17.79 -162.21 arc
gs col-1 s gr

% Arc
n 9600.00 7092.62 4950.01 14.14 165.86 arcn
gs col-1 s gr

% Arc
n 8400.00 6377.00 6301.24 17.79 162.21 arcn
gs col-1 s gr

% Arc
n 10800.00 9129.34 3693.85 -12.94 -167.06 arc
gs col-1 s gr

% Arc
n 10800.00 7474.66 3693.85 12.94 167.06 arcn
gs col-1 s gr

% Ellipse
n 8400 8302 1200 1800 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 12000 8302 2400 2100 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 12000 8302 2400 1200 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 12000 8302 2400 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 7200 8302 2400 3000 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6000 8302 3600 4200 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8383 8324 1200 900 0 360 DrawEllipse gs col-1 s gr

/Times-Roman findfont 720.00 scalefont setfont
12000 7852 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
12000 8002 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
12000 8152 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
12000 8452 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
12000 8602 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
12000 8752 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12900 1702 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13125 1552 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13050 1852 m
gs 1 -1 sc (-6) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13500 2302 m
gs 1 -1 sc (\(-6,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14175 2452 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14100 2902 m
gs 1 -1 sc (\(-7,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14775 3052 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9900 1927 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10125 1777 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10050 2077 m
gs 1 -1 sc (-4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10800 2152 m
gs 1 -1 sc (\(-4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11475 2302 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11850 2527 m
gs 1 -1 sc (\(-5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12525 2752 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9600 3652 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9825 3502 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9750 3802 m
gs 1 -1 sc (-2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10500 3577 m
gs 1 -1 sc (\(-2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11175 3727 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11700 3727 m
gs 1 -1 sc (\(-3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12375 3952 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10800 6952 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11025 6802 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10950 7102 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11475 6877 m
gs 1 -1 sc (\(2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12000 7027 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12450 6952 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12975 7102 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10875 7552 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11100 7402 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11025 7702 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11475 7477 m
gs 1 -1 sc (\(4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12000 7627 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12450 7552 m
gs 1 -1 sc (\(3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12975 7702 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10800 9802 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11025 9652 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10950 9952 m
gs 1 -1 sc (-2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11475 9802 m
gs 1 -1 sc (\(-2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12150 9952 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12450 9802 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10575 10552 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10800 10402 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10725 10702 m
gs 1 -1 sc ( 0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11325 10777 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11850 10927 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12300 10777 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12825 10927 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13125 9952 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12451 9128 m
gs 1 -1 sc (\(-3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13126 9278 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9600 13177 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9825 13027 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9825 13327 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10350 13177 m
gs 1 -1 sc (\(2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10875 13327 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11325 13177 m
gs 1 -1 sc (\(3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11850 13327 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 7402 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7725 7477 m
gs 1 -1 sc ( 0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7725 7177 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 9502 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7725 9277 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7800 9652 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8250 9502 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8775 9652 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8025 9877 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8700 10027 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8100 6427 m
gs 1 -1 sc (text) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7425 10402 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7575 10177 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7950 10477 m
gs 1 -1 sc (see) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7950 10777 m
gs 1 -1 sc (text) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8100 6127 m
gs 1 -1 sc (see) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4875 6202 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 6052 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5400 5452 m
gs 1 -1 sc (\(2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5925 5602 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6825 5227 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6300 5077 m
gs 1 -1 sc (\(3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 10852 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5325 10702 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5700 11377 m
gs 1 -1 sc (\(-2,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6375 11602 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6750 11677 m
gs 1 -1 sc (\(-3,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7425 11827 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2550 5602 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2775 5377 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3075 4777 m
gs 1 -1 sc (\(4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3600 4927 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3900 4102 m
gs 1 -1 sc (\(5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4425 4252 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2475 11002 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2700 10852 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2850 11677 m
gs 1 -1 sc (\(-4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3525 11902 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
3900 12427 m
gs 1 -1 sc (\(-5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4575 12652 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7200 14902 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7425 14752 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7425 15052 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8100 14902 m
gs 1 -1 sc (\(4,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9300 14902 m
gs 1 -1 sc (\(5,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
9825 15127 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8625 15127 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 16402 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5325 16627 m
gs 1 -1 sc (6) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5325 16252 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6300 16927 m
gs 1 -1 sc (\(6,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
6825 17152 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7500 17002 m
gs 1 -1 sc (\(7,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8025 17152 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7350 6802 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
7500 6577 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2550 8025 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2700 8175 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
4950 8025 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5100 8175 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2700 5752 m
gs 1 -1 sc (4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5025 6352 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
2625 11227 m
gs 1 -1 sc ( -4) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
5250 11002 m
gs 1 -1 sc ( -2) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2405 a Fo(Fig.)26 b(13:)c FB(Sho)o(wn)17
b(are)g(a)g(sk)o(etc)o(h)e(of)i(the)g(relativ)o(e)e(p)q(ositions)i(of)g
(the)g(relev)m(an)o(t)e(deca)o(y)h(curv)o(es)118 2465
y(for)j Ft(m)e(>)316 2445 y Fr(\003)343 2449 y Fn(2)p
316 2453 44 2 v 328 2482 a Fr(2)383 2465 y FB(as)j(w)o(ell)d(as)i(the)f
(BPS)h(states)g(that)g(deca)o(y)e(across)j(these)e(curv)o(es)g(\(for)g
(not)h(to)q(o)118 2524 y(large)13 b Fs(j)p Ft(n)277 2531
y Fu(e)297 2524 y Fs(j)p FB(\).)20 b(The)12 b(BPS)h(states)g(that)g
(deca)o(y)f(across)i Fs(C)1107 2506 y Fm(1)1160 2524
y FB(in)f(the)f(upp)q(er)h(half)g(plane)g(are)g(the)f(W-)118
2578 y(b)q(oson)18 b(\(2)p Ft(;)8 b FB(0\))366 2585 y
Fr(0)403 2578 y FB(as)17 b(w)o(ell)e(as)h(all)g(dy)o(ons)g(\(2)p
Ft(n)11 b FB(+)f(1)p Ft(;)e FB(1\))1047 2585 y Fr(1)1069
2578 y Ft(;)24 b(n)14 b Fs(6)p FB(=)g Fs(\000)p FB(1)p
Ft(;)8 b FB(0,)16 b(while)f(the)h(states)g(deca)o(ying)118
2633 y(across)g Fs(C)290 2615 y Fm(1)345 2633 y FB(in)e(the)h(lo)o(w)o
(er)f(half)g(plane)h(are)g(again)g(the)g(W-b)q(oson)h(\(2)p
Ft(;)8 b FB(0\))1435 2640 y Fr(0)1472 2633 y FB(as)15
b(w)o(ell)f(as)h(all)f(dy)o(ons)118 2693 y(\(2)p Ft(n)h
FB(+)g(1)p Ft(;)8 b FB(1\))347 2700 y Fm(\000)p Fr(1)399
2693 y Ft(;)30 b(n)23 b Fs(6)p FB(=)h Fs(\000)p FB(1)p
Ft(;)8 b FB(0.)38 b(The)22 b(only)g(states)g(existing)f(inside)g(the)h
Fs(C)1530 2672 y Fr(+)1527 2708 y(0)1584 2693 y FB(curv)o(e)f(are)h
(the)118 2750 y(three)14 b(dy)o(ons)g(\()p Ft(\017;)8
b FB(1\))481 2757 y Fu(\017)499 2750 y FB(,)14 b(\()p
Fs(\000)p Ft(\017;)8 b FB(1\))670 2757 y Fu(\017)687
2750 y FB(,)14 b(\()p Fs(\000)p Ft(\017;)8 b FB(1\))858
2757 y Fm(\000)p Fu(\017)920 2750 y FB(as)15 b(w)o(ell)e(as)i(the)f
(quark)g(\(1)p Ft(;)8 b FB(0\))1459 2757 y Fr(1)1495
2750 y FB(and)15 b(the)f(monop)q(ole)118 2804 y(\(0)p
Ft(;)8 b FB(1\))226 2811 y Fr(0)248 2804 y FB(.)976 2883
y Fp(32)p eop
%%Page: 34 34
34 33 bop 0 160 a FB(these)17 b(states)g(all)g(ha)o(v)o(e)h(~)-26
b Ft(s)15 b FB(=)g(0)j(and)f(precisely)f(constitute)g(the)h(sp)q
(ectrum)f(of)h(the)g(pure)g(gauge)h(theory)f(as)0 222
y(established)h(in)h([3].)28 b(On)19 b(the)g(other)f(hand,)i(the)f
(states)g(that)g(do)g(not)h(surviv)o(e)d(this)i(\015o)o(w)g(either)f
(simply)0 284 y(disapp)q(ear)f(from)e(the)h(sp)q(ectrum)f(b)q(ecause)i
(their)e(masses)h(div)o(erge,)e(as)j(is)f(the)g(case)g(of)h(the)f
(quarks)g(or)h(the)0 346 y(sp)q(ecial)i(dy)o(ons)h(\()p
Fs(\006)p FB(1)p Ft(;)8 b FB(1\))451 353 y Fm(\000)p
Fu(\017)518 346 y FB(or)20 b(\(0)p Ft(;)8 b FB(1\))689
353 y Fr(0)731 346 y FB(inside)19 b Fs(C)902 328 y Fm(1)942
346 y FB(,)h(or)g(b)q(ecause)g(they)f(are)h(\\hit")g(b)o(y)f(their)g
(deca)o(y)g(curv)o(e)0 408 y(that)14 b(mo)o(v)o(es)e(out)o(w)o(ards)i
(as)h Ft(m)e Fs(!)h(1)p FB(.)20 b(Indeed,)13 b(an)o(y)h(p)q(oin)o(t)g
Ft(u)g FB(whic)o(h)f(for)h(some)e Ft(m)i FB(still)f(is)g(in)h(the)f
(existence)0 470 y(domain)i(of)h(a)h(giv)o(en)e(BPS)g(state)h(will)f(b)
q(e)h(hit)g(b)o(y)f(the)h(corresp)q(onding)h(curv)o(e)d(for)j(large)f
(enough)g Ft(m)p FB(.)21 b(Note)0 532 y(that)f(again,)g(as)h(for)e
Ft(m)g(<)521 512 y Fr(\003)548 516 y Fn(2)p 521 520 44
2 v 534 549 a Fr(2)570 532 y FB(,)h(all)f(BPS)g(states)h(exist)f(at)g
Ft(\033)1140 539 y Fr(3)1181 532 y FB(and)h(in)f(a)h(narrao)o(w)g(w)o
(edge)f(extending)g(to)0 594 y(the)d(righ)o(t)g(of)h(it,)f(in)g
(particular)g(on)h(the)g(real)f(in)o(terv)m(al)f([)p
Ft(\033)1069 601 y Fr(3)1090 594 y Ft(;)8 b Fs(1)p FB(\).)21
b(Of)c(course,)f(this)g(do)q(es)i(not)f(prev)o(en)o(t)e(an)o(y)0
656 y(real)i(p)q(oin)o(t)h Ft(u)f FB(to)h(b)q(e)g(hit)f(b)o(y)h(the)f
(curv)o(es:)23 b(As)17 b Ft(m)f Fs(!)g(1)i FB(w)o(e)f(also)h(ha)o(v)o
(e)f Ft(\033)1382 663 y Fr(3)1419 656 y Fs(!)f(1)i FB(and)g(an)o(y)f(p)
q(oin)o(t)h Ft(u)g FB(will)0 718 y(ev)o(en)o(tually)c(end)i(up)h
(inside)e(the)h(curv)o(es.)83 796 y(No)o(w)21 b(let)g(us)h(brie\015y)e
(commen)o(t)e(on)k(the)f(discrepancy)g(with)g(the)g(published)g(v)o
(ersion)g(of)g([9].)37 b(The)0 858 y(authors)23 b(of)f([9],)g(for)h
Ft(N)451 866 y Fu(f)499 858 y FB(=)g(2)f(with)g(equal)f(bare)h(masses,)
h(consider)e(a)h(real)g(p)q(oin)o(t)g Ft(u)g FB(to)g(the)f
Fv(right)h FB(of)0 920 y(the)17 b(singularit)o(y)e Ft(\033)354
927 y Fr(3)392 920 y FB(and)j(write)e(that)h(a)g(certain)f(dy)o(on)h
(do)q(es)h(no)f(longer)g(exist)f(there)g(for)h(a)g(certain)f(mass)0
982 y Ft(m)e(>)113 962 y Fr(\003)140 966 y Fn(2)p 113
970 V 126 999 a Fr(2)162 982 y FB(.)21 b(In)14 b(the)h(ligh)o(t)f(of)h
(what)g(w)o(e)g(ha)o(v)o(e)f(said)h(so)g(far,)g(it)f(is)h(clear)f(that)
h(this)g(cannot)g(b)q(e)g(true.)21 b(This)15 b(fact)0
1044 y(is)j(ev)o(en)g(more)f(ob)o(vious)i(since,)f(if)g(it)g(w)o(ere)g
(true,)g(w)o(e)h(w)o(ould)f(need)g(to)h(ha)o(v)o(e)f(deca)o(y)g(curv)o
(es)g(crossing)h(the)0 1106 y(real)f Ft(u)h FB(axis)f(to)h(the)g(righ)o
(t)f(of)h Ft(\033)600 1113 y Fr(3)639 1106 y FB(where)g(there)f(are)g
(no)i(cuts)e(-)h(a)g(situation)g(that)g(cannot)g(o)q(ccur)g(as)g(one)0
1168 y(can)f(easily)f(see,)g(also)h(without)h(our)f(detailed)f
(analysis.)25 b(The)18 b(authors)h(of)f([9])f(ha)o(v)o(e)g(c)o(hec)o(k)
o(ed)f(this)h(p)q(oin)o(t)0 1230 y(again,)f(and)h(told)f(us)g(that)g
(they)f(actually)g(agree)h(with)g(our)g(result,)f(the)h(discrepancy)f
(b)q(eing)h(only)f(due)h(to)0 1292 y(some)f(error)h(when)h(writing)f
(up)g(their)g(pap)q(er.)83 1370 y(In)i(the)g(remainder)e(of)j(this)f
(subsection,)g(w)o(e)g(will)f(again)i(discuss)f(the)g(deca)o(y)g(curv)o
(es)f(for)h(eac)o(h)g(t)o(yp)q(e)0 1432 y(of)f(BPS)f(state,)g(th)o(us)g
(pro)o(ving)g(Fig.)21 b(13)c(to)g(b)q(e)f(correct.)0
1521 y(The)g(dy)o(ons)h(\(2)p Ft(n;)8 b FB(1\))376 1528
y Fr(0)p 0 1539 398 2 v 83 1599 a FB(Recall)k(that)h(deca)o(ys)f(can)h
(only)f(happ)q(en)i(on)f(the)g(curv)o(es)e(\(4.8\))j(for)f
Ft(r)i FB(=)e Fs(\006)p FB(1)g(and)h Fs(1)p FB(.)20 b(But)12
b(n)o(umerically)0 1661 y(w)o(e)18 b(\014nd)i(that)f(the)g
Ft(r)392 1670 y Fr(d)434 1661 y FB(=)f Fs(1)h FB(curv)o(e)e(has)j
(disapp)q(eared.)30 b(Actually)l(,)18 b(as)h Ft(m)g FB(approac)o(hes)
1671 1642 y Fr(\003)1698 1646 y Fn(2)p 1671 1650 44 2
v 1684 1678 a Fr(2)1739 1661 y FB(from)f(b)q(elo)o(w,)0
1723 y(one)g(can)g(see)f(ho)o(w)h(this)f(curv)o(e)g(\(whic)o(h)g(go)q
(es)h(through)h Ft(\033)1075 1730 y Fr(3)1096 1723 y
FB(,)e(see)h(Figs.)25 b(8)18 b(to)g(9\))g(shrinks)f(to)h(a)g(p)q(oin)o
(t,)g(and)0 1785 y(its)e(absence)g(at)h Ft(m)c(>)420
1766 y Fr(\003)447 1770 y Fn(2)p 420 1774 V 432 1802
a Fr(2)485 1785 y FB(is)j(p)q(erfectly)f(compatible)f(with)j(a)f(smo)q
(oth)g(R)o(G)h(\015o)o(w)f(as)h Ft(m)f FB(is)g(increased.)83
1863 y(F)l(or)21 b(a)h(generic)e(dy)o(on)h(\(2)p Ft(n;)8
b FB(1\))652 1870 y Fr(0)695 1863 y FB(with)20 b Ft(n)i
Fs(\025)g FB(2)f(one)h(\014nds)f(for)g(the)g Ft(r)1373
1872 y Fr(d)1418 1863 y FB(=)h Fs(\006)p FB(1)f(curv)o(es)g(the)f
(situation)0 1925 y(depicted)g(in)g(Fig.)34 b(14)22 b(on)f(the)g(left.)
33 b(The)21 b Ft(r)854 1934 y Fr(d)899 1925 y FB(=)g(1)g(curv)o(e)f
(\(for)h Ft(\017)g(>)g FB(0)g(and)h Ft(\017)f(<)g FB(0\))g(is)g(the)f
(curv)o(e)g Fs(C)1951 1905 y Fm(\000)1948 1940 y Fr(2)p
Fu(n)0 1987 y FB(while)c(the)h Ft(r)235 1996 y Fr(d)274
1987 y FB(=)e Fs(\000)p FB(1)j(curv)o(e)e(\()p Ft(\017)f(>)g
FB(0\))i(is)g Fs(C)785 1967 y Fr(+)782 2002 y(2)p Fu(n)827
1987 y FB(.)24 b(All)16 b(curv)o(es)g(turn)h(out)h(to)f(b)q(e)h(relev)m
(an)o(t)e(with)h(the)g(follo)o(wing)0 2049 y(kinematically)i(p)q
(ossible)24 b(deca)o(ys:)34 b(\(2)p Ft(n;)8 b FB(1\))822
2056 y Fr(0)869 2049 y Fs(!)25 b FB(\(1)p Ft(;)8 b FB(0\))1052
2056 y Fm(\000)p Fr(1)1119 2049 y FB(+)16 b(\(2)p Ft(n)g
Fs(\000)f FB(1)p Ft(;)8 b FB(1\))1404 2056 y Fr(1)1449
2049 y FB(on)23 b Ft(r)1545 2058 y Fr(d)1594 2049 y FB(=)i
Fs(\000)p FB(1,)g(\(2)p Ft(n;)8 b FB(1\))1896 2056 y
Fr(0)1943 2049 y Fs(!)0 2111 y FB(\()p Fs(\000)p FB(1\))f
Fs(\002)g FB(\(1)p Ft(;)h FB(0\))262 2118 y Fr(1)291
2111 y FB(+)f(\(2)p Ft(n)g FB(+)g(1)p Ft(;)h FB(1\))549
2118 y Fr(1)587 2111 y FB(on)14 b Ft(r)674 2120 y Fr(d)712
2111 y FB(=)f(1)i(for)g Ft(\017)e(>)h FB(0)h(and)g(\(2)p
Ft(n;)8 b FB(1\))1229 2118 y Fr(0)1265 2111 y Fs(!)13
b FB(\(1)p Ft(;)8 b FB(0\))1436 2118 y Fr(1)1465 2111
y FB(+)f(\(2)p Ft(n)g Fs(\000)g FB(1)p Ft(;)h FB(1\))1724
2118 y Fm(\000)p Fr(1)1791 2111 y FB(on)15 b Ft(r)1879
2120 y Fr(d)1916 2111 y FB(=)f(1)0 2173 y(for)i Ft(\017)e(<)g
FB(0.)21 b(T)l(o)c(sho)o(w)f(that)h(\(2)p Ft(n;)8 b FB(1\))654
2180 y Fr(0)692 2173 y FB(cannot)16 b(exist)g(in)f(regions)i
Ft(C)1224 2180 y Fu(n)1249 2173 y Ft(;)24 b(B)1324 2180
y Fu(n)1365 2173 y FB(and)16 b Ft(B)1499 2155 y Fm(0)1496
2186 y Fu(n)1538 2173 y FB(w)o(e)f(use)h(the)g(same)f(t)o(yp)q(e)0
2235 y(of)h(argumen)o(t)e(as)i(b)q(efore.)21 b(The)15
b(mono)q(drom)o(y)f Ft(M)911 2242 y Fr(2)p Fm(\001)p
Fr(3)977 2235 y FB(around)j Ft(\033)1170 2242 y Fr(2)1206
2235 y FB(and)f Ft(\033)1328 2242 y Fr(3)1364 2235 y
FB(is)f(the)g(same)f(as)i(for)g(small)d(mass,)0 2297
y(and)19 b(just)f(as)h(b)q(efore,)g(transp)q(orting)h(the)e(dy)o(on)g
(\(2)p Ft(n;)8 b FB(1\))1047 2304 y Fr(0)1087 2297 y
FB(from)18 b Ft(C)1240 2304 y Fu(n)1283 2297 y FB(to)h
Ft(B)1385 2279 y Fm(0)1382 2310 y Fu(n)1425 2297 y FB(through)h(the)e
(cut)g([)p Ft(\033)1826 2304 y Fr(1)1846 2297 y Ft(;)8
b(\033)1896 2304 y Fr(2)1917 2297 y FB(])18 b(or)0 2359
y(vice)c(v)o(ersa)g(w)o(ould)h(result)g(in)f(states)i(with)e
Fs(j)p Ft(n)842 2366 y Fu(m)878 2359 y Fs(j)g FB(=)g(2)p
Ft(n)h FB(that)h(cannot)f(exist.)20 b(T)l(o)c(pro)o(v)o(e)e(the)g
(non-existence)0 2421 y(of)k(\(2)p Ft(n;)8 b FB(1\))194
2428 y Fr(0)235 2421 y FB(in)17 b Ft(B)330 2428 y Fu(n)356
2421 y FB(,)h(transp)q(ort)h(it)f(to)h Ft(B)758 2403
y Fm(0)755 2434 y Fu(n)798 2421 y FB(where)f(it)g(is)g(describ)q(ed)f
(as)i(\()p Ft(M)1393 2403 y Fm(\003)1388 2435 y Fr(3)1415
2421 y FB(\))1434 2403 y Fm(\000)p Fr(1)1485 2421 y FB(\(2)p
Ft(n;)8 b FB(1\))1622 2428 y Fr(0)1661 2421 y FB(=)17
b(\(2)p Ft(n)c Fs(\000)f FB(2)p Ft(;)c FB(1\))1941 2428
y Fm(\000)p Fr(2)0 2483 y FB(whic)o(h)22 b(has)h Ft(s)h
FB(=)g Fs(\000)p FB(2)e(and)h(cannot)g(exist.)39 b(W)l(e)22
b(conclude)f(that)i(\(2)p Ft(n;)8 b FB(1\))1398 2490
y Fr(0)1442 2483 y FB(only)22 b(exists)g(in)g(regions)h
Ft(A)1968 2490 y Fu(n)0 2545 y FB(outside)17 b(these)g(curv)o(es.)24
b(The)17 b(only)g(di\013erence)f(for)i Ft(n)d FB(=)h(1,)h(i.e.)24
b(for)17 b(the)g(dy)o(on)g(\(2)p Ft(;)8 b FB(1\))1600
2552 y Fr(0)1640 2545 y FB(is)17 b(that)g(the)g(p)q(oin)o(t)0
2607 y Ft(x)28 2614 y Fr(2)p Fu(n)p Fm(\000)p Fr(2)135
2607 y Fs(\021)d Ft(x)216 2614 y Fr(0)253 2607 y FB(coincides)h(with)h
Ft(\033)598 2614 y Fr(1)619 2607 y FB(,)g(but)g(this)h(do)q(es)g(not)f
(c)o(hange)g(the)g(preceeding)g(discussion.)83 2685 y(The)d(dy)o(ons)g
(\(2)p Ft(n;)8 b FB(1\))452 2692 y Fr(0)487 2685 y FB(with)k
Ft(n)i(<)g FB(0)f(are)g(the)g Ft(C)t(P)19 b FB(conjugates)14
b(of)f(the)g(dy)o(ons)g(\()p Fs(\000)p FB(2)p Ft(n;)8
b FB(1\))1655 2692 y Fr(0)1689 2685 y FB(with)13 b Fs(\000)p
FB(2)p Ft(n)h(>)g FB(0,)0 2747 y(and)j(th)o(us)f(exist)g(in)f(the)h
(complex)f(conjugate)h(domains)g Ft(A)1100 2754 y Fu(n)1139
2747 y FB(=)p 1190 2707 92 2 v 13 w Ft(A)1227 2754 y
Fm(\000)p Fu(n)1282 2747 y FB(.)976 2883 y Fp(33)p eop
%%Page: 35 35
35 34 bop -481 790 a @beginspecial 0 @llx 0 @lly 756
@urx 614 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf20.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 736.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
75.000 slw
% Arc
n 7800.00 7687.50 4526.33 -21.89 -158.11 arc
gs col-1 s gr

% Arc
n 9600.00 7237.50 2700.26 -27.28 -152.72 arcn
gs col-1 s gr

% Arc
n 4500.00 4972.50 2888.90 20.83 159.17 arcn
gs col-1 s gr

30.000 slw
% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
1575 6450 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1725 6600 m
gs 1 -1 sc (2n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3075 5625 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3225 5775 m
gs 1 -1 sc (2n-2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6525 2700 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
10200 4425 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11400 11025 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4200 4200 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4425 4350 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 5400 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9525 5550 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7425 9150 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7200 9000 m
gs 1 -1 sc (B') col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
13275 6225 m
gs 1 -1 sc (A) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
13500 6375 m
gs 1 -1 sc (n) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 599 567 a @beginspecial 0 @llx 0 @lly 665
@urx 282 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf21.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 503.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 6000 6000 1200 900 0 360 DrawEllipse gs col-1 s gr

75.000 slw
% Ellipse
n 9600 6000 2400 1800 0 360 DrawEllipse gs col-1 s gr

30.000 slw
% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
5700 4875 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 7425 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 3900 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 8325 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 5100 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 7200 m
gs 1 -1 sc (B') col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 904 a Fo(Fig.)28 b(14:)23 b FB(In)17
b(the)g(left)g(\014gure)g(w)o(e)g(sho)o(w)h(a)f(sk)o(etc)o(h)f(of)i
(the)f(relativ)o(e)e(p)q(ositions)k(of)e(the)g(deca)o(y)118
963 y(curv)o(es)i(of)h(the)f(dy)o(ons)h(\(2)p Ft(n;)8
b FB(1\))696 970 y Fr(0)737 963 y FB(\()p Ft(n)20 b(>)f
FB(1\))h(for)g Ft(m)f(>)1127 944 y Fr(\003)1154 948 y
Fn(2)p 1127 952 44 2 v 1140 980 a Fr(2)1176 963 y FB(.)31
b(All)18 b(curv)o(es)h(sho)o(wn)h(are)g(relev)m(an)o(t.)118
1020 y(The)c(\014gure)g(on)h(the)f(righ)o(t)f(sho)o(ws)i(a)f(sk)o(etc)o
(h)f(of)h(the)g(relativ)o(e)e(p)q(ositions)j(of)f(the)g(deca)o(y)f
(curv)o(es)118 1071 y(of)i(the)f(monop)q(ole)g(\(0)p
Ft(;)8 b FB(1\))587 1078 y Fr(0)608 1071 y FB(.)22 b(The)16
b(thic)o(k)f(curv)o(es)g(are)h(the)g(relev)m(an)o(t)g(ones.)83
1180 y(The)21 b(situation)h(is)e(sligh)o(tly)g(di\013eren)o(t)h(for)g
(the)g(monop)q(ole)g(\(0)p Ft(;)8 b FB(1\))1326 1187
y Fr(0)1347 1180 y FB(,)22 b(as)g(sho)o(wn)g(in)f(Fig.)35
b(14)22 b(on)g(the)0 1242 y(righ)o(t.)f(No)16 b(deca)o(ys)g(are)g(p)q
(ossible)h(on)f(the)g Ft(r)g FB(=)d Fs(\000)p FB(1)k(curv)o(e)e(while)g
(on)i(the)f Ft(r)f FB(=)f(1)j(curv)o(e)e(one)h(has)h(\(0)p
Ft(;)8 b FB(1\))1907 1249 y Fr(0)1943 1242 y Fs(!)0 1304
y FB(\()p Fs(\000)p FB(1\))13 b Fs(\002)f FB(\(1)p Ft(;)c
FB(0\))273 1311 y Fr(1)308 1304 y FB(+)13 b(\(1)p Ft(;)8
b FB(1\))467 1311 y Fr(1)508 1304 y FB(for)19 b Ft(\017)f(>)g
FB(0)h(and)h(\(0)p Ft(;)8 b FB(1\))928 1311 y Fr(0)968
1304 y Fs(!)18 b FB(\(1)p Ft(;)8 b FB(0\))1144 1311 y
Fr(1)1178 1304 y FB(+)13 b(\()p Fs(\000)p FB(1)p Ft(;)8
b FB(1\))1376 1311 y Fm(\000)p Fr(1)1446 1304 y FB(for)20
b Ft(\017)d(<)i FB(0.)29 b(The)19 b(monop)q(ole)0 1367
y(cannot)f(exist)f(in)g Ft(B)j FB(or)e Ft(B)494 1348
y Fm(0)524 1367 y FB(since)e(this)i(w)o(ould)f(lead)h(to)g(\()p
Ft(M)1121 1348 y Fm(\003)1116 1380 y Fr(3)1142 1367 y
FB(\))1161 1348 y Fm(\006)p Fr(1)1212 1367 y FB(\(0)p
Ft(;)8 b FB(1\))1320 1374 y Fr(0)1358 1367 y FB(=)16
b(\()p Fs(\006)p FB(2)p Ft(;)8 b FB(1\))1559 1374 y Fm(\006)p
Fr(2)1628 1367 y FB(on)18 b(the)f(other)h(side)0 1429
y(of)f([)p Ft(\033)98 1436 y Fr(2)118 1429 y Ft(;)8 b(\033)168
1436 y Fr(3)189 1429 y FB(])16 b(whic)o(h,)f(ha)o(ving)h
Fs(j)p Ft(s)p Fs(j)d FB(=)h(2,)i(is)h(excluded.)0 1522
y(The)f(dy)o(ons)h(\(2)p Ft(n)11 b FB(+)g(1)p Ft(;)d
FB(1\))460 1529 y Fr(1)p 0 1540 483 2 v -362 2261 a @beginspecial
0 @llx 0 @lly 706 @urx 343 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf22.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 503.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Arc
n 4950.00 5570.83 2290.56 169.20 10.80 arc
gs col-1 s gr

% Arc
n 4500.00 5454.55 2754.55 168.58 11.42 arc
gs col-1 s gr

% Arc
n 5400.00 5721.43 1821.43 171.20 8.80 arc
gs col-1 s gr

% Arc
n 6000.00 5730.00 1230.00 167.32 12.68 arc
gs col-1 s gr

% Arc
n 6000.00 6350.00 1250.00 -163.74 -16.26 arc
gs col-1 s gr

% Arc
n 6000.00 8250.00 2550.00 -118.07 -61.93 arc
gs col-1 s gr

% Arc
n 9600.00 6700.00 2500.00 -163.74 -16.26 arc
gs col-1 s gr

75.000 slw
% Arc
n 9600.00 5300.00 2500.00 163.74 16.26 arcn
gs col-1 s gr

30.000 slw
% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
1800 3900 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2550 4200 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3525 4500 m
gs 1 -1 sc (-5) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 5025 m
gs 1 -1 sc (5) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6300 5625 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 4050 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 8325 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 5250 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 7050 m
gs 1 -1 sc (B') col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
5400 4800 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
5475 4875 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
5550 4950 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4800 4200 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4950 4350 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
5100 4500 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4650 4950 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
12600 5700 m
gs 1 -1 sc (A) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 2008 w @beginspecial 0 @llx 0 @lly 665 @urx
381 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf23.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 472.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Arc
n 8400.00 5231.25 3681.17 12.05 167.95 arcn
gs col-1 s gr

% Arc
n 6000.00 5500.00 1300.00 157.38 22.62 arc
gs col-1 s gr

% Arc
n 6000.00 6000.00 1200.00 180.00 0.00 arc
gs col-1 s gr

% Arc
n 6000.00 6900.00 1500.00 -143.13 -36.87 arc
gs col-1 s gr

75.000 slw
% Arc
n 6000.00 6000.00 1200.00 180.00 0.00 arcn
gs col-1 s gr

% Arc
n 9600.00 5300.00 2500.00 16.26 163.74 arc
gs col-1 s gr

30.000 slw
% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
11700 3150 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11100 7800 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5700 7650 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6900 4350 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 4800 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 5475 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 4350 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 4500 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 4650 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 4950 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 5100 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
6000 5250 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 6750 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 6750 m
gs 1 -1 sc (C) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 2379 a Fo(Fig.)39 b(15:)30 b FB(Sho)o(wn)22
b(is)e(a)h(sk)o(etc)o(h)e(of)i(the)g(relativ)o(e)e(p)q(ositions,)j(for)
f Ft(m)f(>)1523 2359 y Fr(\003)1550 2363 y Fn(2)p 1523
2368 44 2 v 1535 2396 a Fr(2)1572 2379 y FB(,)h(of)g(the)f(deca)o(y)118
2438 y(curv)o(es)c(of)h(the)g(dy)o(on)g(\(1)p Ft(;)8
b FB(1\))637 2445 y Fr(1)676 2438 y FB(\(left\))15 b(and)j(of)f(the)g
(dy)o(on)g(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1303
2445 y Fr(1)1341 2438 y FB(\(righ)o(t\).)23 b(The)17
b(thic)o(k)e(curv)o(es)118 2490 y(are)h(the)g(relev)m(an)o(t)g(ones.)83
2624 y(First,)i(lo)q(ok)h(at)g(the)f(dy)o(on)g(\(1)p
Ft(;)8 b FB(1\))703 2631 y Fr(1)743 2624 y FB(for)19
b(whic)o(h)f(the)g(curv)o(es)f(are)h(as)h(sho)o(wn)h(in)e(the)g(left)f
(Fig.)28 b(15.)g(All)0 2686 y(curv)o(es)19 b(go)h(through)g
Ft(\033)436 2693 y Fr(2)477 2686 y FB(where)f(this)g(dy)o(on)h(is)f
(massless)g(when)h(approac)o(hed)g(from)e Ft(\017)h(>)g
FB(0,)i(and)f(w)o(e)f(see)0 2749 y(that)f(it)e(m)o(ust)g(exist)h(in)f
(the)h(whole)g(upp)q(er)h(half)f(plane.)24 b(It)17 b(cannot)h(exist)e
(in)h(region)g Ft(B)1642 2730 y Fm(0)1671 2749 y FB(since)g(otherwise)
976 2883 y Fp(34)p eop
%%Page: 36 36
36 35 bop 0 160 a FB(this)16 b(w)o(ould)g(imply)d(the)j(existence)e(of)
j Ft(M)772 142 y Fm(\003)767 174 y Fr(3)793 160 y FB(\(1)p
Ft(;)8 b FB(1\))901 167 y Fr(1)937 160 y FB(=)14 b(\(3)p
Ft(;)8 b FB(1\))1097 167 y Fr(3)1135 160 y FB(ab)q(o)o(v)o(e)16
b(the)f(cut.)21 b(Note)16 b(that)g(con)o(v)o(ersely)l(,)e(the)0
222 y(existence)g(of)h(\(1)p Ft(;)8 b FB(1\))369 229
y Fr(1)406 222 y FB(in)15 b Ft(B)j FB(only)d(implies)e(the)i(existence)
f(of)h(\()p Ft(M)1203 204 y Fm(\003)1198 236 y Fr(3)1225
222 y FB(\))1244 204 y Fm(\000)p Fr(1)1295 222 y FB(\(1)p
Ft(;)8 b FB(1\))1403 229 y Fr(1)1439 222 y FB(=)14 b(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1638 229 y Fm(\000)p
Fr(1)1704 222 y FB(b)q(elo)o(w)16 b(the)f(cut)0 284 y(whic)o(h)g(is)h
(p)q(erfectly)e(consisten)o(t)i(\(see)f(Fig)h(13\).)22
b(The)16 b(deca)o(y)f(across)i(the)e Ft(r)1386 292 y
Fr(d)1423 284 y FB(=)f(1)i(curv)o(e)f(for)h Ft(\017)e(<)g
FB(0)i(\()p Fs(C)1893 263 y Fm(\000)1890 298 y Fr(0)1925
284 y FB(\))g(is)0 346 y(\(1)p Ft(;)8 b FB(1\))108 353
y Fr(1)147 346 y Fs(!)16 b FB(2)d Fs(\002)f FB(\(1)p
Ft(;)c FB(0\))409 353 y Fr(1)443 346 y FB(+)k(\()p Fs(\000)p
FB(1)p Ft(;)c FB(1\))640 353 y Fm(\000)p Fr(1)709 346
y FB(in)o(to)18 b(\014nal)g(states)h(that)f(are)g(massless)f(in)h(the)f
(lo)o(w)o(er)g(half)h(plane)g(at)0 408 y Ft(\033)28 415
y Fr(3)65 408 y FB(and)f Ft(\033)188 415 y Fr(2)209 408
y FB(.)83 485 y(Next,)d(consider)h(the)h(dy)o(on)f(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))753 492 y Fr(1)790 485
y FB(with)15 b(curv)o(es)g(sho)o(wn)h(in)f(the)g(righ)o(t)h(Fig.)k(15.)
i(All)14 b(curv)o(es)h(in)g(the)0 547 y(upp)q(er)h(half)f(plane)h(go)g
(through)h Ft(\033)640 554 y Fr(1)676 547 y FB(where)e(this)h(dy)o(on)f
(is)g(massless.)21 b(Hence)14 b(it)h(exists)g(ev)o(erywhere)f(in)h(the)
0 609 y(upp)q(er)i(half)g(plane.)22 b(It)16 b(cannot)h(exist)f(in)h
Ft(B)i FB(or)e(in)f Ft(C)k FB(since)c Ft(M)1174 591 y
Fm(\003)1169 623 y Fr(2)p Fm(\001)p Fr(3)1220 609 y FB(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1367 616 y Fr(1)1404
609 y FB(=)14 b(\(1)p Ft(;)8 b FB(1\))1564 616 y Fr(3)1603
609 y FB(and)17 b Ft(M)1750 591 y Fm(\003)1745 623 y
Fr(3)1771 609 y FB(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1918
616 y Fr(1)1955 609 y FB(=)0 671 y(\(1)p Ft(;)g FB(1\))108
678 y Fr(3)130 671 y FB(.)21 b(The)15 b(deca)o(ys)g(in)g(the)f(lo)o(w)o
(er)h(half)g(plane)g(are)g(\()p Fs(\000)p FB(1)p Ft(;)8
b FB(1\))1134 678 y Fr(1)1170 671 y Fs(!)13 b FB(\()p
Fs(\000)p FB(1\))c Fs(\002)g FB(\(1)p Ft(;)f FB(0\))1499
678 y Fm(\000)p Fr(1)1560 671 y FB(+)h(\(0)p Ft(;)f FB(1\))1715
678 y Fr(0)1752 671 y FB(on)15 b Ft(r)1840 680 y Fr(d)1878
671 y FB(=)e Fs(\000)p FB(1)0 733 y(\()p Fs(C)48 713
y Fr(+)45 748 y(0)80 733 y FB(\))j(and)h(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))357 740 y Fr(1)393 733 y Fs(!)13
b FB(2)f Fs(\002)e FB(\(1)p Ft(;)e FB(0\))649 740 y Fr(1)682
733 y FB(+)j(\()p Fs(\000)p FB(3)p Ft(;)d FB(1\))878
740 y Fm(\000)p Fr(1)946 733 y FB(on)17 b Ft(r)1036 742
y Fr(d)1073 733 y FB(=)d(1)i(\()p Fs(C)1213 713 y Fm(\000)1210
748 y(\000)p Fr(2)1262 733 y FB(\).)102 1444 y @beginspecial
0 @llx 0 @lly 752 @urx 577 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf24.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 736.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
75.000 slw
% Arc
n 6000.00 6000.00 1200.00 180.00 0.00 arc
gs col-1 s gr

% Arc
n 7800.00 7687.50 4526.33 -21.89 -158.11 arc
gs col-1 s gr

30.000 slw
% Arc
n 9600.00 7800.00 3000.00 -143.13 -36.87 arc
gs col-1 s gr

% Arc
n 4950.00 5854.69 2254.69 3.70 176.30 arcn
gs col-1 s gr

% Arc
n 4500.00 5440.91 2757.28 11.70 168.30 arcn
gs col-1 s gr

% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
2250 3300 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4050 3525 m
gs 1 -1 sc (-3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5775 4650 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
10350 4800 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11700 10650 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 5550 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 8700 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7725 8850 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6225 5700 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
13200 6150 m
gs 1 -1 sc (A) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
13425 6300 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4500 4200 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4650 4350 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4800 4500 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3150 5700 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3375 5850 m
gs 1 -1 sc (2n-2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1650 6450 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1875 6600 m
gs 1 -1 sc (2n) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 961 w @beginspecial 0 @llx 0 @lly 668 @urx
519 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf25.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-63.0 508.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 360.00 scalefont setfont
1051 5626 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1201 5776 m
gs 1 -1 sc (-2n-2) col-1 show gr
75.000 slw
% Arc
n 9600.00 4200.00 3000.00 36.87 143.13 arc
gs col-1 s gr

% Arc
n 6000.00 6000.00 1200.00 0.00 180.00 arcn
gs col-1 s gr

% Arc
n 4800.00 6000.00 2400.00 0.00 180.00 arc
gs col-1 s gr

30.000 slw
% Arc
n 7200.00 4790.62 4950.01 14.14 165.86 arcn
gs col-1 s gr

% Arc
n 5400.00 4912.50 2103.01 31.14 148.86 arcn
gs col-1 s gr

% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
11550 2100 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
10500 7500 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3000 8400 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7125 3450 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6450 4725 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9825 6750 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 5550 m
gs 1 -1 sc (B) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6225 5700 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4800 3900 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
4950 4050 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 720.00 scalefont setfont
5100 4200 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4500 7275 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4725 7425 m
gs 1 -1 sc (n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9600 6600 m
gs 1 -1 sc (D) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1562 a Fo(Fig.)39 b(16:)30 b FB(Sho)o(wn)22
b(is)e(a)h(sk)o(etc)o(h,)f(for)h Ft(m)g(>)987 1543 y
Fr(\003)1014 1547 y Fn(2)p 987 1551 44 2 v 999 1580 a
Fr(2)1036 1562 y FB(,)g(of)g(the)g(relativ)o(e)d(p)q(ositions)k(of)f
(the)f(deca)o(y)118 1622 y(curv)o(es)e(of)g(a)h(generic)e(dy)o(on)i
(\(2)p Ft(n)13 b FB(+)f(1)p Ft(;)c FB(1\))883 1629 y
Fr(1)923 1622 y FB(with)19 b Ft(n)e Fs(\025)g FB(1)i(in)f(the)g(left)g
(\014gure)h(and)f Ft(n)g Fs(\024)f(\000)p FB(2)i(in)118
1673 y(the)c(righ)o(t)f(\014gure.)21 b(W)l(e)15 b(ha)o(v)o(e)f(not)i
(sho)o(wn)f(the)g(curv)o(es)f(inside)g(the)h Ft(r)g FB(=)f
Fs(1)h FB(curv)o(es.)20 b(The)15 b(thic)o(k)118 1722
y(curv)o(es)g(are)i(the)f(relev)m(an)o(t)f(ones.)83 1846
y(No)o(w,)f(for)f(a)h(generic)f(dy)o(on)g(\(2)p Ft(n)6
b FB(+)g(1)p Ft(;)i FB(1\))805 1853 y Fr(1)841 1846 y
FB(with)13 b Ft(n)h Fs(\025)f FB(1)h(one)g(has)g(the)g(situation)g(of)f
(the)h(left)e(Fig.)21 b(16.)g(Of)0 1908 y(course,)15
b(for)g Ft(n)f FB(=)g(1,)h(i.e.)20 b(for)15 b(the)g(dy)o(on)g(\(3)p
Ft(;)8 b FB(1\))849 1915 y Fr(1)871 1908 y FB(,)15 b(the)g
Ft(r)g FB(=)f(1)h(curv)o(e)f(for)i Ft(\017)d(<)h FB(0)i(starts)g(at)f
Ft(x)1660 1915 y Fr(0)1695 1908 y Fs(\021)e Ft(\033)1775
1915 y Fr(1)1796 1908 y FB(,)i(but)h(this)0 1970 y(mak)o(es)e(not)j(m)o
(uc)o(h)d(di\013erence.)20 b(Deca)o(ys)15 b(are)h(only)g(p)q(ossible)g
(on)h(the)e Ft(r)h FB(=)d Fs(1)j FB(curv)o(e)f(and)i(the)e
Ft(r)h FB(=)d(1)k(curv)o(e)0 2032 y(for)e Ft(\017)e(<)h
FB(0.)21 b(By)14 b(the)g(same)g(argumen)o(ts)g(as)h(ab)q(o)o(v)o(e)f
(it)g(is)h(clear)f(\(for)h Ft(n)e Fs(\025)h FB(1\))h(that)g(\(2)p
Ft(n)8 b FB(+)g(1)p Ft(;)g FB(1\))1699 2039 y Fr(1)1735
2032 y FB(cannot)15 b(exist)0 2094 y(in)h(regions)g Ft(B)259
2101 y Fu(n)300 2094 y FB(or)g Ft(C)394 2101 y Fu(n)419
2094 y FB(.)22 b(The)15 b(deca)o(ys)h(are)g(\(2)p Ft(n)11
b FB(+)f(1)p Ft(;)e FB(1\))1010 2101 y Fr(1)1046 2094
y Fs(!)13 b FB(\()p Ft(n)e FB(+)f(1\))h Fs(\002)f FB(\(1)p
Ft(;)e FB(1\))1427 2101 y Fr(1)1459 2094 y FB(+)j(\()p
Fs(\000)p Ft(n)p FB(\))f Fs(\002)g FB(\()p Fs(\000)p
FB(1)p Ft(;)e FB(1\))1820 2101 y Fr(1)1857 2094 y FB(on)17
b(the)0 2156 y Ft(r)e FB(=)f Fs(1)g FB(curv)o(e)f(whic)o(h)h(is)g
Fs(C)495 2138 y Fm(1)550 2156 y FB(in)g(the)g(upp)q(er)h(half)f(plane,)
g(and)h(\(2)p Ft(n)7 b FB(+)g(1)p Ft(;)h FB(1\))1367
2163 y Fr(1)1403 2156 y Fs(!)14 b FB(2)7 b Fs(\002)g
FB(\(1)p Ft(;)h FB(0\))1652 2163 y Fr(1)1681 2156 y FB(+)f(\(2)p
Ft(n)g Fs(\000)g FB(1)p Ft(;)h FB(1\))1940 2163 y Fm(\000)p
Fr(1)0 2218 y FB(on)17 b(the)f Ft(r)f FB(=)f(1)i(curv)o(e)f(whic)o(h)h
(is)g Fs(C)629 2197 y Fm(\000)626 2233 y Fr(2)p Fu(n)687
2218 y FB(in)g(the)g(lo)o(w)o(er)f(half)h(plane.)83 2296
y(Next,)h(for)i(the)f(dy)o(ons)h(\(2)p Ft(n)13 b FB(+)f(1)p
Ft(;)c FB(1\))746 2303 y Fr(1)786 2296 y FB(with)19 b
Ft(n)e Fs(\024)g(\000)p FB(2,)i(w)o(e)f(ha)o(v)o(e)g(the)g(situation)g
(of)h(the)f(righ)o(t)g(Fig)g(16.)0 2358 y(The)d(kinematically)d(p)q
(ossible)k(deca)o(ys)f(are:)21 b(\(2)p Ft(n)9 b FB(+)h(1)p
Ft(;)e FB(1\))1054 2365 y Fr(1)1089 2358 y Fs(!)14 b
FB(2)c Fs(\002)f FB(\(1)p Ft(;)f FB(0\))1343 2365 y Fr(1)1374
2358 y FB(+)h(\(2)p Ft(n)h Fs(\000)f FB(1)p Ft(;)f FB(1\))1640
2365 y Fm(\000)p Fr(1)1707 2358 y FB(on)16 b(the)f Ft(r)1879
2367 y Fr(d)1916 2358 y FB(=)f(1)0 2420 y(curv)o(e)h(for)i
Ft(\017)c(<)h FB(0)j(\()p Fs(C)379 2399 y Fm(\000)376
2435 y Fr(2)p Fu(n)420 2420 y FB(\),)f(\(2)p Ft(n)c FB(+)f(1)p
Ft(;)d FB(1\))691 2427 y Fr(1)727 2420 y Fs(!)13 b FB(\()p
Fs(\000)p FB(2\))e Fs(\002)g FB(\(1)p Ft(;)d FB(0\))1060
2427 y Fm(\000)p Fr(1)1123 2420 y FB(+)j(\(2)p Ft(n)h
FB(+)f(3)p Ft(;)d FB(1\))1394 2427 y Fm(\000)p Fr(1)1462
2420 y FB(on)17 b(the)f Ft(r)1636 2429 y Fr(d)1673 2420
y FB(=)e Fs(\000)p FB(1)i(curv)o(e)f(for)0 2482 y Ft(\017)j(<)h
FB(0)g(\()p Fs(C)186 2461 y Fr(+)183 2497 y(2)p Fu(n)p
Fr(+2)277 2482 y FB(\),)g(and)h(\(2)p Ft(n)13 b FB(+)g(1)p
Ft(;)8 b FB(1\))652 2489 y Fr(1)692 2482 y Fs(!)19 b
FB(\()p Fs(\000)p Ft(n)p FB(\))12 b Fs(\002)h FB(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1078 2489 y Fr(1)1113
2482 y FB(+)k(\()p Ft(n)i FB(+)e(1\))i Fs(\002)e FB(\(1)p
Ft(;)c FB(1\))1491 2489 y Fr(1)1532 2482 y FB(on)20 b(the)f
Ft(r)1712 2491 y Fr(d)1753 2482 y FB(=)g Fs(1)g FB(curv)o(e)0
2547 y(for)f Ft(\017)f(>)f FB(0)i(\()p Fs(C)257 2529
y Fm(1)298 2547 y FB(\).)26 b(By)17 b(the)h(\()p Ft(M)592
2529 y Fm(\003)587 2561 y Fr(2)p Fm(\001)p Fr(3)638 2547
y FB(\))657 2529 y Fm(\006)p Fr(1)726 2547 y FB(and)h
Ft(M)875 2529 y Fm(\003)870 2561 y Fr(3)915 2547 y FB(argumen)o(ts)e
(one)h(sees)f(that)i(\(2)p Ft(n)12 b FB(+)h(1)p Ft(;)8
b FB(1\))1676 2554 y Fr(1)1715 2547 y FB(with)18 b Ft(n)f
Fs(\024)f(\000)p FB(2)0 2609 y(cannot)h(exist)e(in)h(regions)h
Ft(B)535 2616 y Fu(n)560 2609 y Ft(;)24 b(C)633 2616
y Fu(n)675 2609 y FB(and)16 b Ft(D)809 2616 y Fu(n)835
2609 y FB(.)83 2687 y(The)e(dy)o(ons)g(\(2)p Ft(n)7 b
FB(+)g(1)p Ft(;)h FB(1\))530 2694 y Fm(\000)p Fr(1)596
2687 y FB(exist)13 b(in)h(the)g(complex)e(conjugate)j(domains)e(of)i
(where)e(the)h(\()p Fs(\000)p FB(2)p Ft(n)7 b Fs(\000)g
FB(1)p Ft(;)h FB(1\))1971 2694 y Fr(1)0 2749 y FB(exist.)20
b(All)15 b(this)h(is)g(sho)o(wn)h(in)f(Fig.)21 b(13.)976
2883 y Fp(35)p eop
%%Page: 37 37
37 36 bop 0 160 a FB(The)16 b(quarks)h(\(1)p Ft(;)8 b
FB(0\))366 167 y Fm(\006)p Fr(1)p 0 178 418 2 v -422
1128 a @beginspecial 0 @llx 0 @lly 676 @urx 842 @ury
1700 @rwi @setspecial
%%BeginDocument: rgf26.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 781.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Arc
n 8400.00 4940.62 3752.64 16.40 163.60 arcn
gs col-1 s gr

% Arc
n 8400.00 7059.38 3752.64 -16.40 -163.60 arc
gs col-1 s gr

% Arc
n 7200.00 4162.50 5139.69 20.95 159.05 arcn
gs col-1 s gr

% Arc
n 7200.00 7837.50 5139.69 -20.95 -159.05 arc
gs col-1 s gr

% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 9600 6000 2400 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9600 6000 2400 1500 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9600 6000 2400 2400 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
1650 5700 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1875 5850 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11700 1200 m
gs 1 -1 sc (1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
10650 1800 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 3525 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 4350 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 5250 m
gs 1 -1 sc (-1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 6975 m
gs 1 -1 sc (1/4) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 7950 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9900 8700 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
10500 10500 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11325 11400 m
gs 1 -1 sc (-1/4) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 540 964 a @beginspecial 0 @llx 0 @lly 665
@urx 408 @ury 1984 @rwi @setspecial
%%BeginDocument: rgf27.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-66.0 570.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Arc
n 4800.00 5247.66 2515.16 17.40 162.60 arcn
gs col-1 s gr

% Arc
n 4800.00 6909.38 2566.51 -20.75 -159.25 arc
gs col-1 s gr

% Ellipse
n 12000 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 790.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 7200 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 470.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4800 6000 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 310.00 390.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

75.000 slw
% Ellipse
n 6000 6000 1200 1200 0 360 DrawEllipse gs col-1 s gr

30.000 slw
% Polyline
n 1200 6000 m 7200 6000 l  gs col-1 s gr 
120.000 slw
% Polyline
	[166.7] 0 setdash
n 1200 6000 m 12000 6000 l  gs col-1 s gr 	[] 0 setdash
/Times-Roman findfont 360.00 scalefont setfont
1800 5700 m
gs 1 -1 sc (x) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2025 5850 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6750 3300 m
gs 1 -1 sc (1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6600 9300 m
gs 1 -1 sc (-1/2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 4575 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6000 7575 m
gs 1 -1 sc (oo) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 118 1246 a Fo(Fig.)39 b(17:)30 b FB(Sho)o(wn)22
b(is)e(a)h(sk)o(etc)o(h,)f(for)h Ft(m)g(>)987 1226 y
Fr(\003)1014 1230 y Fn(2)p 987 1234 44 2 v 999 1263 a
Fr(2)1036 1246 y FB(,)g(of)g(the)g(relativ)o(e)d(p)q(ositions)k(of)f
(the)f(deca)o(y)118 1305 y(curv)o(es)e(of)g(the)h(quark)f(\(1)p
Ft(;)8 b FB(0\))662 1312 y Fr(1)702 1305 y FB(\(left\))18
b(and)h(of)f(the)h(quark)f(\(1)p Ft(;)8 b FB(0\))1317
1312 y Fm(\000)p Fr(1)1387 1305 y FB(\(righ)o(t\).)28
b(F)l(or)18 b(the)g(latter,)118 1357 y(w)o(e)e(ha)o(v)o(e)g(not)i(sho)o
(wn)f(the)g(curv)o(es)e Ft(r)h(>)f FB(0)i(inside)f(the)h
Ft(r)f FB(=)e Fs(1)j FB(curv)o(e.)k(The)c(thic)o(k)f(curv)o(es)f(are)
118 1402 y(the)h(relev)m(an)o(t)f(ones.)83 1546 y(First,)j(the)h(quark)
f(\(1)p Ft(;)8 b FB(0\))553 1553 y Fr(1)594 1546 y FB(is)18
b(massless)g(at)h Ft(\033)931 1553 y Fr(3)952 1546 y
FB(.)29 b(All)17 b(curv)o(es)h(go)h(through)h Ft(\033)1511
1553 y Fr(3)1532 1546 y FB(,)f(see)f(Fig.)28 b(17,)20
b(and)f(w)o(e)0 1608 y(conclude)d(that)g(this)g(quark)h(exists)e(ev)o
(erywhere!)83 1689 y(F)l(or)j(the)g(other)g(quark)g(\(1)p
Ft(;)8 b FB(0\))635 1696 y Fm(\000)p Fr(1)687 1689 y
FB(,)18 b(the)g(curv)o(es)f(are)h(sho)o(wn)g(in)g(the)g(righ)o(t)f
(Fig.)27 b(17.)g(Deca)o(ys)18 b(are)g(only)0 1751 y(p)q(ossible)d(on)g
(the)f Ft(r)h FB(=)f Fs(1)g FB(curv)o(e)g(\()p Fs(C)660
1730 y Fr(+)657 1766 y(0)692 1751 y FB(\))g(where)g(they)g(are)h(\(1)p
Ft(;)8 b FB(0\))1160 1758 y Fm(\000)p Fr(1)1226 1751
y Fs(!)13 b FB(\(0)p Ft(;)8 b FB(1\))1397 1758 y Fr(0)1427
1751 y FB(+)g(\()p Fs(\000)p FB(1\))g Fs(\002)g FB(\()p
Fs(\000)p FB(1)p Ft(;)g FB(1\))1776 1758 y Fr(1)1810
1751 y FB(for)15 b Ft(\017)e(>)h FB(0)0 1813 y(and)k(\(1)p
Ft(;)8 b FB(0\))204 1820 y Fm(\000)p Fr(1)271 1813 y
Fs(!)15 b FB(\()p Fs(\000)p FB(1\))c Fs(\002)h FB(\(0)p
Ft(;)c FB(1\))607 1820 y Fr(0)640 1813 y FB(+)k(\(1)p
Ft(;)c FB(1\))798 1820 y Fm(\000)p Fr(1)866 1813 y FB(for)18
b Ft(\017)d(<)g FB(0.)24 b(The)17 b(quark)g(\(1)p Ft(;)8
b FB(0\))1440 1820 y Fm(\000)p Fr(1)1509 1813 y FB(cannot)17
b(exist)g(inside)f(the)0 1876 y Ft(r)f FB(=)f Fs(1)f
FB(curv)o(e)f(since)h(again)h(this)f(w)o(ould)h(imply)d(the)i
(existence)e(of)j(a)g(state)f(\()p Ft(M)1452 1858 y Fm(\003)1447
1890 y Fr(2)p Fm(\001)p Fr(3)1499 1876 y FB(\))1518 1858
y Fm(\006)p Fr(1)1569 1876 y FB(\(1)p Ft(;)8 b FB(0\))1677
1883 y Fm(\000)p Fr(1)1742 1876 y FB(=)14 b(\(0)p Ft(;)8
b Fs(\007)p FB(1\))1941 1883 y Fm(\000)p Fr(2)0 1938
y FB(that)17 b(do)q(es)g(not)f(exist.)0 2034 y(The)g(W-b)q(oson)i(\(2)p
Ft(;)8 b FB(0\))414 2041 y Fr(0)p 0 2053 437 2 v 83 2115
a FB(F)l(or)17 b(the)g(W-b)q(oson,)i(there)e(is)g(no)g
Ft(r)g FB(=)e Fs(1)i FB(curv)o(e,)f(and)i(the)e Ft(r)h
FB(=)e Fs(\006)p FB(1)j(curv)o(es)e(exist)g(only)h(for)h
Ft(\017)d FB(=)g Fs(\006)p FB(1,)0 2178 y(where)g(they)g(actually)f
(are)i Fs(C)543 2160 y Fm(1)583 2178 y FB(.)21 b(By)15
b(the)g(\()p Ft(M)848 2160 y Fm(\003)843 2192 y Fr(2)p
Fm(\001)p Fr(3)894 2178 y FB(\))913 2160 y Fm(\006)p
Fr(1)979 2178 y FB(argumen)o(t,)f(the)h(W-b)q(oson)j(cannot)d(exist)g
(inside)f Fs(C)1938 2160 y Fm(1)1979 2178 y FB(.)0 2240
y(The)i(deca)o(ys)g(are)g(\(2)p Ft(;)8 b FB(0\))444 2247
y Fr(0)480 2240 y Fs(!)14 b FB(\(1)p Ft(;)8 b FB(1\))652
2247 y Fu(\017)681 2240 y FB(+)j(\()p Fs(\000)p FB(1\))g
Fs(\002)g FB(\()p Fs(\000)p FB(1)p Ft(;)d FB(1\))1039
2247 y Fu(\017)1057 2240 y FB(.)976 2883 y Fp(36)p eop
%%Page: 38 38
38 37 bop 81 160 a Fz(5.)19 b(Ph)n(ysical)e(discussion)h(:)28
b(the)18 b Fy(N)24 b Fx(=)18 b(2)h Fz(sup)r(erconformal)f(\014xed)h(p)r
(oin)n(ts)83 278 y FB(In)i(the)f(ligh)o(t)h(of)g(our)g(preceding)g
(results,)g(w)o(e)g(no)o(w)g(discuss)g(the)g(ph)o(ysics)f(of)h(the)g
(sup)q(erconformal)0 341 y(p)q(oin)o(ts.)83 423 y(A)o(t)c(a)i(p)q(oin)o
(t)f Ft(u)355 430 y Fm(\003)394 423 y FB(on)h(the)f(Coulom)o(b)f(branc)
o(h)h(where)g(m)o(utually)e(non-lo)q(cal)j(dy)o(ons)f(b)q(ecome)f
(massless,)0 486 y(the)22 b(lo)o(w)h(energy)f(theory)h(is)f(b)q(eliev)o
(ed)f(to)i(b)q(e)g(an)g(in)o(teracting)f(sup)q(erconformal)g(\014eld)g
(theory)h([6].)40 b(In)0 548 y(the)22 b(theories)h(w)o(e)f(studied)g
(in)g(this)h(pap)q(er,)h(suc)o(h)f(a)g(p)q(oin)o(t)g(o)q(ccurs)g(when)f
(t)o(w)o(o)h(singularities)f(coincide)0 610 y([7].)34
b(Near)20 b Ft(u)250 617 y Fm(\003)291 610 y FB(whic)o(h)g(alw)o(a)o
(ys)g(lies)g(in)g(a)h(region)g(where)f(the)g(lo)o(w)g(energy)g(theory)h
(is)f(strongly)h(coupled)0 673 y(\(indep)q(enden)o(tly)13
b(of)j(the)f(c)o(hoice)e(of)j(v)m(ariables\),)e(the)h(masses)g(of)g
(the)g(particles)f(b)q(ecoming)g(massless)g(at)h Ft(u)1971
680 y Fm(\003)0 735 y FB(are)j(m)o(uc)o(h)e(smaller)h(than)i(the)f
(masses)g(of)g(all)g(the)g(other)g(particles)g(\(whic)o(h)f(are)i(of)f
(order)h(\003\))f(and)h(set)f(a)0 798 y(new)d(mass)g(scale)g
Ft(M)5 b FB(.)21 b(This)16 b(implies)c(that)k(one)f(can)h(giv)o(e)e(an)
i(in)o(trinsic)d(meaning)h(to)i(the)f(sup)q(erconformal)0
860 y(\014eld)h(theory)g(\(SCFT\))g(indep)q(enden)o(tly)f(of)h(its)g
(em)o(b)q(edding)e(in)i(the)g(original)g(non-ab)q(elian)h(gauge)g
(theory)l(,)0 922 y(b)o(y)i(letting)h(\003)f Fs(!)h(1)p
FB(.)32 b(Actually)l(,)19 b(the)h Fv(same)g Ft(N)25 b
FB(=)20 b(2)h(SCFT)f(can)g(b)q(e)g(em)o(b)q(edded)e(in)i(di\013eren)o
(t)f Ft(N)25 b FB(=)20 b(2)0 985 y(non-ab)q(elian)14
b(gauge)g(theories.)19 b(Argyres)13 b(and)g(Douglas)h(w)o(ere)f(able)f
(to)h(sho)o(w,)h(in)f(a)g(particular)f(but)h(generic)0
1047 y(case)19 b(that)h(corresp)q(onds)g(in)e(our)i(language)g(of)f
(Section)g(2.1)g(to)h(a)f Ft(k)i FB(=)d(1)i(SCFT,)f(that)g(the)g(lo)o
(w)g(energy)0 1110 y(coupling)13 b(do)q(es)i(not)f(dep)q(end)f(on)h
(the)f(separation)i(of)e(scales)h(\003)p Ft(=)m(M)5 b
FB(.)21 b(This)13 b(is)h(a)g(strong)g(indication)f(that)h(the)0
1172 y(coupling)f(do)q(es)h(not)g(run)g(b)q(et)o(w)o(een)f(the)g
(scales)g Ft(M)19 b FB(and)14 b(\003,)f(and)h(th)o(us)g(v)o(ery)e(con)o
(vincing)g(evidence)g(that)i(the)0 1234 y(theory)k(indeed)f(has)h
(conformal)f(in)o(v)m(ariance.)25 b(One)18 b(of)g(the)g(most)f
(striking)g(prop)q(erties)h(of)g(these)g(SCFTs)0 1297
y(is)h(that)g(they)f(do)i(not)f(con)o(tain)g(an)o(y)f(gauge)i(b)q(oson)
h(that)e(could)g(con)o(tribute)f(to)h(the)g Ft(\014)i
FB(function)d(with)h(a)0 1359 y(min)o(us)c(sign.)22 b(W)l(e)16
b(ha)o(v)o(e)f(seen)h(this)h(in)f(great)h(detail)e(in)h(Section)g(4)h
(for)g(the)f Ft(k)g FB(=)e(2)j(sup)q(erconformal)e(p)q(oin)o(t)0
1422 y(app)q(earing)20 b(in)f(the)g Ft(N)415 1430 y Fu(f)459
1422 y FB(=)f(2)i(theory)l(,)f(since)g(the)g(only)f(spin)i(one)f
(particle)f(at)i(this)f(p)q(oin)o(t)g(has)h(quan)o(tum)0
1488 y(n)o(um)o(b)q(ers)c(\(2)p Ft(;)8 b FB(0\))306 1495
y Fr(0)346 1488 y FB(and)18 b(a)g(mass)f(\003)639 1495
y Fr(2)660 1488 y Ft(=)684 1446 y Fs(p)p 726 1446 25
2 v 42 x FB(2)g Fs(6)p FB(=)f(0.)26 b(It)17 b(is)g(easy)h(to)g(realize)
e(that)i(this)g(is)f(also)i(the)e(case)h(at)g(an)o(y)0
1550 y(sup)q(erconformal)g(p)q(oin)o(t)g(app)q(earing)h(in)f(the)g(1)g
Fs(\024)f Ft(N)983 1559 y Fu(f)1025 1550 y Fs(\024)g
FB(3)i(theories.)26 b(T)l(o)19 b(explain)f(that)g(the)g
Ft(\014)j FB(function)0 1613 y(can)f(nev)o(ertheless)e(b)q(e)j(zero,)f
(Argyres)f(and)i(Douglas)g([6])f(suggested)h(a)f(simple)e(ansatz)j
(whic)o(h)e(consists)0 1675 y(in)d(computing)e(the)i(p)q(erturbativ)o
(e)f(con)o(tribution)h(of)g(eac)o(h)f(h)o(yp)q(erm)o(ultiplet)d(whic)o
(h)k(o)q(ccurs)g(in)f(the)h(SCFT)0 1737 y(separately)l(.)21
b(This)16 b(is)f(done)h(b)o(y)f(using)h(dualit)o(y)f(to)h(go)h(to)f(a)g
(form)o(ulation)e(of)i(the)g(theory)g(where)f(the)g(giv)o(en)0
1800 y(h)o(yp)q(erm)o(ultiple)o(t)i(is)j(describ)q(ed)g(lo)q(cally)l(,)
g(and)g(then)g(to)h(apply)f(the)g(in)o(v)o(erse)e(dualit)o(y)h
(transformation)h(to)0 1862 y(the)d(con)o(tribution)g(to)g(the)g(b)q
(eta)h(function.)24 b(The)17 b(individual)f(terms)g(are)h(then)g
(simply)e(added)i(to)h(obtain)0 1925 y(the)e(total)h
Ft(\014)h FB(function:)688 1996 y Ft(@)s(\034)p 647 2018
138 2 v 647 2064 a(@)11 b FB(log)e Ft(\026)803 2030 y
FB(=)14 b Fs(\000)918 1996 y Ft(i)p 899 2018 54 2 v 899
2064 a FB(2)p Ft(\031)982 1982 y Fk(X)1054 1974 y(\020)1084
2030 y Ft(n)1113 2037 y Fu(m)1149 2030 y Ft(\034)j Fs(\000)11
b Ft(n)1266 2037 y Fu(e)1286 1974 y Fk(\021)1315 1985
y Fr(2)1337 2030 y Ft(:)541 b FB(\(5)p Ft(:)p FB(1\))0
2160 y(where)19 b(eac)o(h)f(state)i(\()p Ft(n)427 2167
y Fu(e)447 2160 y Ft(;)8 b(n)498 2167 y Fu(m)533 2160
y FB(\))552 2167 y Fu(s)591 2160 y FB(in)19 b(the)g(sum)f(should)h(b)q
(e)h(coun)o(ted)e(with)h(its)g(correct)f(m)o(ultiplici)o(t)o(y)e
Ft(d)p FB(.)30 b(Of)0 2223 y(course,)18 b(it)f(is)g(b)o(y)g(no)i(means)
d(ob)o(vious)i(wh)o(y)g(this)f(should)h(giv)o(e)f(the)g(correct)g(answ)
o(er.)1590 2194 y Fu(?)1637 2223 y FB(In)h(this)f(equation,)0
2288 y Ft(\034)29 b FB(=)23 b Ft(\022)q(=\031)17 b FB(+)e(8)p
Ft(i\031)r(=g)377 2270 y Fr(2)420 2288 y FB(is)22 b(the)f
(\(generalized\))g(coupling)h(of)g(a)g(theory)g(con)o(taining)f(the)h
(h)o(yp)q(erm)o(ultiple)o(ts)0 2350 y(\()p Ft(n)48 2357
y Fu(e)68 2350 y Ft(;)8 b(n)119 2357 y Fu(m)155 2350
y FB(\))15 b(o)o(v)o(er)f(whic)o(h)g(the)h(sum)f(is)h(done.)21
b(This)15 b(is)f(not)i(the)f(lo)o(w)f(energy)h(coupling)g(of)g(the)g
(original)g(gauge)0 2412 y(theory)h(whic)o(h,)f(to)i(a)o(v)o(oid)f
(confusion,)g(w)o(e)g(will)f(hereafter)g(denote)h Ft(\034)1270
2421 y Fr(e\013)1329 2412 y FB(=)e Ft(da)1432 2421 y
Fu(D)1466 2412 y Ft(=da)j FB(.)83 2495 y(T)l(o)f(discuss)g(the)f(v)m
(alidit)o(y)f(of)i(this)f(ansatz)h(\(5.1\))g(remark)e(that)i(it)f(has)h
(three)f(imm)o(ediate)d(and)k(imp)q(or-)0 2557 y(tan)o(t)f
(consequences)f(noted)h(in)g([6].)20 b(The)15 b(\014rst)g(one)g(is)f
(that)i(the)e Ft(\022)i FB(angle)f(do)q(es)h(run,)e(due)h(to)g(the)g
(con)o(tribu-)0 2620 y(tion)j(of)g(magnetically)d(c)o(harged)j(states.)
26 b(This)18 b(is)g(quite)e(surprising)i(in)g(a)g(U\(1\))g(theory)l(,)f
(and)h(this)g(e\013ect)p 0 2709 698 2 v 58 2758 a Fq(?)34
b Fp(An)14 b(early)g(and)g(somewhat)f(related)h(discussion)h(can)f(b)q
(e)g(found)g(in)f(ref.)19 b(22.)976 2883 y(37)p eop
%%Page: 39 39
39 38 bop 0 160 a FB(ma)o(y)14 b(w)o(ell)h(remain)f(qualitativ)o(ely)f
(v)m(alid)j(and)g(ha)o(v)o(e)f(in)o(teresting)g(consequences)g(in)g
(non-sup)q(ersymmetric)0 222 y(theories)h(as)h(w)o(ell,)e(p)q(erhaps)i
(b)o(y)f(shading)h(a)g(new)f(ligh)o(t)g(on)h(the)f(strong)i(CP)e
(problem.)21 b(Ho)o(w)o(ev)o(er,)14 b(w)o(e)i(will)0
284 y(ha)o(v)o(e)g(nothing)i(new)f(to)g(sa)o(y)g(ab)q(out)h(this)f(in)g
(the)g(follo)o(wing.)23 b(The)17 b(second)g(consequence)f(of)h(\(5.1\))
g(is)g(that)0 346 y(w)o(e)f(ha)o(v)o(e)f(an)i(R)o(G)f(\014xed)g(p)q
(oin)o(t)g(with)g(a)h(\014xed)f(p)q(oin)o(t)g(coupling)g
Ft(\034)1199 353 y Fm(\003)1237 346 y FB(satisfying)759
435 y Fk(X)831 427 y(\020)861 483 y Ft(n)890 490 y Fu(m)926
483 y Ft(\034)947 490 y Fm(\003)980 483 y Fs(\000)10
b Ft(n)1058 490 y Fu(e)1079 427 y Fk(\021)1108 438 y
Fr(2)1143 483 y FB(=)k(0)p Ft(:)659 b FB(\(5)p Ft(:)p
FB(2\))0 608 y(The)15 b(third)g(consequence)f(is)h(that)g(this)g
(\014xed)g(p)q(oin)o(t)g(is)g(IR)f(stable,)h(the)g(slop)q(e)g
Ft(!)i FB(of)e(the)g Ft(\014)j FB(function)c(b)q(eing)0
670 y(p)q(ositiv)o(e,)h(with)h(\(5.1\))h(giving)464 817
y Ft(!)f FB(=)e Fs(<)p Ft(e)21 b FB(lim)628 847 y Fu(\034)t
Fm(!)p Fu(\034)704 851 y Fj(\003)789 783 y FB(1)p 736
806 131 2 v 736 851 a Ft(\034)c Fs(\000)11 b Ft(\034)845
858 y Fm(\003)876 783 y Ft(@)s FB(\()p Ft(\034)16 b Fs(\000)11
b Ft(\034)1032 790 y Fm(\003)1054 783 y FB(\))p 876 806
197 2 v 906 851 a Ft(@)g FB(log)e Ft(\026)1092 817 y
FB(=)1148 746 y Fk(P)1209 783 y Ft(n)1238 765 y Fr(2)1238
796 y Fu(m)p 1148 806 126 2 v 1197 851 a Ft(\031)1296
817 y Fs(=)p Ft(m)f(\034)1404 824 y Fm(\003)1439 817
y Ft(>)14 b FB(0)p Ft(:)363 b FB(\(5)p Ft(:)p FB(3\))0
957 y(The)15 b(p)q(ositivit)o(y)f(of)i Ft(!)h FB(is)e(also)h(required)e
(b)o(y)h(unitarit)o(y)f([15].)21 b(In)15 b(the)g(follo)o(wing,)g(w)o(e)
g(will)f(argue)i(that)f(\(5.2\))0 1019 y(is)e(correct,)f(but)h(that)h
(\(5.3\))f(is)g(wrong.)21 b(This)13 b(w)o(as)h(already)f(susp)q(ected)g
(in)f([6],)h(since)f(\(5.3\))h(giv)o(es)g(irrational)0
1081 y(v)m(alues)j(for)h Ft(!)r FB(.)k(W)l(e)16 b(will)f(see)h(that)h
(the)f(correct)f(v)m(alue)h(for)h Ft(!)h FB(is)e(indeed)g(a)g(rational)
h(n)o(um)o(b)q(er.)83 1161 y(Before)24 b(presen)o(ting)f(our)i
(discussion,)h(it)e(is)g(necessary)g(to)h(stress)f(the)g(follo)o(wing:)
37 b(although)26 b(the)0 1223 y(e\013ectiv)o(e)15 b(coupling)j
Ft(\034)407 1232 y Fr(e\013)451 1223 y FB(\()p Ft(u)p
FB(\))f(and)h(the)g(running)f(coupling)h Ft(\034)1116
1230 y Fu(u)1140 1223 y FB(\()p Ft(\026)p FB(\))g(of)f(the)g
(microscopic)f(theory)h(at)h(\014xed)f Ft(u)0 1285 y
FB(and)f(scale)g Ft(\026)g FB(are)g(di\013eren)o(t)f(ph)o(ysical)f
(quan)o(tities,)h(they)g(are)h(nev)o(ertheless)e(related.)20
b(The)c(easiest)g(w)o(a)o(y)f(to)0 1348 y(understand)j(this)g(is)f(to)h
(\014rst)g(c)o(ho)q(ose)g Ft(u)f FB(near)h(a)g(singular)g(p)q(oin)o(t)f
Ft(u)1261 1355 y Fr(0)1300 1348 y FB(where)g(only)g(lo)q(cally)g
(related)g(states)0 1410 y(b)q(ecome)j(massless,)i(a)h(familiar)d
(case.)38 b(A)o(t)21 b(\014xed)g Ft(u)p FB(,)i(the)e(particle)g(sp)q
(ectrum)g(of)h(the)f(theory)h(consists)0 1472 y(of)e(the)g(BPS)g
(states)h(b)q(ecoming)e(massless)g(at)i Ft(u)916 1479
y Fr(0)957 1472 y FB(and)g(ha)o(ving)f(masses)g Ft(M)26
b Fs(\030)20 b Ft(t)p FB(\()p Ft(u)13 b Fs(\000)g Ft(u)1672
1479 y Fr(0)1693 1472 y FB(\))21 b(where)e Ft(t)h FB(is)g(a)0
1534 y(constan)o(t,)15 b(and)g(of)g(other)g(states)g(of)g(mass)f
Fs(\030)f FB(\003)i(or)g(higher.)20 b(The)15 b(dep)q(endence)f(of)h
Ft(M)20 b FB(on)15 b Ft(u)f FB(simply)e(means)0 1596
y(that)17 b Ft(u)g FB(is)g(a)g(go)q(o)q(d)i(lo)q(cal)d(co)q(ordinate)i
(near)f Ft(u)855 1603 y Fr(0)876 1596 y FB(,)g(or,)f(in)h(terms)e(more)
h(appropriate)h(for)h(the)e(discussion)h(to)0 1659 y(come,)i(that)i
Ft(u)f FB(has)i(dimension)c(one.)34 b(This)21 b(is)f(equiv)m(alen)o(t)f
(to)i(the)f(fact)g(that)h(the)f(lo)o(w)h(energy)f(theory)0
1721 y(is)e Fv(fr)n(e)n(e)g FB(massless)f(sup)q(er-QED.)i(The)f
(e\013ectiv)o(e)f(coupling)h Ft(\034)1123 1730 y Fr(e\013)1186
1721 y FB(for)g(a)h(giv)o(en)e Ft(u)i FB(then)f(corresp)q(onds)h(to)g
(the)0 1783 y(microscopic)c(running)i(coupling)f Ft(\034)662
1790 y Fu(u)687 1783 y FB(\()p Ft(\026)p FB(\))h(at)g(a)g(scale)g
Ft(\026)e Fs(\030)f Ft(M)22 b FB(or)c(lo)o(w)o(er.)j(Bet)o(w)o(een)15
b(the)i(scales)g Ft(M)22 b FB(and)17 b(\003,)0 1845 y
Ft(\034)21 1852 y Fu(u)45 1845 y FB(\()p Ft(\026)p FB(\))e(is)g(giv)o
(en)e(reliably)l(,)g(after)i(a)f(dualit)o(y)g(transformation)h(whic)o
(h)e(renders)i(the)f(theory)g(w)o(eakly)g(coupled)0 1907
y(in)f(the)g(IR,)f(b)o(y)h(a)h(one)f(lo)q(op)i(calculation)d(in)h
(ordinary)h Ft(N)19 b FB(=)14 b(2)f(sup)q(er-QED)i(coupled)e(only)g
(with)g(the)g(states)0 1970 y(of)k(masses)f Fs(\030)f
Ft(M)5 b FB(.)23 b(One)16 b(then)h(iden)o(ti\014es)e
Ft(\034)801 1978 y Fr(e\013)846 1970 y FB(\()p Ft(u)p
FB(\))h(with)h Ft(\034)1061 1977 y Fu(u)1085 1970 y FB(\()p
Ft(\026)e FB(=)f Ft(M)5 b FB(\))18 b(to)f(\014nd)g(the)f(asymptotic)g
(b)q(eha)o(viour)0 2032 y(of)f Ft(\034)75 2040 y Fr(e\013)135
2032 y FB(near)g(the)f(singularit)o(y)g([1,2].)20 b(Similarly)l(,)12
b(using)j(the)g(same)e(argumen)o(t)h(bac)o(kw)o(ards,)h(and)g(rep)q
(eating)0 2094 y(this)20 b(reasoning)g(near)g(a)h(sup)q(erconformal)e
(p)q(oin)o(t)h Ft(u)980 2101 y Fm(\003)1021 2094 y FB(where)f
Ft(\034)1186 2103 y Fr(e\013)1251 2094 y FB(is)g(kno)o(wn)h(via)g(our)g
(explicit)e(form)o(ulas)0 2156 y(\(e.g.)37 b(\(2.27\))23
b(for)f(the)f Ft(k)k FB(=)e(2)g(SCFT\),)e(one)h(can)g(deduce)f(the)h
(form)e(of)i Ft(\034)1437 2163 y Fu(u)1462 2156 y FB(\()p
Ft(\026)p FB(\).)38 b(Hence)20 b(the)h(e\013ectiv)o(e)0
2218 y(coupling)16 b(at)h Ft(u)283 2225 y Fm(\003)320
2218 y FB(m)o(ust)e(coincide)g(with)h(the)g(\014xed)g(p)q(oin)o(t)g
(coupling)g Ft(\034)1284 2225 y Fm(\003)1306 2218 y FB(:)851
2334 y Ft(\034)872 2343 y Fr(e\013)917 2334 y FB(\()p
Ft(u)964 2341 y Fm(\003)985 2334 y FB(\))d(=)h Ft(\034)1090
2341 y Fm(\003)1128 2334 y Ft(:)750 b FB(\(5)p Ft(:)p
FB(4\))0 2450 y(F)l(urthermore,)14 b(w)o(e)i(will)f(see)h(b)q(elo)o(w)g
(that)h Ft(\034)804 2459 y Fr(e\013)865 2450 y FB(has)g(the)f(follo)o
(wing)g(asymptotic)e(b)q(eha)o(viour,)556 2567 y Ft(\034)577
2575 y Fr(e\013)622 2567 y FB(\()p Ft(u)p FB(\))f(=)h
Ft(\034)774 2574 y Fm(\003)807 2567 y FB(+)d Ft(C)t FB(\()p
Ft(u)f Fs(\000)h Ft(u)1030 2574 y Fm(\003)1051 2567 y
FB(\))1070 2546 y Fu(\015)1105 2567 y FB(+)g Ft(o)1177
2526 y Fk(\000)1200 2567 y FB(\()p Ft(u)g Fs(\000)g Ft(u)1336
2574 y Fm(\003)1357 2567 y FB(\))1376 2546 y Fu(\015)1400
2526 y Fk(\001)1423 2567 y Ft(:)455 b FB(\(5)p Ft(:)p
FB(5\))0 2683 y(Moreo)o(v)o(er,)17 b(it)h(follo)o(ws)g(from)f(eq.)26
b(\(2.13\))19 b(that)g(at)f Ft(u)g FB(the)g(masses)g(of)g(the)g
(particles)f(b)q(ecoming)g(massless)0 2746 y(at)j Ft(u)91
2753 y Fm(\003)131 2746 y FB(are)g Ft(M)25 b Fs(\030)19
b Ft(t)p FB(\()p Ft(u)12 b Fs(\000)i Ft(u)504 2753 y
Fm(\003)525 2746 y FB(\))544 2728 y Fr(1)p Fu(=\013)609
2746 y FB(,)19 b(and)i(that)f Ft(\013)f FB(is)h(the)f(anomalous)h
(dimension)d(of)j Ft(u)p FB(.)31 b(W)l(e)19 b(deduce)g(that)976
2883 y Fp(38)p eop
%%Page: 40 40
40 39 bop 0 160 a Ft(\034)17 b Fs(\000)11 b Ft(\034)109
167 y Fm(\003)144 160 y Fs(\030)j Ft(\026)226 142 y Fu(\013\015)291
160 y FB(and)j(th)o(us)f(that)h(the)f(slop)q(e)g Ft(!)j
FB(of)d(the)g Ft(\014)s FB(-function)g(is)g(giv)o(en)f(b)o(y)911
272 y Ft(!)h FB(=)e Ft(\013\015)s(:)810 b FB(\(5)p Ft(:)p
FB(6\))83 401 y(Let)14 b(us)g(\014rst)g(exploit)e(the)h(fact)h(that)g
Ft(\034)783 410 y Fr(e\013)828 401 y FB(\()p Ft(u)875
408 y Fm(\003)896 401 y FB(\))g(=)f Ft(\034)1001 408
y Fm(\003)1036 401 y FB(to)h(discuss)g(\(5.2\).)21 b(Naiv)o(ely)l(,)11
b(at)j(a)g(sup)q(erconformal)0 463 y(p)q(oin)o(t)j(where)f(t)o(w)o(o)h
(singularities)f(coincide,)f(one)i(has)g(precisely)e(t)o(w)o(o)h
(massless)g(states.)23 b(F)l(or)17 b(instance,)f(at)0
526 y(the)g Ft(k)g FB(=)e(3)j(sup)q(erconformal)f(p)q(oin)o(t)g(of)h
(the)f Ft(N)866 534 y Fu(f)905 526 y FB(=)e(3)j(theory)f(depicted)f(in)
h(Fig.)21 b(2,)c(one)f(w)o(ould)h(exp)q(ect)e(to)0 588
y(ha)o(v)o(e)h(the)h(states)g(\(1)p Ft(;)8 b FB(1\))445
595 y Fr(2)483 588 y FB(and)18 b(\(1)p Ft(;)8 b FB(2\))687
595 y Fr(3)709 588 y FB(.)22 b(Ho)o(w)o(ev)o(er,)15 b(with)i(these)f
(states,)h(\(5.2\))g(do)q(es)h(not)f(giv)o(e)f(the)g(correct)0
651 y(answ)o(er)j(for)f(the)g(\014xed)g(p)q(oin)o(t)g(coupling,)h(whic)
o(h)e(in)h(this)g(case)h(is)f Ft(\034)1262 658 y Fm(\003)1301
651 y FB(=)f Ft(e)1379 633 y Fu(i\031)q(=)p Fr(3)1473
651 y FB(=)g Ft(\034)1549 660 y Fr(e\013)1594 651 y FB(\()p
Ft(u)1641 658 y Fm(\003)1662 651 y FB(\).)27 b(The)18
b(solution)0 713 y(to)f(this)g(puzzle)f(is)h(not)h(to)f(giv)o(e)g(up)g
(\(5.2\),)g(but)g(to)h(realize)d(that)j(there)f(are)g(other)g(states)h
(whic)o(h)e(b)q(ecome)0 775 y(massless)g(at)g(the)h(sup)q(erconformal)e
(p)q(oin)o(ts.)22 b(One)17 b(w)o(a)o(y)f(to)g(\014nd)h(them)e(is)h(to)h
(lo)q(ok)g(for)f(massless)g(states)h(in)0 837 y(the)h(maximal)e(set)i
(of)h(BPS)g(states)g(of)f(the)h Ft(N)862 846 y Fu(f)904
837 y FB(=)f(3)h(theory)l(.)28 b(This)19 b(is)f(correct)g(b)q(ecause)h
(one)g(can)f(sho)o(w,)0 899 y(along)j(the)f(lines)g(of)g(Section)g(4,)i
(that)e(all)g(the)g(states)h(b)q(elonging)g(to)g(the)f(maximal)d(set)k
(m)o(ust)e(exist)g(at)0 962 y(the)i(sup)q(erconformal)g(p)q(oin)o(t.)36
b(Th)o(us)21 b(w)o(e)g(deduce)g(that)g(w)o(e)g(ha)o(v)o(e)f(six)h
(massless)f(states,)j(three)e(triplets)0 1024 y(\(1)p
Ft(;)8 b FB(1\))108 1031 y Fr(2)130 1024 y FB(,)20 b(\(0)p
Ft(;)8 b FB(1\))272 1031 y Fr(1)314 1024 y FB(and)21
b(\(1)p Ft(;)8 b FB(0\))521 1031 y Fr(1)543 1024 y FB(,)21
b(and)f(three)g(singlets)g(\(1)p Ft(;)8 b FB(2\))1091
1031 y Fr(3)1113 1024 y FB(,)20 b(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))1294 1031 y Fr(0)1336 1024 y FB(and)21
b(\(2)p Ft(;)8 b FB(1\))1543 1031 y Fr(3)1565 1024 y
FB(.)32 b(With)20 b(these)g(states)0 1086 y(\(5.2\))f(giv)o(es)e(the)i
(righ)o(t)f(answ)o(er.)28 b(One)18 b(in)o(teresting)f(p)q(oin)o(t)i(to)
g(note)f(is)h(the)f(follo)o(wing:)25 b(the)18 b(states)h(b)q(eing)0
1148 y(massless)12 b(at)g(the)g(p)q(oten)o(tially)g(coinciding)f
(singularities)h(for)h(small)d(masses)i(\()p Ft(m)i(<)f
FB(\003)1573 1155 y Fr(3)1595 1148 y Ft(=)p FB(8\),)g(i.e.)19
b(\(1)p Ft(;)8 b FB(1\))1880 1155 y Fr(2)1914 1148 y
FB(and)0 1210 y(\(1)p Ft(;)g FB(2\))108 1217 y Fr(3)130
1210 y FB(,)13 b(and)h(the)f(states)g(b)q(ecoming)f(massless)g(for)i
(large)f(masses)f(\()p Ft(m)i(>)g FB(\003)1377 1217 y
Fr(3)1398 1210 y Ft(=)p FB(8\),)g(i.e.)19 b(\()p Fs(\000)p
FB(1)p Ft(;)8 b FB(1\))1723 1217 y Fr(0)1757 1210 y FB(and)14
b(\(1)p Ft(;)8 b FB(0\))1957 1217 y Fr(1)1979 1210 y
FB(,)0 1272 y(are)18 b(four)g Fv(distinct)h FB(states)g(and)g(not)f
(simply)e(analytic)h(con)o(tin)o(uations)h(of)h(eac)o(h)e(other.)27
b(The)18 b(mec)o(hanism)0 1334 y(whic)o(h)h(allo)o(ws)g(to)g(c)o(hange)
h(the)f(quan)o(tum)e(n)o(um)o(b)q(ers)h(at)i(the)f(singularities)f(in)h
(the)g(asymptotically)e(free)0 1397 y(theories,)f(a)h(phenomena)f(whic)
o(h)g(w)o(as)h(kno)o(wn)f(to)h(o)q(ccur)g(since)f(the)g(w)o(ork)h(of)g
(Seib)q(erg)f(and)i(Witten)e([1,2],)0 1459 y(is)f(th)o(us)g(fully)f
(elucidated:)19 b(at)d(a)f(p)q(oin)o(t)h(where)e(t)o(w)o(o)h
(singularities)g(collide,)e(new)i(states)h(b)q(ecome)d(massless)0
1521 y(\\acciden)o(tally")h(and,)i(when)f(the)g(singularities)g(split)f
(again,)i(these)f(new)g(states)h(can)g(tak)o(e)e(o)o(v)o(er)h(the)g(r^)
-24 b(oles)0 1583 y(of)16 b(the)g(original)g(massless)f(states)i(whic)o
(h)e(w)o(ere)g(resp)q(onsible)h(for)g(the)g(singularities)f(b)q(efore)h
(the)g(collision.)83 1663 y(Let)i(us)g(illustrate)f(this)h(mec)o
(hanism)d(in)i(more)g(detail)g(in)h(the)g(case)f(of)i(the)e
Ft(N)1544 1671 y Fu(f)1586 1663 y FB(=)g(2)h(theory)g(studied)0
1725 y(in)i(Section)f(4.)33 b(Figure)20 b(18)h(represen)o(ts)e(an)i
(enlargemen)o(t)d(of)i(Figs.)33 b(4)20 b(and)h(13)g(near)f(the)g
(singularities.)0 1787 y(W)l(e)d(explicitly)e(indicate)h(the)h
(existing)g(states)g(in)g(the)h(di\013eren)o(t)e(regions)i(surrounded)g
(b)o(y)f(the)g(curv)o(es)f(of)0 1849 y(marginal)e(stabilit)o(y)l(.)20
b(Since)14 b Ft(a)559 1857 y Fu(D)607 1849 y FB(=)g Ft(a)9
b Fs(\000)755 1829 y Fu(m)p 746 1838 52 2 v 746 1843
a Fm(p)p 778 1843 20 2 v 31 x Fr(2)816 1849 y FB(=)14
b(0)i(at)f(the)g(sup)q(erconformal)g(p)q(oin)o(t,)g(it)f(is)h(clear)g
(from)f(Figure)0 1920 y(18)k(that)h(the)e(states)h(b)q(ecoming)f
(massless)f(at)j(this)e(p)q(oin)o(t)h(are)f(the)h(t)o(w)o(o)f(singlets)
h(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1684 1927 y Fm(\000)p
Fr(1)1753 1920 y FB(and)18 b(\(1)p Ft(;)8 b FB(1\))1957
1927 y Fr(1)1979 1920 y FB(,)0 1983 y(and)22 b(the)g(t)o(w)o(o)f
(doublets)h(\(0)p Ft(;)8 b FB(1\))596 1990 y Fr(0)640
1983 y FB(and)22 b(\(1)p Ft(;)8 b FB(0\))848 1990 y Fr(1)870
1983 y FB(.)37 b(Equation)22 b(\(5.2\))g(then)g(giv)o(es)f(the)g
(correct)g(\014xed)g(p)q(oin)o(t)0 2045 y(coupling,)e
Ft(\034)233 2052 y Fm(\003)273 2045 y FB(=)g Ft(i)p FB(.)29
b(When)19 b Ft(m)f(<)g FB(\003)686 2052 y Fr(2)707 2045
y Ft(=)p FB(2,)j(the)d(states)i(resp)q(onsible)f(for)g(the)g
(singularities)f(are)h(\()p Fs(\000)p FB(1)p Ft(;)8 b
FB(1\))1941 2052 y Fm(\000)p Fr(1)0 2107 y FB(and)20
b(\(0)p Ft(;)8 b FB(1\))206 2114 y Fr(0)227 2107 y FB(,)20
b(and)f(exist)f(ev)o(erywhere)f(on)j(the)f(Coulom)o(b)f(branc)o(h.)29
b(The)19 b(states)g(\(1)p Ft(;)8 b FB(1\))1640 2114 y
Fr(1)1681 2107 y FB(and)20 b(\(1)p Ft(;)8 b FB(0\))1887
2114 y Fr(1)1927 2107 y FB(are)0 2169 y(also)19 b(v)o(ery)f(sp)q
(ecial,)h(since)f(they)g(exist)h(ev)o(erywhere)e(except)g(inside)h(the)
h(innermost)f(curv)o(e)f Fs(C)1770 2148 y Fm(\000)1767
2184 y Fr(0)1802 2169 y FB(.)30 b(This)19 b(is)0 2231
y(a)f(nice)e(test)i(of)g(the)f(sp)q(ectra)h(deriv)o(ed)e(in)h(Section)g
(4,)h(since)f(\(1)p Ft(;)8 b FB(1\))1240 2238 y Fr(1)1279
2231 y FB(and)18 b(\(1)p Ft(;)8 b FB(0\))1483 2238 y
Fr(1)1505 2231 y FB(,)17 b(b)q(eing)h(massless)f(at)h(the)0
2293 y(sup)q(erconformal)12 b(p)q(oin)o(t,)h(m)o(ust)e(exist)h(ev)o
(erywhere)e(except)i(p)q(ossibly)g(inside)g(curv)o(es)g(of)g(marginal)g
(stabilit)o(y)0 2355 y(shrinking)j(to)h(zero)f(when)g(suc)o(h)g(a)g(p)q
(oin)o(t)h(is)f(approac)o(hed.)21 b(This)16 b(is)f(indeed)f(what)i
(happ)q(ens)g(for)g(the)f(curv)o(e)0 2418 y Fs(C)29 2397
y Fm(\000)26 2432 y Fr(0)61 2418 y FB(.)20 b(When)13
b Ft(m)h(>)g FB(\003)377 2425 y Fr(2)398 2418 y Ft(=)p
FB(2,)g(the)f(r^)-24 b(oles)13 b(of)g(the)g(states)g(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1081 2425 y Fm(\000)p
Fr(1)1133 2418 y FB(,)13 b(\(0)p Ft(;)8 b FB(1\))1268
2425 y Fr(0)1303 2418 y FB(and)14 b(\(1)p Ft(;)8 b FB(1\))1503
2425 y Fr(1)1525 2418 y FB(,)13 b(\(1)p Ft(;)8 b FB(0\))1660
2425 y Fr(1)1695 2418 y FB(are)13 b(exc)o(hanged)0 2480
y(but)j(the)f(picture)g(still)g(is)g(p)q(erfectly)f(coheren)o(t)h(b)q
(ecause)h(\()p Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1204
2487 y Fm(\000)p Fr(1)1271 2480 y FB(and)17 b(\(0)p Ft(;)8
b FB(1\))1474 2487 y Fr(0)1511 2480 y FB(again)17 b(exist)d(ev)o
(erywhere)0 2542 y(outside)i Fs(C)197 2521 y Fm(\000)194
2557 y Fr(0)229 2542 y FB(.)83 2621 y(Let)j(us)g(men)o(tion)d(that)j
(at)g(the)f Ft(k)i FB(=)e(1)h(SCFT)g(app)q(earing)g(in)f(the)h
Ft(N)1389 2630 y Fu(f)1431 2621 y FB(=)f(1)h(theory)l(,)f(w)o(e)g(ha)o
(v)o(e)g(three)0 2684 y(massless)c(states)i(whic)o(h)e(corresp)q(ond)i
(exactly)e(to)h(the)g(three)f(states)h(whic)o(h)g(w)o(ere)f(iden)o
(ti\014ed)f(in)i([6])f(at)i(the)0 2746 y Fo(Z)34 2753
y Fr(3)72 2746 y FB(p)q(oin)o(t)h(of)g(the)g(SU\(3\))f(mo)q(duli)g
(space.)22 b(This)17 b(w)o(as)g(exp)q(ected)f(since)g(the)h(t)o(w)o(o)f
(SCFTs)h(are)g(b)q(eliev)o(ed)e([7])976 2883 y Fp(39)p
eop
%%Page: 41 41
41 40 bop 118 1077 a @beginspecial 0 @llx 0 @lly 693
@urx 433 @ury 3685 @rwi @setspecial
%%BeginDocument: rgf29.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-61.0 719.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 360.00 scalefont setfont
6300 11700 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7200 11925 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1801 11701 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2701 11926 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2326 7201 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3001 7426 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3151 6301 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3826 6526 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5475 6751 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4800 6526 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4801 5701 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5476 5926 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6526 5701 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7426 5926 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6525 6526 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7425 6751 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2701 9301 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3376 9526 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3901 8401 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4576 8626 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5401 7801 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6301 8026 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5401 8701 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6301 8926 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6751 10426 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7651 10651 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6751 9676 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7651 9901 m
gs 1 -1 sc (1) col-1 show gr
30.000 slw
% Arc
n 6000.00 9720.00 4920.00 167.32 12.68 arc
gs col-1 s gr

% Arc
n 6000.00 12200.00 5000.00 -163.74 -16.26 arc
gs col-1 s gr

% Arc
n 8100.00 11925.00 2925.00 -157.38 -22.62 arc
gs col-1 s gr

% Ellipse
n 1200 10800 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 70.00 710.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 10800 10800 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 710.00 710.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 5400 10800 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 350.00 710.00]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 1200 10800 m 10800 10800 l  gs col-1 s gr 
15.000 slw
% Polyline
n 1650 11550 m 1350 11100 l  gs col-1 s gr 
n 1433.21 11332.97 m 1350.00 11100.00 l 1533.05 11266.41 l gs col-1 s gr
% Polyline
n 6150 11550 m 5625 11100 l  gs col-1 s gr 
n 5768.17 11301.75 m 5625.00 11100.00 l 5846.27 11210.63 l gs col-1 s gr
% Polyline
n 11550 11550 m 11025 11100 l  gs col-1 s gr 
n 11168.17 11301.75 m 11025.00 11100.00 l 11246.27 11210.63 l gs col-1 s gr
/Times-Roman findfont 360.00 scalefont setfont
5100 10200 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5325 10425 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5325 9900 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1500 9000 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1725 9225 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1725 8700 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1200 7200 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
1425 6900 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 7201 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9075 7426 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7125 8401 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7800 8626 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8700 10276 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9375 10501 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
11700 11700 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
12375 11925 m
gs 1 -1 sc (0) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 997 x @beginspecial 0 @llx 0 @lly 886 @urx
504 @ury 3685 @rwi @setspecial
%%BeginDocument: rgf30.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-61.0 719.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
30.000 slw
% Ellipse
n 1201 10801 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 70.07 710.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 15601 10801 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 1030.07 710.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 9601 10801 150 150 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 630.07 710.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12601 9751 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 835.07 645.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12601 10051 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 835.07 665.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 12601 10351 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 835.07 685.07]  PATmp PATsp ef gr PATusp gs col-1 s gr

/Times-Roman findfont 360.00 scalefont setfont
1951 11701 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2851 11926 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7876 11701 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8551 11926 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
13876 11701 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
14551 11926 m
gs 1 -1 sc (1) col-1 show gr
15.000 slw
% Polyline
n 1650 11626 m 1350 11176 l  gs col-1 s gr 
n 1433.21 11408.97 m 1350.00 11176.00 l 1533.05 11342.41 l gs col-1 s gr
/Times-Roman findfont 360.00 scalefont setfont
1801 9301 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2026 9526 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2026 9001 m
gs 1 -1 sc (+) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3001 8551 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2326 8326 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3601 7351 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4276 7576 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3676 8102 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4351 8327 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5026 7126 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5926 7351 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5026 7876 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5926 8101 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6601 7576 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7276 7801 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7426 8401 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8101 8626 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4951 9076 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5851 9301 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3677 10127 m
gs 1 -1 sc (\(0,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4352 10352 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5026 9976 m
gs 1 -1 sc (\(-1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5926 10201 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7576 10276 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8251 10501 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
6676 9451 m
gs 1 -1 sc (\(1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7351 9676 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
14251 8177 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
14476 8402 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
14476 7877 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2551 7276 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
2776 6976 m
gs 1 -1 sc (oo) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4876 4951 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5551 5176 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
5551 6076 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4876 5851 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11026 8626 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11551 8851 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10576 9076 m
gs 1 -1 sc (\(1,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
11101 9226 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10051 9526 m
gs 1 -1 sc (\(2,0\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
10576 9751 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14701 9751 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14926 9976 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14926 9601 m
gs 1 -1 sc (-) col-1 show gr
30.000 slw
% Arc
n 5400.00 10800.00 4200.00 180.00 0.00 arc
gs col-1 s gr

% Arc
n 12600.00 10800.00 3000.00 180.00 0.00 arc
gs col-1 s gr

% Arc
n 12600.00 13050.00 3750.00 -143.13 -36.87 arc
gs col-1 s gr

% Arc
n 5400.00 13275.00 4875.00 -149.49 -30.51 arc
gs col-1 s gr

15.000 slw
% Arc
n 15660.00 10560.00 m 15600.00 10800.00 l 15540.00 10560.00 l gs col-1 s gr
n 8400.00 10800.00 7200.00 180.00 0.00 arc
gs col-1 s gr

30.000 slw
% Polyline
n 1200 10800 m 15600 10800 l  gs col-1 s gr 
15.000 slw
% Polyline
n 8850 11550 m 9300 11100 l  gs col-1 s gr 
n 9087.87 11227.28 m 9300.00 11100.00 l 9172.72 11312.13 l gs col-1 s gr
% Polyline
n 14850 11550 m 15300 11100 l  gs col-1 s gr 
n 15087.87 11227.28 m 15300.00 11100.00 l 15172.72 11312.13 l gs col-1 s gr
/Times-Roman findfont 270.00 scalefont setfont
12000 8250 m
gs 1 -1 sc (\(2n+1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12975 8400 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12000 8700 m
gs 1 -1 sc (\(2n+1,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
12975 8925 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13500 9300 m
gs 1 -1 sc (\(2n,1\)) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14175 9525 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3075 5025 m
gs 1 -1 sc (C) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3300 5175 m
gs 1 -1 sc (-2) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3375 4725 m
gs 1 -1 sc (-) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 4800 m
gs 1 -1 sc (\(2n+1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8775 5025 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 5700 m
gs 1 -1 sc (\(2n+1,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8775 5925 m
gs 1 -1 sc (-1) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
7500 6600 m
gs 1 -1 sc (\(2n,1\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
8400 6825 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 6600 m
gs 1 -1 sc (n > -1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13500 8700 m
gs 1 -1 sc (n > -1) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
14475 9300 m
gs 1 -1 sc (n > 0) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
3525 6300 m
gs 1 -1 sc (\(2,0\)) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
4200 6525 m
gs 1 -1 sc (0) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
13200 8250 m
gs 1 -1 sc (all  n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 4800 m
gs 1 -1 sc (all  n) col-1 show gr
/Times-Roman findfont 360.00 scalefont setfont
9300 5700 m
gs 1 -1 sc (n > -2) col-1 show gr
$F2psEnd
restore

%%EndDocument
 @endspecial 278 x Fo(Fig.)24 b(18:)e FB(The)16 b(curv)o(es)f(of)i
(marginal)e(stabilit)o(y)g(and)h(stable)h(BPS)f(states)g(in)g(the)g
(upp)q(er)g(half)118 2401 y Ft(u)p FB(-plane)f(near)f(the)h
(singularities)e(in)i(the)f Ft(N)926 2409 y Fu(f)965
2401 y FB(=)f(2)i(theory)g(with)f Ft(m)1359 2408 y Fr(1)1394
2401 y FB(=)g Ft(m)1489 2408 y Fr(2)1523 2401 y FB(=)g
Ft(m)p FB(.)21 b(The)14 b(upp)q(er)118 2459 y(con\014guration)j
(corresp)q(onds)h(to)f Ft(m)c(<)h FB(\003)883 2466 y
Fr(2)904 2459 y Ft(=)p FB(2)j(and)g(the)f(lo)o(w)o(er)f
(con\014guration)j(to)e Ft(m)e(>)f FB(\003)1772 2466
y Fr(2)1794 2459 y Ft(=)p FB(2.)0 2619 y(to)h(b)q(e)f(the)h(same.)19
b(It)13 b(w)o(ould)g(b)q(e)h(in)o(teresting)e(to)i(c)o(hec)o(k)e
(whether)h(suc)o(h)g(a)h(corresp)q(ondence)g(b)q(et)o(w)o(een)e(states)
0 2682 y(still)17 b(holds)h(for)f(the)h Ft(k)g FB(=)e(2)i(and)h
Ft(k)f FB(=)e(3)i(SCFT)g(when)g(these)f(theories)g(are)h(em)o(b)q
(edded)e(in)h(the)h(SU\(4\))f(or)0 2746 y(SO\(8\))g(pure)f(gauge)h
(theories)f([16].)976 2883 y Fp(40)p eop
%%Page: 42 42
42 41 bop 83 160 a FB(There)19 b(is)h(still)f(one)h(unsatisfying)g(p)q
(oin)o(t)g(in)f(the)h(ab)q(o)o(v)o(e)f(discussion.)32
b(Though)21 b(w)o(e)f(sa)o(w)g(that)g(\(5.2\))0 222 y(giv)o(es)d(the)h
(correct)f(\014xed)h(p)q(oin)o(t)g(coupling,)g(its)g(application)g
(requires)e(the)i(kno)o(wledge)g(of)g(the)g(set)g(of)g(all)0
284 y(the)12 b(massless)g(states,)i(whic)o(h)e(from)g(the)g(ab)q(o)o(v)
o(e)h(discussion)g(seems)e(to)i(dep)q(end)g(crucially)e(on)i(the)f
(theory)h(in)0 346 y(whic)o(h)i(the)g(SCFT)h(is)f(em)o(b)q(edded.)k
(This)d(is)f(not)h(natural)g(since)e Ft(\034)1218 353
y Fm(\003)1255 346 y FB(is,)h(at)h(least)f(mo)q(dulo)g(a)h(dualit)o(y)f
(trans-)0 408 y(formation,)i(a)h(c)o(haracteristic)e(of)i(the)f(SCFT.)g
(Actually)l(,)f(the)i(massless)e(sp)q(ectra)i(can)g(b)q(e)g(deduced)f
(from)0 470 y(the)h(lo)q(cal)f(data)i(only)l(.)25 b(Indeed,)17
b(as)i(the)e(original)h(massless)f(states)h(exist)f(ev)o(erywhere)f(on)
i(the)f(Coulom)o(b)0 532 y(branc)o(h)f(and)h(cannot)g(deca)o(y)l(,)e
(one)h(can)h(pro)q(duce)g(new)f(massless)f(states)i(b)o(y)f(encircling)
e(the)i(sup)q(erconfor-)0 594 y(mal)h(singular)h(p)q(oin)o(t.)27
b(The)18 b(massless)f(sp)q(ectra)i(m)o(ust)d(then)i(b)q(e)g(in)o(v)m
(arian)o(t)g(under)g(the)g(mono)q(drom)o(y)e Ft(M)1958
601 y Fr(sc)0 656 y FB(at)22 b(the)f(sup)q(erconformal)g(p)q(oin)o(t.)
36 b(This)22 b(in)o(v)m(ariance)e(only)h(generates)h(a)g(\014nite)e(n)o
(um)o(b)q(er)g(of)i(new)f(states)0 718 y(b)q(ecause)g
Ft(M)232 725 y Fr(sc)288 718 y FB(is)f(of)h(\014nite)g(order.)35
b(Using)21 b(this)g(in)o(v)m(ariance,)f(one)h(can)h(deduce)e(straigh)o
(tforw)o(ardly)h(the)0 780 y(massless)c(BPS)h(sp)q(ectra)g(uniquely)e
(from)h(the)h(quan)o(tum)e(n)o(um)o(b)q(ers)h(of)h(the)f(colliding)g
(singularities.)25 b(F)l(or)0 842 y(instance,)17 b(b)o(y)f(applying)i
(\(4.4\))f(on)h(the)f(states)h(\()p Fs(\000)p FB(1)p
Ft(;)8 b FB(1\))1032 849 y Fm(\000)p Fr(1)1100 842 y
FB(and)18 b(\(0)p Ft(;)8 b FB(1\))1304 849 y Fr(0)1326
842 y FB(,)17 b(one)g(generates)h(exactly)e(the)h(t)o(w)o(o)0
904 y(missing)e(states)i(\(1)p Ft(;)8 b FB(1\))421 911
y Fr(1)459 904 y FB(and)17 b(\(1)p Ft(;)8 b FB(0\))662
911 y Fr(1)683 904 y FB(.)83 983 y(It)22 b(is)h(v)o(ery)e(tempting)g
(to)i(conjecture)f(that)h(the)f(matrix)f Ft(M)1247 990
y Fr(sc)1304 983 y FB(alw)o(a)o(ys)h(corresp)q(onds)i(to)f(an)g(exact)0
1045 y(quan)o(tum)13 b(dualit)o(y)h(symmetry)d(of)j(the)h(SCFT.)f(In)g
(addition)h(to)g(the)f(in)o(v)m(ariance)f(of)i(the)f(sp)q(ectrum,)f
(this)i(is)0 1107 y(supp)q(orted)i(b)o(y)f(the)g(\(related\))f(fact)h
(that)h(the)f(\014xed)g(p)q(oin)o(t)g(couplings)g(satisfy)g
Ft(M)1525 1114 y Fr(sc)1571 1107 y Fs(\001)11 b Ft(\034)1617
1114 y Fm(\003)1652 1107 y FB(=)j Ft(\034)1725 1114 y
Fm(\003)1762 1107 y FB(and)j(b)o(y)f(the)0 1169 y(fact)g(that)g(the)g
(symmetry)d Ft(M)560 1176 y Fr(sc)610 1169 y FB(can)k(b)q(e)f(realized)
f(as)h(a)h(global)f(symmetry)d(e.g.)21 b(as)16 b(the)g
Fo(Z)1688 1176 y Fr(3)1726 1169 y FB(symmet)o(ry)d(of)0
1231 y(the)g Ft(k)j FB(=)d(1)h(SCFT)f(when)g(em)o(b)q(edded)e(in)h(the)
h(SU\(3\))g(pure)g(gauge)g(theory)l(.)20 b(Note)13 b(that)g(the)g
(surprising)g(idea)0 1293 y(that)j(global)g(symmetries)d(can)j(b)q(e)g
(related)f(to)h(non-trivial)g(dualit)o(y)e(transformations)i(w)o(as)h
(\014rst)f(realized)0 1355 y(and)h(used)g(in)g([3])f(in)g(the)h(case)f
(of)h(the)g Fo(Z)753 1362 y Fr(2)791 1355 y FB(symmetry)d(acting)i(on)i
(the)e(mo)q(duli)g(space)g(of)h(the)g(SU\(2\))g(pure)0
1418 y(gauge)i(theory)l(.)27 b(W)l(e)18 b(\014nd)h(a)g(v)o(ery)e
(explicit)f(realization)h(of)i(this)f(fact)g(with)g(the)g(sup)q
(erconformal)g(p)q(oin)o(ts)0 1480 y(studied)13 b(in)h(this)f(pap)q
(er.)21 b(V)l(ery)12 b(recen)o(tly)l(,)g(this)h(idea)h(has)g(also)g(b)q
(een)g(used)f(v)o(ery)g(nicely)e(to)j(study)g Ft(S)i
FB(dualit)o(y)0 1542 y(in)e(some)f(\014nite)h(gauge)h(theories)f([17].)
20 b(W)l(e)14 b(strongly)h(feel)e(that)h(this)g(is)g(a)h(v)o(ery)e(in)o
(teresting)g(p)q(oin)o(t)h(of)h(view,)0 1604 y(since)k(it)g(relates)g
(a)h(priori)f(purely)g(quan)o(tum)f(symmetri)o(es)f(to)j(more)e(con)o
(v)o(en)o(tional)g(symmetrie)o(s)f(whic)o(h)0 1666 y(ha)o(v)o(e)e(a)i
(classical)f(origin.)83 1745 y(Let)g(us)h(no)o(w)g(turn)f(to)h(the)f
(computation)g(of)g Ft(!)r FB(.)22 b(W)l(e)16 b(will)f(also)i(obtain)g
Ft(\013)p FB(,)f(reco)o(v)o(ering)f(the)h(results)g(of)0
1807 y([7].)26 b(T)l(o)18 b(compute)e(these)i(t)o(w)o(o)g(critical)e
(exp)q(onen)o(ts,)i(it)f(is)h(enough)g(to)h(\014nd)f(the)f(asymptotic)g
(expansions)0 1869 y(of)e Ft(a)80 1877 y Fu(D)129 1869
y FB(and)g Ft(a)f FB(near)h Ft(u)397 1876 y Fm(\003)433
1869 y FB(up)f(to)h(the)g(second)f(order.)21 b(An)14
b(easy)h(w)o(a)o(y)f(to)h(deduce)f(the)h(result)f(is)g(the)g(follo)o
(wing:)0 1931 y(diagonalizing)20 b(the)f(mono)q(drom)o(y)f(matrix)g
Ft(M)868 1938 y Fr(sc)902 1931 y FB(,)i(its)f(eigen)o(v)m(alues)g(are)g
Ft(x)1375 1938 y Fm(\006)1426 1931 y FB(=)h(exp)o(\()p
Fs(\006)1621 1911 y Fu(i\031)p 1621 1919 37 2 v 1630
1948 a Fr(6)1662 1931 y FB(\(1)14 b(+)f Ft(k)r FB(\)\),)20
b(whic)o(h)0 1993 y(sho)o(ws)f(that)f(the)g(leading)g(p)q(o)o(w)o(er)g
(in)g(the)g(expansion,)g(corresp)q(onding)h(to)g(1)p
Ft(=\013)p FB(,)g(see)f(\(2.13\),)g(m)o(ust)f(b)q(e)h(of)0
2055 y(the)e(form)714 2113 y(1)p 711 2135 32 2 v 711
2180 a Ft(\013)761 2146 y FB(=)e Fs(\006)857 2113 y FB(1)d(+)g
Ft(k)p 857 2135 112 2 v 888 2180 a FB(12)984 2146 y(+)g
Ft(n)16 b(;)57 b(n)14 b Fs(2)g Fo(Z)p Ft(:)0 2253 y FB(Imp)q(osing)21
b Ft(\013)i Fs(\025)g FB(1)f(whic)o(h)f(is)g(a)h(necessary)f(condition)
h(for)g(a)g(unitary)f(SCFT)h([7],)g(and)g Ft(\013)i Fs(\024)e
FB(2)g(whic)o(h)0 2315 y(amoun)o(ts)17 b(to)i(sa)o(ying)f(that)g(the)g
(op)q(erator)h Ft(u)f FB(is)f(relev)m(an)o(t,)g(the)h(only)g(p)q
(ossibilit)o(y)f(is)g(that)i Ft(\013)f FB(is)g(related)f(to)0
2377 y(the)f(eigen)o(v)m(alue)f Ft(x)345 2384 y Fm(\000)393
2377 y FB(with)h Ft(n)e FB(=)g(1,)868 2477 y Ft(\013)g
FB(=)1013 2443 y(12)p 969 2465 137 2 v 969 2511 a(11)e
Fs(\000)f Ft(k)1111 2477 y Fs(\001)767 b FB(\(5)p Ft(:)p
FB(7\))0 2587 y(The)16 b(other)h(eigen)o(v)m(alue)e Ft(x)489
2594 y Fr(+)537 2587 y FB(is)h(related)f(to)i(the)f(subleading)g(p)q(o)
o(w)o(er)h(1)p Ft(=\014)f(>)e FB(1)p Ft(=\013)k FB(in)d(the)h
(expansion)h(b)o(y)717 2681 y(1)p 714 2703 31 2 v 714
2749 a Ft(\014)763 2714 y FB(=)d(+)858 2681 y(1)d(+)g
Ft(k)p 858 2703 112 2 v 889 2749 a FB(12)985 2714 y(+)g(1)j(=)1129
2681 y(13)e(+)f Ft(k)p 1129 2703 136 2 v 1173 2749 a
FB(12)1270 2714 y Fs(\001)608 b FB(\(5)p Ft(:)p FB(8\))976
2883 y Fp(41)p eop
%%Page: 43 43
43 42 bop 0 160 a FB(The)20 b(form)o(ulae)f(\(5.7\))h(and)h(\(5.8\))f
(can)g(b)q(e)h(c)o(hec)o(k)o(ed)c(using)k(the)f(explicit)e(solutions)i
(giv)o(en)g(in)f(\(2.27\))i(for)0 222 y Ft(N)39 231 y
Fu(f)78 222 y FB(=)13 b(2)k(or)g(those)f(in)g(App)q(endix)g(C)g(for)h
(the)f(other)g(cases.)22 b(By)15 b(using)293 353 y Ft(a)319
362 y Fu(D)354 353 y FB(\()p Ft(u)p FB(\))e(=)p Ft(a)497
362 y Fu(D)531 353 y FB(\()p Ft(u)578 360 y Fm(\003)599
353 y FB(\))e(+)g Ft(c)699 362 y Fu(D)734 353 y FB(\()p
Ft(u)g Fs(\000)g Ft(u)870 360 y Fm(\003)891 353 y FB(\))910
333 y Fr(1)p Fu(=\013)986 353 y FB(+)g Ft(c)1056 333
y Fm(0)1056 366 y Fu(D)1091 353 y FB(\()p Ft(u)g Fs(\000)f
Ft(u)1226 360 y Fm(\003)1248 353 y FB(\))1267 333 y Fr(1)p
Fu(=\014)1342 353 y FB(+)h Ft(o)1414 313 y Fk(\000)1437
353 y FB(\()p Ft(u)g Fs(\000)f Ft(u)1572 360 y Fm(\003)1594
353 y FB(\))1613 333 y Fr(1)p Fu(=\014)1677 313 y Fk(\001)328
437 y Ft(a)p FB(\()p Ft(u)p FB(\))j(=)p Ft(a)p FB(\()p
Ft(u)544 444 y Fm(\003)565 437 y FB(\))e(+)g Ft(c)p FB(\()p
Ft(u)f Fs(\000)h Ft(u)800 444 y Fm(\003)821 437 y FB(\))840
416 y Fr(1)p Fu(=\013)916 437 y FB(+)g Ft(c)986 416 y
Fm(0)999 437 y FB(\()p Ft(u)g Fs(\000)g Ft(u)1135 444
y Fm(\003)1156 437 y FB(\))1175 416 y Fr(1)p Fu(=\014)1250
437 y FB(+)g Ft(o)1322 396 y Fk(\000)1345 437 y FB(\()p
Ft(u)g Fs(\000)g Ft(u)1481 444 y Fm(\003)1502 437 y FB(\))1521
416 y Fr(1)p Fu(=\014)1585 396 y Fk(\001)0 558 y FB(and)24
b(the)e(relation)h Ft(\034)399 567 y Fr(e\013)469 558
y FB(=)i Ft(da)583 567 y Fu(D)618 558 y Ft(=da)p FB(,)g(w)o(e)d(deduce)
h(that)g(the)g(exp)q(onen)o(t)g Ft(\015)j FB(of)d(\(5.5\))h(is)e(giv)o
(en)h(b)o(y)f Ft(\015)29 b FB(=)0 621 y(1)p Ft(=\014)14
b Fs(\000)d FB(1)p Ft(=\013)p FB(,)17 b(and)g(th)o(us)f
Ft(!)g FB(=)e Ft(\013\015)19 b FB(is)867 725 y Ft(!)d
FB(=)970 691 y(2)c(+)f(2)p Ft(k)p 970 713 137 2 v 970
759 a FB(11)h Fs(\000)f Ft(k)1112 725 y Fs(\001)766 b
FB(\(5)p Ft(:)p FB(9\))0 846 y(This)21 b(is)g(a)g(rational)h(n)o(um)o
(b)q(er)d(whic)o(h)h(di\013ers)h(from)f(\(5.3\).)36 b(This)21
b(implies)d(that)k(despite)e(its)h(app)q(ealing)0 908
y(features,)13 b(the)f(Argyres-Douglas)i(ansatz)g(\(5.1\))f(cannot)g(b)
q(e)g(exact.)19 b(The)13 b(problem)e(of)i(\014nding)g(the)g(general)0
970 y(form)d(of)i(the)f Ft(\014)j FB(function)d(for)h(these)f(non-lo)q
(cal)i(\014eld)e(theories)g(th)o(us)g(remains)f(op)q(en.)20
b(Ma)o(yb)q(e)12 b(one)f(can)h(guess)0 1032 y(the)f(result)f(b)o(y)h
(using)g(the)g(exact)g(solutions)g(for)h Ft(\034)886
1041 y Fr(e\013)942 1032 y FB(presen)o(ted)e(in)h(this)f(pap)q(er)i
(around)g(the)f(sup)q(erconformal)0 1095 y(p)q(oin)o(ts)17
b(and)f(use)h(the)f(argumen)o(ts)f(ab)q(o)o(v)o(e)h(to)h(relate)e
Ft(\034)1001 1103 y Fr(e\013)1062 1095 y FB(and)i Ft(\034)6
b FB(.)83 1176 y(A)16 b(simple)f(insp)q(ection)h(of)h(the)g(form)o
(ulae)e(\(5.7\))i(and)g(\(5.9\))g(rev)o(eals)f(that)h(the)f(t)o(w)o(o)h
(exp)q(onen)o(ts)g Ft(\013)g FB(and)0 1238 y Ft(!)h FB(are)f(related)e
(b)o(y)851 1319 y Ft(!)h FB(=)e(2\()p Ft(\013)e Fs(\000)e
FB(1\))p Ft(:)727 b FB(\(5)p Ft(:)p FB(10\))0 1421 y(Suc)o(h)22
b(a)g(\\scaling")h(relation)e(is)h(p)q(ossible)g(b)q(ecause,)h(due)f
(to)g Ft(N)29 b FB(=)24 b(2)e(sup)q(ersymmetry)l(,)e(the)i(only)f(free)
0 1484 y(parameter)e(is)h Ft(k)j FB(and)e(th)o(us)f(one)h(exp)q(ects)f
(only)g(one)g(indep)q(enden)o(t)g(critical)f(exp)q(onen)o(t.)33
b(It)20 b(is)g(actually)0 1546 y(p)q(ossible)e(to)g(understand)g
(\(5.10\))h(on)f(general)f(grounds,)i(follo)o(wing)e(the)h(line)e(of)i
(reasoning)g(of)g([7]:)24 b(if)17 b(w)o(e)0 1608 y(denote)d(b)o(y)g
Ft(U)20 b FB(the)14 b(U\(1\))h Ft(N)k FB(=)14 b(2)h(v)o(ector)e(sup)q
(er\014eld)h(con)o(tained)g(in)h(the)f(lo)o(w)g(energy)g(e\013ectiv)o
(e)f(action)h(at)h(a)0 1671 y(generic)e(p)q(oin)o(t)h(on)h(the)f
(Coulom)o(b)f(branc)o(h,)h(a)h(deviation)f(of)g(the)g(coupling)g
(constan)o(t)h(from)e(its)h(\014xed)f(p)q(oin)o(t)0 1733
y(v)m(alue)j(corresp)q(onds)h(to)g(the)f(irrelev)m(an)o(t)f(\(since)g
(the)h(\014xed)g(p)q(oin)o(t)h(is)f(IR)f(stable\))h(op)q(erator)758
1880 y Ft(\016)r(L)815 1889 y Fr(e\013)873 1880 y FB(=)e(\003)959
1859 y Fm(\000)p Fu(!)1024 1812 y Fk(Z)1082 1880 y Ft(d)1107
1859 y Fr(4)1129 1880 y Ft(\022)9 b(U)1199 1859 y Fr(2)1221
1880 y Ft(;)0 2024 y FB(where)15 b(the)f(fermionic)f(in)o(tegration)h
(is)h(p)q(erformed)e(o)o(v)o(er)h(half)h(of)g Ft(N)20
b FB(=)13 b(2)j(sup)q(erspace.)21 b(As)15 b(the)f(dimension)0
2087 y(of)j Ft(L)89 2095 y Fr(e\013)151 2087 y FB(m)o(ust)f(b)q(e)h(4)h
(since)e(the)h(action)g(is)g(dimensionless,)e(and)i(the)g(dimension)f
(of)h Ft(d)1596 2069 y Fr(4)1618 2087 y Ft(\022)h FB(is)f(t)o(w)o(o,)f
(w)o(e)h(m)o(ust)0 2149 y(ha)o(v)o(e)d Fs(\000)p Ft(!)c
FB(+)f Ft(d)262 2159 y Fu(U)292 2148 y Fn(2)325 2149
y FB(=)14 b(2)h(where)g Ft(d)581 2159 y Fu(U)611 2148
y Fn(2)646 2149 y FB(is)f(the)h(dimension)e(of)j(the)e(op)q(erator)i
Ft(U)1375 2131 y Fr(2)1397 2149 y FB(.)21 b(Because)14
b(of)h Fv(sup)n(er)p FB(conformal)0 2211 y(in)o(v)m(ariance,)24
b(w)o(e)f(m)o(ust)f(ha)o(v)o(e)h Ft(d)605 2221 y Fu(U)635
2210 y Fn(2)682 2211 y FB(=)j(2)p Ft(d)795 2220 y Fu(U)854
2211 y FB(=)g(2)p Ft(\013)f FB(b)q(ecause)f(these)f(scaling)g
(dimensions)g(are)g(directly)0 2274 y(prop)q(ortional)18
b(to)g(the)f(R)g(c)o(harges)g(of)h Ft(U)k FB(and)c Ft(U)899
2255 y Fr(2)938 2274 y FB(under)f(the)g(exact)g Fv(quantum)h
FB(U\(1\))1591 2282 y Fu(R)1639 2274 y FB(symmetry)c(of)k(the)0
2336 y(sup)q(erconformal)i(algebra.)36 b(W)l(e)21 b(th)o(us)g(reco)o(v)
o(er)e(the)i(relation)f(\(5.10\).)36 b(Con)o(v)o(ersely)l(,)21
b(one)g(can)g(consider)0 2398 y(\(5.10\))c(as)g(a)f(non-trivial)g(test)
g(that)h(the)f(theory)g(has)h(indeed)f Ft(N)j FB(=)13
b(2)k(sup)q(erconformal)f(in)o(v)m(ariance.)976 2883
y Fp(42)p eop
%%Page: 44 44
44 43 bop 773 160 a Fz(APPENDIX)18 b(A)83 264 y FB(F)l(or)13
b(reference,)f(in)h(this)g(app)q(endix)h(w)o(e)f(brie\015y)f(discuss)i
(the)f(p)q(ositions)h(of)g(the)f(singularities)f(and)i(their)0
326 y(\015o)o(ws)k(for)f(the)g(massiv)o(e)f Ft(N)502
335 y Fu(f)542 326 y FB(=)g(1)p Ft(;)8 b FB(2)p Ft(;)g
FB(3)18 b(theories.)24 b(F)l(or)17 b(simplicit)n(y)l(,)d(all)j
(non-zero)h(bare)f(masses)g(are)g(tak)o(en)0 388 y(to)g(b)q(e)f(equal.)
0 480 y Ft(N)39 488 y Fu(f)78 480 y FB(=)d(3)k(with)f
Ft(m)324 487 y Fr(1)359 480 y FB(=)e Ft(m)454 487 y Fr(2)489
480 y FB(=)f Ft(m)583 487 y Fr(3)618 480 y Fs(\021)h
Ft(m)p 0 501 714 2 v 83 560 a FB(F)l(or)j Ft(m)d Fs(6)p
FB(=)h(0)i(the)g(\015a)o(v)o(our)g(symmetry)c(is)k(SU)o(\(3\),)g(while)
f(for)h Ft(m)e FB(=)f(0)j(it)g(is)f(spin\(6\))f Fs(')g
FB(SU\(4\).)23 b(F)l(or)17 b(the)0 622 y(presen)o(t)f(case,)f(the)h
(discriminan)o(t)e(of)j(the)f(cubic)f(p)q(olynomial)g(\(2.1\),)h
(\(2.2\))h(in)f Ft(x)g FB(is)252 765 y(\001)d(=)363 731
y(\003)397 713 y Fr(2)397 745 y(3)p 363 754 56 2 v 366
799 a FB(16)432 695 y Fk(\022)468 765 y Fs(\000)p Ft(u)e
FB(+)g Ft(m)638 745 y Fr(2)670 765 y FB(+)724 731 y(\003)758
738 y Fr(3)p 724 754 V 739 799 a FB(8)784 765 y Ft(m)827
695 y Fk(\023)863 706 y Fr(3)434 905 y Fs(\002)484 835
y Fk(\024)510 905 y Ft(u)538 885 y Fr(2)571 905 y FB(+)620
835 y Fk(\022)661 872 y FB(3)p 661 894 25 2 v 661 940
a(8)691 905 y(\003)725 912 y Fr(3)746 905 y Ft(m)f Fs(\000)863
872 y FB(\003)897 854 y Fr(2)897 886 y(3)p 854 894 74
2 v 854 940 a FB(256)932 835 y Fk(\023)977 905 y Ft(u)h
Fs(\000)g FB(\003)1100 912 y Fr(3)1121 905 y Ft(m)1164
885 y Fr(3)1196 905 y Fs(\000)1275 872 y FB(3)p 1251
894 V 1251 940 a(256)1329 905 y(\003)1363 885 y Fr(2)1363
918 y(3)1384 905 y Ft(m)1427 885 y Fr(2)1459 905 y Fs(\000)1551
872 y FB(3)p 1514 894 98 2 v 1514 940 a(2048)1617 905
y(\003)1651 885 y Fr(3)1651 918 y(3)1672 905 y Ft(m)1715
835 y Fk(\025)1880 830 y FB(\(A)p Ft(:)p FB(1\))0 1038
y(sho)o(wing)19 b(that)f(there)f(is)h(a)g(triple)f(singularit)o(y)g
Ft(\033)917 1045 y Fu(t)933 1038 y FB(,)h(transforming)f(as)i(the)f
Fo(3)g FB(of)g(SU)o(\(3\),)h(and)f(t)o(w)o(o)g(singlet)0
1100 y(singularities)e Ft(\033)300 1107 y Fm(\006)347
1100 y FB(at)283 1245 y Ft(\033)311 1252 y Fu(t)341 1245
y FB(=)e Ft(m)436 1225 y Fr(2)468 1245 y FB(+)522 1211
y(\003)556 1218 y Fr(3)p 522 1234 56 2 v 537 1279 a FB(8)582
1245 y Ft(m)48 b(;)57 b(\033)772 1252 y Fm(\006)817 1245
y FB(=)14 b Fs(\000)925 1211 y FB(3)p 913 1234 49 2 v
913 1279 a(16)967 1245 y(\003)1001 1252 y Fr(3)1022 1245
y Ft(m)c FB(+)1138 1211 y(\003)1172 1193 y Fr(2)1172
1225 y(3)p 1129 1234 74 2 v 1129 1279 a FB(512)1219 1245
y Fs(\006)g FB(\003)1302 1219 y Fr(1)p Fu(=)p Fr(2)1302
1260 y(3)1370 1175 y Fk(\022)1407 1245 y Ft(m)h FB(+)1515
1211 y(\003)1549 1218 y Fr(3)p 1515 1234 56 2 v 1518
1279 a FB(64)1575 1175 y Fk(\023)1611 1186 y Fr(3)p Fu(=)p
Fr(2)1696 1245 y Ft(:)170 b FB(\(A)p Ft(:)p FB(2\))0
1394 y(F)l(or)20 b(small)f Ft(m)h FB(one)g(has)h Ft(\033)498
1401 y Fr(+)551 1394 y Fs(')622 1372 y Fr(\003)649 1356
y Fn(2)649 1379 y(3)p 615 1383 58 2 v 615 1411 a Fr(256)698
1394 y FB(and)g Ft(\033)825 1401 y Fm(\000)877 1394 y
Fs(')f(\000)980 1374 y Fr(3)p 980 1383 20 2 v 980 1411
a(8)1004 1394 y FB(\003)1038 1401 y Fr(3)1059 1394 y
Ft(m)p FB(,)h(and)g(at)f Ft(m)h FB(=)f(0,)h Ft(\033)1508
1401 y Fm(\000)1560 1394 y FB(and)g Ft(\033)1687 1401
y Fu(t)1723 1394 y FB(coincide)e(and)0 1456 y(one)c(has)h(a)g
(quadruple)f(singularit)o(y)f(at)h Ft(u)f FB(=)g(0)h(corresp)q(onding)h
(to)g(a)f(massless)g(dy)o(on)g(of)g(magnetic)f(c)o(harge)0
1518 y(one)19 b(whic)o(h)e(transforms)i(as)g(the)f Fo(4)h
FB(of)f(SU\(4\).)28 b(The)19 b(singularit)o(y)f(at)g
Ft(\033)1335 1525 y Fr(+)1386 1518 y FB(is)g(due)g(to)h(a)g(massless)f
(dy)o(on)g(of)0 1580 y(magnetic)d(c)o(harge)i(t)o(w)o(o)g([2])g(\(see)f
(Fig.)23 b(2\).)h(As)17 b Ft(m)g FB(is)g(increased,)f(the)h(singlet)f
Ft(\033)1488 1587 y Fm(\000)1537 1580 y FB(mo)o(v)o(es)f(to)i(the)g
(left)f(and)0 1642 y(the)g(triplet)f(mo)o(v)o(es)f(to)j(the)f(righ)o
(t.)21 b(The)16 b(singularities)g Ft(\033)1059 1649 y
Fu(t)1090 1642 y FB(and)h Ft(\033)1213 1649 y Fr(+)1261
1642 y FB(meet)d(at)608 1777 y Ft(m)g FB(=)721 1743 y(\003)755
1750 y Fr(3)p 721 1765 56 2 v 737 1811 a FB(8)830 1777
y Ft(;)57 b(\033)929 1784 y Fu(t)958 1777 y FB(=)14 b
Ft(\033)1038 1784 y Fr(+)1084 1777 y FB(=)1140 1743 y(\003)1174
1725 y Fr(2)1174 1757 y(3)p 1140 1765 V 1143 1811 a FB(32)1214
1777 y(=)g(2)p Ft(m)1333 1756 y Fr(2)1371 1777 y Ft(:)495
b FB(\(A)p Ft(:)p FB(3\))0 1893 y(whic)o(h)18 b(is)g(the)h(sup)q
(erconformal)f(p)q(oin)o(t.)28 b(As)18 b Ft(m)h FB(is)f(increased)g
(further,)h(as)g(discussed)f(in)h(Section)f(2,)h(the)0
1955 y(quan)o(tum)14 b(n)o(um)o(b)q(ers)g(at)i(the)f(singularities)g
(are)g(c)o(hanged)h(and)g(no)o(w)f(are)h(\(1)p Ft(;)8
b FB(1\))1465 1962 y Fr(0)1502 1955 y FB(and)16 b(\()p
Fs(\000)p FB(1)p Ft(;)8 b FB(1\))1743 1962 y Fr(0)1780
1955 y FB(at)16 b Ft(\033)1867 1962 y Fm(\000)1914 1955
y FB(and)0 2017 y Ft(\033)28 2024 y Fr(+)74 2017 y FB(and)e(a)h(quark)f
(triplet)e(at)j Ft(\033)573 2024 y Fu(t)588 2017 y FB(.)21
b(The)14 b(latter)f(disapp)q(ears)i(to)g(in\014nit)o(y)e(as)h
Ft(m)g Fs(!)f(1)p FB(,)h(\003)1602 2024 y Fr(3)1637 2017
y Fs(!)g FB(0,)g Ft(m)1796 1999 y Fr(3)1817 2017 y FB(\003)1851
2024 y Fr(3)1886 2017 y FB(=)f(\003)1971 1999 y Fr(4)1971
2031 y(0)0 2079 y FB(\014xed,)20 b(while)f Ft(\033)295
2086 y Fm(\006)347 2079 y Fs(!)h(\006)p FB(\003)490 2061
y Fr(2)490 2093 y(0)511 2079 y FB(,)g(and)h(indeed,)f(\(after)f
(rotating)i(the)f(quark)g(cut)g(to)g(the)g(righ)o(t)f(and)i(shifting)0
2141 y Ft(a)26 2149 y Fu(D)74 2141 y Fs(!)14 b Ft(a)164
2149 y Fu(D)209 2141 y FB(+)d Ft(a)p FB(\))16 b(w)o(e)g(are)g(left)g
(with)g(the)g(pure)g(gauge)h(theory)f Ft(N)1194 2150
y Fu(f)1233 2141 y FB(=)e(0.)0 2233 y Ft(N)39 2241 y
Fu(f)78 2233 y FB(=)f(3)k(with)f Ft(m)324 2240 y Fr(1)359
2233 y FB(=)e Ft(m)454 2240 y Fr(2)489 2233 y FB(=)f(0)k(and)g
Ft(m)719 2240 y Fr(3)754 2233 y Fs(\021)c Ft(m)p 0 2254
849 2 v 83 2348 a FB(F)l(or)i(this)f(case,)g(the)g(ro)q(ots)i(of)e(the)
h(cubic)e(are)h(at)h Ft(x)f FB(=)f Ft(u)i FB(and)g Ft(x)e
FB(=)1313 2326 y Fr(\003)1340 2310 y Fn(2)1340 2332 y(3)p
1306 2336 58 2 v 1306 2365 a Fr(128)1376 2348 y Fs(\006)1422
2293 y Fk(h)1457 2326 y Fr(\003)1484 2310 y Fn(2)1484
2332 y(3)p 1450 2336 V 1450 2365 a Fr(256)1521 2293 y
Fk(\020)1556 2326 y Fr(\003)1583 2310 y Fn(2)1583 2332
y(3)p 1556 2336 44 2 v 1559 2365 a Fr(64)1616 2348 y
Fs(\000)d FB(4)p Ft(u)i FB(+)f(4)p Ft(m)1845 2330 y Fr(2)1866
2293 y Fk(\021i)1919 2304 y Fr(1)p Fu(=)p Fr(2)1979 2348
y FB(.)0 2427 y(Th)o(us)17 b(there)e(is)h(a)h(singlet)f(singularit)o(y)
f(at)i Ft(\033)822 2434 y Fu(s)858 2427 y FB(and)f(t)o(w)o(o)h(doublet)
f(singularities)f(at)i Ft(\033)1582 2407 y Fm(\006)1580
2444 y Fu(d)1613 2427 y FB(:)625 2567 y Ft(\033)653 2574
y Fu(s)686 2567 y FB(=)d Ft(m)781 2547 y Fr(2)813 2567
y FB(+)876 2534 y(\003)910 2516 y Fr(2)910 2548 y(3)p
867 2556 74 2 v 867 2602 a FB(256)994 2567 y Ft(;)56
b(\033)1094 2547 y Fm(\006)1092 2584 y Fu(d)1140 2567
y FB(=)14 b Fs(\006)1236 2534 y FB(\003)1270 2541 y Fr(3)p
1236 2556 56 2 v 1251 2602 a FB(8)1295 2567 y Ft(m)i(:)512
b FB(\(A)p Ft(:)p FB(4\))0 2684 y(As)19 b Ft(m)f FB(is)h(increased)f
(from)g(0,)h(the)g(quadruple)f(singularit)o(y)g(at)h(the)g(origin)g
(splits)f(in)o(to)h(t)o(w)o(o)f(doublets)h(of)0 2746
y(massless)c(monop)q(oles)h(\(ha)o(ving)f(di\013eren)o(t)g(v)m(alues)h
(of)g Ft(s)p FB(\))g(while)f(the)g(singlet)h(at)g Ft(\033)1510
2753 y Fu(s)1545 2746 y FB(starts)h(to)f(mo)o(v)o(e)e(to)i(the)976
2883 y Fp(43)p eop
%%Page: 45 45
45 44 bop 0 161 a FB(righ)o(t.)21 b(But)16 b Ft(\033)264
140 y Fr(+)262 178 y Fu(d)311 161 y FB(mo)o(v)o(es)f(faster)h(to)h(the)
f(righ)o(t)g(and)g(meets)f Ft(\033)1114 168 y Fu(s)1150
161 y FB(at)h(the)g(sup)q(erconformal)g(p)q(oin)o(t)596
319 y Ft(m)e FB(=)710 286 y(\003)744 293 y Fr(3)p 710
308 56 2 v 713 353 a FB(16)818 319 y Ft(;)57 b(\033)919
299 y Fr(+)917 336 y Fu(d)964 319 y FB(=)14 b Ft(\033)1044
326 y Fu(s)1078 319 y FB(=)1143 286 y(\003)1177 267 y
Fr(2)1177 299 y(3)p 1134 308 74 2 v 1134 353 a FB(128)1226
319 y(=)g(2)p Ft(m)1345 299 y Fr(2)1383 319 y Ft(:)483
b FB(\(A)p Ft(:)p FB(5\))0 464 y(As)13 b Ft(m)g FB(is)g(increased)f(b)q
(ey)o(ond)551 445 y Fr(\003)578 449 y Fn(3)p 551 453
44 2 v 554 481 a Fr(16)600 464 y FB(,)h Ft(\033)655 471
y Fu(s)688 464 y FB(remains)f(larger)h(than)g Ft(\033)1142
444 y Fr(+)1140 481 y Fu(d)1187 464 y FB(and)h(the)f(singularit)o(y)f
(at)i Ft(\033)1683 471 y Fu(s)1716 464 y FB(is)f(no)o(w)g(due)g(to)0
529 y(a)g(\(singlet\))f(massless)h(quark,)g(while)e(the)i(other)g(t)o
(w)o(o)g(doublet)f(states)i(at)f Ft(\033)1377 508 y Fr(+)1375
546 y Fu(d)1421 529 y FB(and)h Ft(\033)1543 508 y Fm(\000)1541
546 y Fu(d)1587 529 y FB(no)o(w)f(are)g(a)g(magnetic)0
592 y(monop)q(ole)j(and)h(the)f(dy)o(on)g(with)g Ft(n)659
599 y Fu(e)693 592 y FB(=)e Fs(\007)p FB(1)i(b)q(oth)h(ha)o(ving)g(v)m
(anishing)f Ft(s)p FB(.)22 b(As)16 b Ft(m)d Fs(!)h(1)p
FB(,)h Ft(m)p FB(\003)1719 599 y Fr(3)1754 592 y FB(=)f(\003)1840
574 y Fr(2)1840 606 y(2)1877 592 y FB(\014xed,)0 665
y(the)20 b(massless)f(quark)h(at)g Ft(\033)518 672 y
Fu(s)558 665 y FB(dissapp)q(ears)h(to)f(in\014nit)o(y)l(,)g(while)f
Ft(\033)1228 645 y Fm(\006)1226 682 y Fu(d)1279 665 y
Fs(!)h(\006)1393 643 y Fr(\003)1420 627 y Fn(2)1420 650
y(2)p 1393 654 V 1405 682 a Fr(8)1442 665 y FB(,)g(and)h(one)f(is)g
(left)f(with)h(the)0 728 y(massless)15 b Ft(N)232 736
y Fu(f)271 728 y FB(=)f(2)j(theory)l(.)0 824 y Ft(N)39
833 y Fu(f)78 824 y FB(=)c(2)k(with)f Ft(m)324 831 y
Fr(1)359 824 y FB(=)e Ft(m)454 831 y Fr(2)489 824 y Fs(\021)f
Ft(m)p 0 846 584 2 v 83 905 a FB(This)j(case)h(w)o(as)f(discussed)h(in)
e(great)i(detail)f(in)f(the)i(main)d(b)q(o)q(dy)k(of)e(this)g(pap)q
(er,)h(see)f(Section)f(2.)0 1001 y Ft(N)39 1010 y Fu(f)78
1001 y FB(=)e(2)k(with)f Ft(m)324 1008 y Fr(1)359 1001
y FB(=)e(0)i(and)h Ft(m)589 1008 y Fr(2)624 1001 y Fs(\021)d
Ft(m)p 0 1023 720 2 v 83 1083 a FB(In)i(this)g(case)g(the)g(\015a)o(v)o
(our)g(symmetry)d(is)j(only)g(U\(1\))11 b Fs(\002)g FB(U\(1\))16
b(for)g Ft(m)e Fs(6)p FB(=)g(0.)21 b(The)c(discriminan)o(t)c(of)k(the)0
1145 y(cubic)e(is)314 1245 y(\001)e(=)425 1211 y(\003)459
1193 y Fr(4)459 1225 y(2)p 425 1233 56 2 v 428 1279 a
FB(16)494 1174 y Fk(\024)520 1245 y Ft(u)548 1224 y Fr(4)580
1245 y Fs(\000)e Ft(m)673 1224 y Fr(2)694 1245 y Ft(u)722
1224 y Fr(3)754 1245 y Fs(\000)809 1211 y FB(\003)843
1193 y Fr(4)843 1225 y(2)p 809 1233 V 812 1279 a FB(32)869
1245 y Ft(u)897 1224 y Fr(2)929 1245 y FB(+)995 1211
y(9)p 983 1233 49 2 v 983 1279 a(64)1037 1245 y(\003)1071
1224 y Fr(4)1071 1257 y(2)1092 1245 y Ft(m)1135 1224
y Fr(2)1156 1245 y Ft(u)g FB(+)1270 1211 y(\003)1304
1193 y Fr(8)1304 1225 y(2)p 1249 1233 98 2 v 1249 1279
a FB(4096)1362 1245 y Fs(\000)1429 1211 y FB(27)p 1417
1233 74 2 v 1417 1279 a(256)1495 1245 y(\003)1529 1224
y Fr(4)1529 1257 y(2)1550 1245 y Ft(m)1593 1224 y Fr(4)1614
1174 y Fk(\025)1665 1245 y Ft(:)201 b FB(\(A)p Ft(:)p
FB(6\))0 1371 y(F)l(or)15 b Ft(m)f FB(=)f(0)j(w)o(e)e(ha)o(v)o(e)g(t)o
(w)o(o)h(doublets)g(of)h(massless)e(monop)q(oles)g(and)i(dy)o(ons)f(in)
g(one)g(and)g(the)g(other)g(spinor)0 1440 y(represen)o(tation)f(of)i
(spin\(4\))f(at)g Ft(u)f FB(=)g Fs(\006)732 1417 y Fr(\003)759
1401 y Fn(2)759 1424 y(2)p 731 1428 44 2 v 744 1457 a
Fr(8)780 1440 y FB(.)21 b(F)l(or)15 b(small)f(non-zero)h(mass)g
Ft(m)f FB(eac)o(h)h(of)g(these)g(doublets)g(splits)0
1502 y(in)o(to)h(t)o(w)o(o)g(singlets)g(at)330 1653 y
Ft(\033)360 1633 y Fm(\006)358 1666 y(\000)405 1653 y
FB(=)e Fs(\000)501 1619 y FB(\003)535 1601 y Fr(2)535
1633 y(2)p 501 1642 56 2 v 516 1687 a FB(8)572 1653 y
Fs(\006)627 1619 y FB(\003)661 1626 y Fr(2)p 627 1642
V 642 1687 a FB(2)687 1653 y Ft(m)d FB(+)g Fs(O)q FB(\()p
Ft(m)893 1633 y Fr(2)914 1653 y FB(\))48 b Ft(;)57 b(\033)1082
1633 y Fm(\006)1080 1666 y Fr(+)1127 1653 y FB(=)1184
1619 y(\003)1218 1601 y Fr(2)1218 1633 y(2)p 1184 1642
V 1200 1687 a FB(8)1255 1653 y Fs(\006)11 b Ft(i)1327
1619 y FB(\003)1361 1626 y Fr(2)p 1327 1642 V 1342 1687
a FB(2)1387 1653 y Ft(m)g FB(+)g Fs(O)q FB(\()p Ft(m)1593
1633 y Fr(2)1614 1653 y FB(\))16 b Ft(:)217 b FB(\(A)p
Ft(:)p FB(7\))760 2280 y @beginspecial 0 @llx 0 @lly
248 @urx 232 @ury 1133 @rwi @setspecial
%%BeginDocument: rgf1.eps
%Magnification: 0.80
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-41.0 289.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 842 m 0 0 l 595 0 l 595 842 l cp clip
 0.04800 0.04800 sc
7.500 slw
% Polyline
gs  clippath
5853 3570 m 5973 3600 l 5853 3630 l 6015 3630 l 6015 3570 l  cp clip
n 1200 3600 m 6000 3600 l gs col-1 s gr gr

% arrowhead
n 5853 3570 m 5973 3600 l 5853 3630 l 5853 3600 l 5853 3570 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 1650 3750 m 1950 3450 l gs col-1 s gr 
% Polyline
n 1650 3450 m 1950 3750 l gs col-1 s gr 
% Polyline
n 2850 3450 m 3150 3750 l gs col-1 s gr 
% Polyline
n 2850 3750 m 2850 3750 l 3150 3450 l gs col-1 s gr 
% Polyline
n 4800 2850 m 5100 3150 l gs col-1 s gr 
% Polyline
n 4800 3150 m 5100 2850 l gs col-1 s gr 
% Polyline
n 4800 4050 m 5100 4350 l gs col-1 s gr 
% Polyline
n 4800 4350 m 5100 4050 l gs col-1 s gr 
% Polyline
gs  clippath
1341 3690 m 981 3600 l 1341 3510 l 855 3510 l 855 3690 l  cp clip
n 1800 3600 m 900 3600 l gs col-1 s gr gr

% arrowhead
n 1341 3690 m 981 3600 l 1341 3510 l 1341 3600 l 1341 3690 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
3759 3510 m 4119 3600 l 3759 3690 l 4245 3690 l 4245 3510 l  cp clip
n 3000 3600 m 4200 3600 l gs col-1 s gr gr

% arrowhead
n 3759 3510 m 4119 3600 l 3759 3690 l 3759 3600 l 3759 3510 l  cp gs 0.00 setgray ef gr  col-1 s
% Interp Spline
gs  clippath
4941 2484 m 5147 2176 l 5110 2545 l 5275 2088 l 5106 2027 l  cp clip
n 4950 3000 m
	4987.3 2738.7 5006.1 2626.2 5025 2550 curveto
	5044.7 2470.8 5082.2 2358.3 5175 2100 curveto
 gs col-1 s gr
 gr

% arrowhead
n 4941 2484 m 5147 2176 l 5110 2545 l 5025 2515 l 4941 2484 l  cp gs 0.00 setgray ef gr  col-1 s
7.500 slw
% Polyline
gs  clippath
3570 1347 m 3600 1227 l 3630 1347 l 3630 1185 l 3570 1185 l  cp clip
n 3600 6000 m 3600 1200 l gs col-1 s gr gr

% arrowhead
n 3570 1347 m 3600 1227 l 3630 1347 l 3600 1347 l 3570 1347 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Interp Spline
gs  clippath
5110 4655 m 5147 5023 l 4941 4716 l 5106 5173 l 5275 5112 l  cp clip
n 4950 4200 m
	4987.3 4461.3 5006.1 4573.8 5025 4650 curveto
	5044.7 4729.2 5082.2 4841.7 5175 5100 curveto
 gs col-1 s gr
 gr

% arrowhead
n 5110 4655 m 5147 5023 l 4941 4716 l 5025 4685 l 5110 4655 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
5625 2925 m
gs 1 -1 sc (+) col-1 sh gr
/Symbol ff 360.00 scf sf
1650 4350 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
1875 4500 m
gs 1 -1 sc (-) col-1 sh gr
/Symbol ff 360.00 scf sf
1875 4125 m
gs 1 -1 sc (-) col-1 sh gr
/Symbol ff 360.00 scf sf
2850 4350 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
3075 4500 m
gs 1 -1 sc (-) col-1 sh gr
/Symbol ff 360.00 scf sf
3075 4125 m
gs 1 -1 sc (+) col-1 sh gr
/Symbol ff 360.00 scf sf
5400 4350 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
5625 4500 m
gs 1 -1 sc (+) col-1 sh gr
/Symbol ff 360.00 scf sf
5625 4125 m
gs 1 -1 sc (-) col-1 sh gr
/Symbol ff 360.00 scf sf
5400 3150 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
5625 3300 m
gs 1 -1 sc (+) col-1 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 118 2394 a Fo(Fig.)25 b(19:)c FB(The)16
b(\015o)o(w)h(of)g(the)f(singularities)f(on)i(the)f(complex)e
Ft(u)p FB(-plane)j(for)f Ft(N)1575 2403 y Fu(f)1614 2394
y FB(=)e(2,)i Ft(m)1763 2401 y Fr(1)1798 2394 y FB(=)e(0)118
2450 y(and)j(small)e Ft(m)384 2457 y Fr(2)418 2450 y
FB(=)f Ft(m)83 2616 y FB(Tw)o(o)22 b(singularities)f(mo)o(v)o(e)e
(o\013)j(the)g(real)f(axis)g(in)o(to)g(the)g(complex)f(plane,)i(see)f
(Fig.)37 b(19.)g(As)22 b Ft(m)f FB(is)0 2678 y(increased)g
Ft(\033)247 2657 y Fr(+)245 2691 y Fm(\000)300 2678 y
FB(mo)o(v)o(es)e(to)j(the)f(righ)o(t)g(on)h(the)f(real)g(axis,)h(m)o
(uc)o(h)e(faster)h(than)h(the)f(other)h(singularities.)0
2742 y(It)f(passes)g(b)q(et)o(w)o(een)f Ft(\033)432 2721
y Fr(+)430 2755 y(+)485 2742 y FB(and)h Ft(\033)614 2721
y Fm(\000)612 2755 y Fr(+)668 2742 y FB(=)g(\()p Ft(\033)776
2721 y Fr(+)774 2755 y(+)808 2742 y FB(\))827 2724 y
Fm(\003)848 2742 y FB(.)35 b(As)21 b Ft(m)h Fs(!)f(1)p
FB(,)h Ft(\033)1226 2721 y Fr(+)1224 2755 y Fm(\000)1279
2742 y Fs(!)g(1)p FB(,)f(while)f Ft(\033)1598 2721 y
Fm(\000)1596 2755 y(\000)1651 2742 y FB(and)h Ft(\033)1780
2721 y Fm(\006)1778 2755 y Fr(+)1833 2742 y FB(arrange)976
2883 y Fp(44)p eop
%%Page: 46 46
46 45 bop 0 162 a FB(themselv)o(es)14 b(on)k(a)f(circle)e(at)i(the)g
(ro)q(ots)i(of)e Ft(u)837 144 y Fr(3)869 162 y FB(+)934
142 y Fr(27)p 924 150 58 2 v 924 179 a(256)986 162 y
FB(\003)1020 144 y Fr(4)1020 176 y(2)1042 162 y Ft(m)1085
144 y Fr(2)1121 162 y FB(=)e(0.)24 b(Since)16 b Ft(m)p
FB(\003)1441 144 y Fr(2)1441 176 y(2)1477 162 y FB(=)f(\003)1564
144 y Fr(3)1564 176 y(1)1602 162 y FB(these)h(are)h(precisely)0
224 y(the)24 b(singularities)f(of)h(the)f(massless)g
Ft(N)765 233 y Fu(f)817 224 y FB(=)k(1)d(theory)l(.)44
b(In)23 b(the)h(presen)o(t)f(case,)i(while)e(\015o)o(wing)i(from)0
286 y Ft(m)20 b FB(=)f(0)i(to)f Ft(m)f FB(=)h Fs(1)p
FB(,)g(w)o(e)g(nev)o(er)e(encoun)o(ter)h(a)i(sup)q(erconformal)e(p)q
(oin)o(t)h(where)f(singularities)g(coincide.)0 349 y(Nev)o(ertheless,)c
(the)i(quan)o(tum)f(n)o(um)o(b)q(ers)g(of)i(the)f(massless)g(states)h
(c)o(hange)f(b)o(y)g(the)g(mono)q(drom)o(y)f(matrix)0
411 y(of)h(another)f(singularit)o(y)g(as)h(explained)e(in)h(Section)f
(2.)0 507 y(The)h Ft(N)139 516 y Fu(f)178 507 y FB(=)e(1)i(theory)p
0 529 408 2 v 83 587 a(The)g(discriminan)o(t)e(is)431
728 y(\001)g(=)542 694 y(\003)576 676 y Fr(6)576 708
y(1)p 542 717 56 2 v 545 762 a FB(16)611 658 y Fk(\024)637
728 y Fs(\000)p Ft(u)704 708 y Fr(3)736 728 y FB(+)d
Ft(m)828 708 y Fr(2)849 728 y Ft(u)877 708 y Fr(2)909
728 y FB(+)963 694 y(9)p 963 717 25 2 v 963 762 a(8)992
728 y(\003)1026 708 y Fr(3)1026 740 y(1)1047 728 y Ft(mu)g
Fs(\000)g FB(\003)1213 708 y Fr(3)1213 740 y(1)1234 728
y Ft(m)1277 708 y Fr(3)1309 728 y Fs(\000)1376 694 y
FB(27)p 1364 717 74 2 v 1364 762 a(256)1442 728 y(\003)1476
708 y Fr(6)1476 740 y(1)1497 658 y Fk(\025)1548 728 y
Ft(:)318 b FB(\(A)p Ft(:)p FB(8\))0 875 y(The)16 b(p)q(ositions)h(of)g
(the)f(singularities)f(are)i(giv)o(en)e(b)o(y)h(the)g(three)f(ro)q(ots)
j(of)f(this)f(cubic)f(p)q(olynomial)g(in)h Ft(u)p FB(:)334
1025 y Ft(\033)362 1032 y Fr(0)397 1025 y FB(=)e Ft(\013)480
1032 y Fr(+)523 1025 y FB(+)d Ft(\013)603 1032 y Fm(\000)646
1025 y FB(+)700 992 y Ft(m)743 973 y Fr(2)p 700 1014
64 2 v 720 1059 a FB(3)817 1025 y Ft(;)57 b(\033)916
1032 y Fm(\006)962 1025 y FB(=)13 b(e)1035 1005 y Fm(\006)p
Fr(2)p Fu(i\031)q(=)p Fr(3)1161 1025 y Ft(\013)1192 1032
y Fr(+)1235 1025 y FB(+)e(e)1306 1005 y Fm(\007)p Fr(2)p
Fu(i\031)q(=)p Fr(3)1432 1025 y Ft(\013)1463 1032 y Fm(\000)1506
1025 y FB(+)1560 992 y Ft(m)1603 973 y Fr(2)p 1560 1014
V 1580 1059 a FB(3)1645 1025 y Ft(:)221 b FB(\(A)p Ft(:)p
FB(9\))0 1159 y(The)16 b(massless)g(states)g(are)h(all)f(singlets.)k
(The)d Ft(\013)906 1166 y Fm(\006)954 1159 y FB(are)f(giv)o(en)g(b)o(y)
174 1352 y Ft(\013)205 1359 y Fm(\006)251 1352 y FB(=)307
1318 y(1)p 307 1340 25 2 v 307 1386 a(3)345 1249 y Fk(8)345
1294 y(<)345 1384 y(:)389 1352 y Ft(m)432 1331 y Fr(6)464
1352 y Fs(\000)519 1318 y FB(135)p 519 1340 74 2 v 531
1386 a(16)597 1352 y(\003)631 1331 y Fr(3)631 1364 y(1)652
1352 y Ft(m)695 1331 y Fr(3)727 1352 y Fs(\000)782 1318
y FB(729)p 782 1340 V 782 1386 a(512)860 1352 y(\003)894
1331 y Fr(6)894 1364 y(1)927 1352 y Fs(\006)976 1266
y Fk(")1006 1352 y FB(27\003)1088 1331 y Fr(3)1088 1364
y(1)1118 1281 y Fk(\022)1159 1318 y FB(27)p 1159 1340
49 2 v 1159 1386 a(64)1213 1352 y(\003)1247 1331 y Fr(3)1247
1364 y(1)1279 1352 y Fs(\000)11 b Ft(m)1372 1331 y Fr(3)1393
1281 y Fk(\023)1430 1293 y Fr(3)1451 1266 y Fk(#)1480
1278 y Fr(1)p Fu(=)p Fr(2)1540 1249 y Fk(9)1540 1294
y(=)1540 1384 y(;)1584 1263 y Fr(1)p Fu(=)p Fr(3)1668
1352 y Ft(:)174 b FB(\(A)p Ft(:)p FB(10\))51 1925 y @beginspecial
0 @llx 0 @lly 479 @urx 88 @ury 4535 @rwi @setspecial
%%BeginDocument: rgf2.eps
%Magnification: 0.40
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-6.0 116.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 842 m 0 0 l 595 0 l 595 842 l cp clip
 0.02400 0.02400 sc
7.500 slw
% Polyline
gs  clippath
4053 2970 m 4173 3000 l 4053 3030 l 4215 3030 l 4215 2970 l  cp clip
n 600 3000 m 4200 3000 l gs col-1 s gr gr

% arrowhead
n 4053 2970 m 4173 3000 l 4053 3030 l 4053 3000 l 4053 2970 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 1050 3150 m 1350 2850 l gs col-1 s gr 
% Polyline
n 1050 2850 m 1350 3150 l gs col-1 s gr 
% Polyline
n 2850 2100 m 3150 1800 l gs col-1 s gr 
% Polyline
n 2850 1800 m 3150 2100 l gs col-1 s gr 
% Polyline
n 2850 3900 m 3150 4200 l gs col-1 s gr 
% Polyline
n 2850 4200 m 3150 3900 l gs col-1 s gr 
% Polyline
gs  clippath
741 3090 m 381 3000 l 741 2910 l 255 2910 l 255 3090 l  cp clip
n 1200 3000 m 300 3000 l gs col-1 s gr gr

% arrowhead
n 741 3090 m 381 3000 l 741 2910 l 741 3000 l 741 3090 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
3300 2276 m 3408 2630 l 3146 2368 l 3396 2785 l 3550 2692 l  cp clip
n 3000 1950 m 3450 2700 l gs col-1 s gr gr

% arrowhead
n 3300 2276 m 3408 2630 l 3146 2368 l 3223 2322 l 3300 2276 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
3146 3632 m 3408 3369 l 3300 3724 l 3550 3308 l 3396 3215 l  cp clip
n 3000 4050 m 3450 3300 l gs col-1 s gr gr

% arrowhead
n 3146 3632 m 3408 3369 l 3300 3724 l 3223 3678 l 3146 3632 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
1050 3600 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
1275 3825 m
gs 1 -1 sc (0) col-1 sh gr
/Symbol ff 360.00 scf sf
3300 1800 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
3525 2025 m
gs 1 -1 sc (+) col-1 sh gr
/Symbol ff 360.00 scf sf
3300 4500 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
3525 4725 m
gs 1 -1 sc (-) col-1 sh gr
7.500 slw
% Polyline
gs  clippath
11028 2970 m 11148 3000 l 11028 3030 l 11190 3030 l 11190 2970 l  cp clip
n 7575 3000 m 11175 3000 l gs col-1 s gr gr

% arrowhead
n 11028 2970 m 11148 3000 l 11028 3030 l 11028 3000 l 11028 2970 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
9345 1347 m 9375 1227 l 9405 1347 l 9405 1185 l 9345 1185 l  cp clip
n 9375 4800 m 9375 1200 l gs col-1 s gr gr

% arrowhead
n 9345 1347 m 9375 1227 l 9405 1347 l 9375 1347 l 9345 1347 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 7725 3150 m 8025 2850 l gs col-1 s gr 
% Polyline
n 7725 2850 m 8025 3150 l gs col-1 s gr 
% Polyline
n 10425 2850 m 10725 3150 l gs col-1 s gr 
% Polyline
n 10425 3150 m 10725 2850 l gs col-1 s gr 
/Symbol ff 360.00 scf sf
7725 3600 m
gs 1 -1 sc (s) col-1 sh gr
7.500 slw
% Polyline
gs  clippath
2370 1347 m 2400 1227 l 2430 1347 l 2430 1185 l 2370 1185 l  cp clip
n 2400 4800 m 2400 1200 l gs col-1 s gr gr

% arrowhead
n 2370 1347 m 2400 1227 l 2430 1347 l 2400 1347 l 2370 1347 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
7950 3825 m
gs 1 -1 sc (0) col-1 sh gr
45.000 slw
% Polyline
gs  clippath
12612 2880 m 13092 3000 l 12612 3120 l 13260 3120 l 13260 2880 l  cp clip
n 12300 3000 m 13200 3000 l gs col-1 s gr gr

% arrowhead
n 12612 2880 m 13092 3000 l 12612 3120 l  col-1 s
/Symbol ff 360.00 scf sf
10125 3600 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
10350 3825 m
gs 1 -1 sc (+) col-1 sh gr
/Symbol ff 360.00 scf sf
10500 3600 m
gs 1 -1 sc (= s) col-1 sh gr
/Symbol ff 360.00 scf sf
10950 3825 m
gs 1 -1 sc (-) col-1 sh gr
7.500 slw
% Polyline
gs  clippath
19953 2970 m 20073 3000 l 19953 3030 l 20115 3030 l 20115 2970 l  cp clip
n 14400 3000 m 20100 3000 l gs col-1 s gr gr

% arrowhead
n 19953 2970 m 20073 3000 l 19953 3030 l 19953 3000 l 19953 2970 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
17070 1347 m 17100 1227 l 17130 1347 l 17130 1185 l 17070 1185 l  cp clip
n 17100 4800 m 17100 1200 l gs col-1 s gr gr

% arrowhead
n 17070 1347 m 17100 1227 l 17130 1347 l 17100 1347 l 17070 1347 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 15150 3150 m 15450 2850 l gs col-1 s gr 
% Polyline
n 15150 2850 m 15450 3150 l gs col-1 s gr 
% Polyline
n 18450 3150 m 18750 2850 l gs col-1 s gr 
% Polyline
n 18450 2850 m 18750 3150 l gs col-1 s gr 
% Polyline
n 19350 3150 m 19650 2850 l gs col-1 s gr 
% Polyline
n 19350 2850 m 19650 3150 l gs col-1 s gr 
% Polyline
gs  clippath
14841 3090 m 14481 3000 l 14841 2910 l 14355 2910 l 14355 3090 l  cp clip
n 15300 3000 m 14400 3000 l gs col-1 s gr gr

% arrowhead
n 14841 3090 m 14481 3000 l 14841 2910 l 14841 3000 l 14841 3090 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
18909 2910 m 19269 3000 l 18909 3090 l 19395 3090 l 19395 2910 l  cp clip
n 18675 3000 m 19350 3000 l gs col-1 s gr gr

% arrowhead
n 18909 2910 m 19269 3000 l 18909 3090 l 18909 3000 l 18909 2910 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
19734 2910 m 20094 3000 l 19734 3090 l 20220 3090 l 20220 2910 l  cp clip
n 19500 3000 m 20175 3000 l gs col-1 s gr gr

% arrowhead
n 19734 2910 m 20094 3000 l 19734 3090 l 19734 3000 l 19734 2910 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
15150 3600 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
15375 3825 m
gs 1 -1 sc (0) col-1 sh gr
/Symbol ff 360.00 scf sf
18450 3600 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
18675 3825 m
gs 1 -1 sc (-) col-1 sh gr
/Symbol ff 360.00 scf sf
19350 3600 m
gs 1 -1 sc (s) col-1 sh gr
/Symbol ff 360.00 scf sf
19575 3825 m
gs 1 -1 sc (+) col-1 sh gr
45.000 slw
% Polyline
gs  clippath
5637 2880 m 6117 3000 l 5637 3120 l 6285 3120 l 6285 2880 l  cp clip
n 5325 3000 m 6225 3000 l gs col-1 s gr gr

% arrowhead
n 5637 2880 m 6117 3000 l 5637 3120 l  col-1 s
$F2psEnd
rs

%%EndDocument
 @endspecial 118 2040 a Fo(Fig.)46 b(20:)34 b FB(The)23
b(\015o)o(w)g(of)g(the)f(singularities)g(for)h Ft(N)1130
2048 y Fu(f)1179 2040 y FB(=)i(1.)40 b(The)23 b(left)e(\014gure)i(sho)o
(ws)h(the)118 2095 y(p)q(ositions)15 b(of)g(the)f(singularities)g(for)g
(small)f(mass)h Ft(m)p FB(,)g(the)g(middle)e(\014gure)j(sho)o(ws)g
(them)e(at)i(the)118 2144 y(sup)q(erconformal)g(p)q(oin)o(t)g(where)f
Ft(\033)752 2151 y Fr(+)799 2144 y FB(and)i Ft(\033)921
2151 y Fm(\000)968 2144 y FB(coincide,)d(while)h(the)h(righ)o(t)g
(\014gure)g(sho)o(ws)h(them)118 2194 y(for)h(large)f
Ft(m)p FB(.)0 2359 y(While)22 b(the)g(c)o(hoice)g(of)h(phase)g(of)g
(the)g(square)f(ro)q(ot)i(do)q(es)g(not)f(really)f(matter)f(since)h
(one)h(can)g(alw)o(a)o(ys)0 2422 y(exc)o(hange)16 b(the)h(r^)-24
b(oles)17 b(of)g Ft(\013)496 2429 y Fr(+)545 2422 y FB(and)h
Ft(\013)672 2429 y Fm(\000)704 2422 y FB(,)f(the)g(phase)g(of)h(the)e
(cubic)h(ro)q(ot)h(has)f(to)h(b)q(e)f(determined)d(carefully)l(,)0
2484 y(so)23 b(that)g(the)f(three)f(singularities)h Ft(\033)h
FB(are)g(either)e(all)h(real)g(or)g(one)h(real)e(and)i(the)f(other)h(t)
o(w)o(o)f(complex)0 2546 y(conjugate,)d(and)g(suc)o(h)g(that)g(the)f
(singularities)g(v)m(ary)h(con)o(tin)o(uously)e(as)j
Ft(m)e FB(is)g(v)m(aried)g(from)g(0)h(to)g Fs(1)p FB(.)28
b(In)0 2608 y(particular,)16 b(for)g(0)e Ft(<)g(m)446
2590 y Fr(3)481 2608 y Ft(<)538 2589 y Fr(27)p 538 2597
39 2 v 538 2626 a(64)581 2608 y FB(\003)615 2590 y Fr(3)615
2622 y(1)653 2608 y FB(the)i(curly)f(brac)o(k)o(et)g(in)h(\(A.10\))g
(is)h(real)e(and)i(negativ)o(e,)e(and)i(w)o(e)f(c)o(ho)q(ose)0
2676 y Ft(\013)31 2683 y Fm(\006)80 2676 y FB(=)h Fs(\000)179
2657 y Fr(1)p 179 2665 20 2 v 179 2693 a(3)203 2676 y
Fs(jf)p Ft(:)8 b(:)g(:)o Fs(gj)338 2658 y Fr(1)p Fu(=)p
Fr(3)397 2676 y FB(.)28 b(This)18 b(ensures)g(that)h
Ft(\033)861 2683 y Fr(0)900 2676 y FB(is)f(real)g(and)g(negativ)o(e,)g
(while)f Ft(\033)1510 2683 y Fr(+)1560 2676 y FB(and)i
Ft(\033)1685 2683 y Fm(\000)1735 2676 y FB(are)f(complex)0
2744 y(conjugate.)23 b(F)l(or)17 b Ft(m)d FB(=)h(0)i(one)g(simply)d
(has)k Ft(\033)842 2751 y Fr(0)877 2744 y FB(=)d Fs(\000)p
Ft(u)997 2751 y Fr(0)1026 2744 y Ft(;)25 b(\033)1093
2751 y Fm(\006)1139 2744 y FB(=)14 b(e)1213 2726 y Fm(\006)p
Fu(i\031)q(=)p Fr(3)1320 2744 y Ft(u)1348 2751 y Fr(0)1386
2744 y FB(with)i Ft(u)1525 2751 y Fr(0)1561 2744 y FB(=)e(3\003)1671
2726 y Fr(2)1671 2758 y(1)1693 2744 y Ft(=)p FB(\(4)e
Fs(\001)f FB(2)1821 2726 y Fr(2)p Fu(=)p Fr(3)1881 2744
y FB(\).)23 b(As)976 2883 y Fp(45)p eop
%%Page: 47 47
47 46 bop 0 160 a Ft(m)17 b FB(is)g(increased,)f Ft(\033)364
167 y Fr(0)402 160 y FB(mo)o(v)o(es)g(to)h(the)g(left)f(and)i
Ft(\033)904 167 y Fm(\006)953 160 y FB(approac)o(h)g(the)f(real)g
(axis,)g(see)f(Fig.)24 b(20.)h(F)l(or)17 b(small)f Ft(m)0
222 y FB(one)g(has)440 302 y Ft(\033)468 309 y Fr(0)503
302 y Fs(')d(\000)p Ft(u)622 309 y Fr(0)643 302 y FB(\(1)f(+)f(2)p
Ft(\026)p FB(\))49 b Ft(;)57 b(\033)967 309 y Fm(\006)1012
302 y Fs(')14 b Ft(u)1093 309 y Fr(0)1122 247 y Fk(\020)1152
302 y FB(e)1174 282 y Fm(\006)p Fu(i\031)q(=)p Fr(3)1292
302 y FB(+)d(2)p Ft(\026)p FB(e)1416 282 y Fm(\007)p
Fu(i\031)q(=)p Fr(3)1523 247 y Fk(\021)1856 302 y FB(\(A)p
Ft(:)p FB(11\))0 411 y(where)17 b Ft(\026)e FB(=)h(2)c
Fs(\001)f FB(2)325 393 y Fr(1)p Fu(=)p Fr(3)385 411 y
Ft(m=)p FB(\(3\003)529 418 y Fr(1)551 411 y FB(\))k Fs(\034)g
FB(1.)24 b(When)17 b(the)g(square)g(ro)q(ot)h(in)f(\(A.10\))g(v)m
(anishes,)g Ft(\013)1648 418 y Fr(+)1695 411 y FB(=)f
Ft(\013)1780 418 y Fm(\000)1812 411 y FB(,)g(so)i(that)0
473 y Ft(\033)28 480 y Fr(+)76 473 y FB(and)f Ft(\033)199
480 y Fm(\000)247 473 y FB(meet)d(on)j(the)f(real)f(axis.)22
b(This)16 b(is)g(a)h(sup)q(erconformal)e(p)q(oin)o(t:)571
598 y Ft(m)e FB(=)684 565 y(3\003)742 572 y Fr(1)p 684
587 80 2 v 712 632 a FB(4)817 598 y Ft(;)57 b(\033)916
605 y Fr(+)961 598 y FB(=)14 b Ft(\033)1041 605 y Fm(\000)1087
598 y FB(=)1144 565 y(4)p 1144 587 25 2 v 1144 632 a(3)1173
598 y Ft(m)1216 578 y Fr(2)1251 598 y FB(=)1307 565 y(3\003)1365
547 y Fr(2)1365 579 y(1)p 1307 587 80 2 v 1335 632 a
FB(4)1408 598 y Ft(:)434 b FB(\(A)p Ft(:)p FB(12\))0
717 y(As)18 b Ft(m)g FB(is)g(increased)g(further,)g(the)g(curly)f(brac)
o(k)o(et)g(in)h(\(A.10\))h(is)f(no)o(w)g(complex.)25
b(W)l(e)18 b(c)o(ho)q(ose)h([)p Ft(:)8 b(:)g(:)o FB(])1878
699 y Fr(1)p Fu(=)p Fr(2)1955 717 y FB(=)0 780 y Fs(\000)p
Ft(i)p Fs(j)p FB([)p Ft(:)g(:)g(:)n FB(])p Fs(j)168 762
y Fr(1)p Fu(=)p Fr(2)227 780 y FB(.)23 b(\(The)17 b(opp)q(osite)h(c)o
(hoice)d(only)i(exc)o(hanges)g Ft(\033)1089 787 y Fr(+)1137
780 y FB(and)h Ft(\033)1261 787 y Fm(\000)1292 780 y
FB(.\))24 b(The)16 b(phase)i(of)f(the)g(cubic)f(ro)q(ot)i(is)0
842 y(c)o(hosen)g(so)h(that)g Ft(\013)359 849 y Fr(+)408
842 y FB(=)e Ft(\013)494 824 y Fm(\003)494 854 y(\000)545
842 y FB(with)663 822 y Fr(2)p Fu(\031)p 663 830 43 2
v 674 859 a Fr(3)727 842 y Ft(<)h FB(arg)9 b Ft(\013)890
849 y Fr(+)940 842 y Ft(<)17 b(\031)j FB(and)f Fs(\000)p
Ft(\031)f(<)f FB(arg)10 b Ft(\013)1388 849 y Fm(\000)1437
842 y Ft(<)18 b Fs(\000)1537 822 y Fr(2)p Fu(\031)p 1537
830 V 1548 859 a Fr(3)1584 842 y FB(.)27 b(With)18 b(this)g(c)o(hoice,)
0 904 y(the)e(singularities)g(will)g(\015o)o(w)h(con)o(tin)o(uously:)k
Ft(\033)882 911 y Fr(0)920 904 y FB(k)o(eeps)15 b(mo)o(ving)g(to)i(the)
g(left,)e(while)h Ft(\033)1621 911 y Fm(\006)1653 904
y FB(,)g(no)o(w)h(b)q(oth)g(real,)0 966 y(mo)o(v)o(e)d(to)j(the)f(righ)
o(t,)f(but)h Ft(\033)518 973 y Fr(+)566 966 y FB(mo)o(v)o(es)f(faster,)
h(see)f(Fig.)21 b(20.)h(As)16 b Ft(m)e Fs(!)g(1)p FB(,)h(one)i(has)446
1063 y Ft(\033)474 1070 y Fr(0)509 1063 y Fs(')d(\000)p
FB(\(\003)654 1043 y Fr(3)654 1076 y(1)675 1063 y Ft(m)p
FB(\))737 1043 y Fr(1)p Fu(=)p Fr(2)845 1063 y Ft(;)56
b(\033)943 1070 y Fm(\000)989 1063 y Fs(')13 b FB(\(\003)1094
1043 y Fr(3)1094 1076 y(1)1115 1063 y Ft(m)p FB(\))1177
1043 y Fr(1)p Fu(=)p Fr(2)1286 1063 y Ft(;)56 b(\033)1384
1070 y Fr(+)1430 1063 y Fs(')13 b Ft(m)1525 1043 y Fr(2)1856
1063 y FB(\(A)p Ft(:)p FB(13\))0 1159 y(up)j(to)g(terms)e
Fs(O)q FB(\(\003)358 1141 y Fr(3)358 1173 y(1)379 1159
y Ft(=m)p FB(\).)21 b(Since)14 b(\003)660 1141 y Fr(3)660
1173 y(1)682 1159 y Ft(m)f FB(=)h(\003)824 1141 y Fr(4)824
1173 y(2)845 1159 y FB(,)h Ft(\033)902 1166 y Fr(0)939
1159 y FB(and)h Ft(\033)1061 1166 y Fm(\000)1108 1159
y FB(\015o)o(w)g(to)g(the)f(singularities)g(of)h(the)f(pure)h(gauge)0
1221 y(theory)l(,)g(while)f Ft(\033)318 1228 y Fr(+)366
1221 y FB(disapp)q(ears)i(to)g(in\014nit)o(y)l(.)775
1359 y Fz(APPENDIX)h(B)83 1459 y FB(In)g(this)g(app)q(endix)h(w)o(e)f
(will)f(sho)o(w)i(ho)o(w)g(to)g(express)f(the)g(in)o(tegrals)g
Ft(I)1397 1432 y Fr(\()p Fu(j)r Fr(\))1393 1474 y Fu(i)1464
1459 y FB(in)h(terms)d(of)j(the)f(standard)0 1521 y(elliptic)d(in)o
(tegrals)h Ft(K)t FB(\()p Ft(k)r FB(\))p Ft(;)25 b(E)s
FB(\()p Ft(k)r FB(\))p Ft(;)g FB(\005)687 1528 y Fr(1)708
1521 y FB(\()p Ft(\027;)8 b(k)r FB(\),)18 b(and)f(also)h(giv)o(e)e
(their)h(expressions)g(in)f(terms)g(of)h(the)g(W)l(eier-)0
1583 y(stra\031)j Ft(})e FB(function,)h(as)h(w)o(ell)d(as)i(giv)o(e)f
(certain)g(relations)h(b)q(et)o(w)o(een)e(elliptic)g(in)o(tegrals.)28
b(Basic)18 b(references)0 1645 y(are)h([14,)h(19,)g(20].)30
b(Our)19 b(con)o(v)o(en)o(tions)f(are)i(those)f(of)h([14].)29
b(Unless)19 b(otherwise)g(stated,)h(w)o(e)e(will)g(assume)0
1707 y(that)f(the)f(ro)q(ots)i Ft(e)337 1714 y Fu(i)369
1707 y FB(of)f(the)f(cubic)g Ft(\021)663 1689 y Fr(2)699
1707 y FB(=)e(4)p Ft(\030)798 1689 y Fr(3)832 1707 y
Fs(\000)d Ft(g)905 1714 y Fr(2)926 1707 y Ft(\030)j Fs(\000)e
Ft(g)1035 1714 y Fr(3)1073 1707 y FB(are)k(all)h(di\013eren)o(t.)k
(They)c(ob)q(ey)1678 1669 y Fk(P)1731 1721 y Fu(i)1755
1707 y Ft(e)1778 1714 y Fu(i)1807 1707 y FB(=)d(0,)j(and)0
1769 y Ft(\021)26 1751 y Fr(2)61 1769 y FB(=)d(4)145
1731 y Fk(Q)192 1783 y Fu(i)208 1769 y FB(\()p Ft(\030)f
Fs(\000)e Ft(e)334 1776 y Fu(i)349 1769 y FB(\).)83 1847
y(The)17 b Ft(K)q(;)8 b(E)20 b FB(and)d(\005)436 1854
y Fr(1)474 1847 y FB(only)f(dep)q(end)h(on)g(the)g(square)g(of)g
Ft(k)h FB(whic)o(h)e(w)o(as)i(de\014ned)e(in)h(terms)e(of)i(the)f
Ft(e)1917 1854 y Fu(i)1949 1847 y FB(as)0 1909 y Ft(k)27
1890 y Fr(2)62 1909 y FB(=)119 1889 y Fu(e)137 1893 y
Fn(2)154 1889 y Fm(\000)p Fu(e)202 1893 y Fn(3)p 119
1897 101 2 v 119 1926 a Fu(e)137 1930 y Fn(1)154 1926
y Fm(\000)p Fu(e)202 1930 y Fn(3)224 1909 y FB(.)21 b(W)l(e)16
b(use)h(the)f(notation)694 1879 y Fu(?)732 1909 y FB(of)h([14]:)546
2075 y Ft(K)t FB(\()p Ft(k)r FB(\))d(=)748 1997 y Fr(1)722
2007 y Fk(Z)726 2150 y Fr(0)997 2041 y FB(d)p Ft(x)p
785 2063 480 2 v 785 2123 a FB([)o(\(1)e Fs(\000)e Ft(x)930
2108 y Fr(2)951 2123 y FB(\)\(1)i Fs(\000)f Ft(k)1102
2108 y Fr(2)1123 2123 y Ft(x)1151 2108 y Fr(2)1172 2123
y FB(\)])1204 2097 y Fr(1)p Fu(=)p Fr(2)552 2279 y Ft(E)s
FB(\()p Ft(k)r FB(\))j(=)748 2201 y Fr(1)722 2211 y Fk(Z)726
2354 y Fr(0)780 2279 y FB(d)p Ft(x)843 2209 y Fk(\022)884
2245 y FB(1)e Fs(\000)f Ft(k)997 2227 y Fr(2)1018 2245
y Ft(x)1046 2227 y Fr(2)p 884 2268 183 2 v 909 2313 a
FB(1)g Fs(\000)g Ft(x)1022 2299 y Fr(2)1072 2209 y Fk(\023)1109
2216 y Fr(1)p Fu(=)p Fr(2)487 2483 y FB(\005)524 2490
y Fr(1)545 2483 y FB(\()p Ft(\027;)d(k)r FB(\))14 b(=)748
2405 y Fr(1)722 2415 y Fk(Z)726 2559 y Fr(0)1100 2450
y FB(d)p Ft(x)p 785 2472 687 2 v 785 2531 a FB([)o(\(1)e
Fs(\000)e Ft(x)930 2517 y Fr(2)951 2531 y FB(\)\(1)i
Fs(\000)f Ft(k)1102 2517 y Fr(2)1123 2531 y Ft(x)1151
2517 y Fr(2)1172 2531 y FB(\)])1204 2506 y Fr(1)p Fu(=)p
Fr(2)1272 2531 y FB(\(1)h(+)f Ft(\027)s(x)1431 2517 y
Fr(2)1452 2531 y FB(\))1492 2483 y Ft(:)1882 2278 y FB(\(B)p
Ft(:)p FB(1\))p 0 2610 698 2 v 58 2659 a Fq(?)40 b Fp(Note)19
b(that)g(in)f(Mathematica)g(whic)o(h)h(w)o(e)g(used)h(extensiv)o(ely)f
(for)g(the)g(n)o(umerical)f(determination)f(of)i(the)g(curv)o(es)100
2709 y(of)j(marginal)e(stabilit)o(y)m(,)k(one)f(denotes)h
Fq(K)s Fp(\()p Fq(k)q Fp(\))j(=)h Fb(EllipticK)p Fp([)m
Fq(k)1174 2694 y Fd(2)1193 2709 y Fp(])o(,)d Fq(E)r Fp(\()p
Fq(k)q Fp(\))i(=)g Fb(EllipticE)p Fp([)n Fq(k)1646 2694
y Fd(2)1665 2709 y Fp(])22 b(and)h(\005)1820 2715 y Fd(1)1839
2709 y Fp(\()p Fq(\027;)7 b(k)q Fp(\))26 b(=)100 2758
y Fb(EllipticPi)p Fp([)6 b Fi(\000)k Fq(\027;)d(k)443
2743 y Fd(2)461 2758 y Fp(])o(.)976 2883 y(46)p eop
%%Page: 48 48
48 47 bop 0 160 a FB(W)l(e)16 b(will)f(no)o(w)i(sho)o(w)g(that)f(the)g
(in)o(tegrals)g(o)o(v)o(er)f(the)h(cycle)f Ft(\015)1119
167 y Fr(1)1157 160 y FB(are)379 321 y Ft(I)405 295 y
Fr(\(1\))401 336 y(1)470 321 y FB(=)f(2)573 243 y Fu(e)591
247 y Fn(2)554 253 y Fk(Z)551 394 y Fu(e)569 398 y Fn(3)617
287 y FB(d)p Ft(\030)p 617 310 51 2 v 630 355 a(\021)687
321 y FB(=)855 287 y(2)p 744 310 247 2 v 744 358 a(\()p
Ft(e)786 365 y Fr(1)818 358 y Fs(\000)c Ft(e)890 365
y Fr(3)911 358 y FB(\))930 344 y Fr(1)p Fu(=)p Fr(2)1003
321 y Ft(K)t FB(\()p Ft(k)r FB(\))356 519 y Ft(I)382
493 y Fr(\(1\))378 534 y(2)446 519 y FB(=)k(2)549 441
y Fu(e)567 445 y Fn(2)531 451 y Fk(Z)527 592 y Fu(e)545
596 y Fn(3)594 485 y Ft(\030)r FB(d)p Ft(\030)p 594 508
75 2 v 618 553 a(\021)687 519 y FB(=)855 485 y(2)p 744
508 247 2 v 744 556 a(\()p Ft(e)786 563 y Fr(1)818 556
y Fs(\000)c Ft(e)890 563 y Fr(3)911 556 y FB(\))930 542
y Fr(1)p Fu(=)p Fr(2)1012 519 y FB([)o Ft(e)1048 526
y Fr(1)1069 519 y Ft(K)t FB(\()p Ft(k)r FB(\))h(+)g(\()p
Ft(e)1281 526 y Fr(3)1313 519 y Fs(\000)g Ft(e)1386 526
y Fr(1)1407 519 y FB(\))p Ft(E)s FB(\()p Ft(k)r FB(\)])261
717 y Ft(I)287 690 y Fr(\(1\))283 732 y(3)351 717 y FB(=)j(2)454
639 y Fu(e)472 643 y Fn(2)436 649 y Fk(Z)432 790 y Fu(e)450
794 y Fn(3)558 683 y FB(d)p Ft(\030)p 499 705 170 2 v
499 751 a(\021)r FB(\()p Ft(\030)f Fs(\000)e Ft(c)p FB(\))687
717 y(=)855 683 y(2)p 744 705 247 2 v 744 754 a(\()p
Ft(e)786 761 y Fr(1)818 754 y Fs(\000)f Ft(e)890 761
y Fr(3)911 754 y FB(\))930 739 y Fr(3)p Fu(=)p Fr(2)1003
632 y Fk(")1128 683 y FB(1)p 1037 705 206 2 v 1037 751
a(1)i Fs(\000)g FB(~)-25 b Ft(c)11 b FB(+)g Ft(k)1231
737 y Fm(0)1256 717 y Ft(K)t FB(\()p Ft(k)r FB(\))817
903 y(+)901 869 y(4)p Ft(k)952 851 y Fm(0)p 871 892 125
2 v 871 937 a FB(1)h(+)f Ft(k)983 923 y Fm(0)1144 869
y FB(1)p 1014 892 286 2 v 1014 937 a(\(1)g Fs(\000)h
FB(~)-25 b Ft(c)p FB(\))1158 923 y Fr(2)1190 937 y Fs(\000)11
b Ft(k)1267 923 y Fm(0)p Fr(2)1312 903 y FB(\005)1349
910 y Fr(1)1378 833 y Fk(\022)1415 903 y Ft(\027)s FB(\()p
Ft(c)p FB(\))p Ft(;)1528 869 y FB(1)g Fs(\000)g Ft(k)1640
851 y Fm(0)p 1528 892 125 2 v 1528 937 a FB(1)h(+)f Ft(k)1640
923 y Fm(0)1658 833 y Fk(\023)1703 818 y(#)1882 606 y
FB(\(B)p Ft(:)p FB(2\))0 1053 y(where)232 1160 y Ft(k)259
1139 y Fm(0)p Fr(2)305 1160 y FB(=)j(1)d Fs(\000)g Ft(k)469
1139 y Fr(2)539 1160 y Ft(;)58 b FB(~)-25 b Ft(c)14 b
FB(=)713 1126 y Ft(c)d Fs(\000)g Ft(e)818 1133 y Fr(3)p
701 1148 149 2 v 701 1194 a Ft(e)724 1201 y Fr(1)756
1194 y Fs(\000)g Ft(e)829 1201 y Fr(3)904 1160 y Ft(;)56
b(\027)s FB(\()p Ft(c)p FB(\))14 b(=)g Fs(\000)1173 1089
y Fk(\022)1215 1126 y FB(1)e Fs(\000)f FB(~)-25 b Ft(c)11
b FB(+)h Ft(k)1409 1108 y Fm(0)p 1215 1148 207 2 v 1215
1194 a FB(1)f Fs(\000)h FB(~)-25 b Ft(c)11 b Fs(\000)g
Ft(k)1409 1179 y Fm(0)1426 1089 y Fk(\023)1463 1100 y
Fr(2)1493 1089 y Fk(\022)1534 1126 y FB(1)h Fs(\000)f
Ft(k)1647 1108 y Fm(0)p 1534 1148 125 2 v 1534 1194 a
FB(1)h(+)f Ft(k)1646 1179 y Fm(0)1664 1089 y Fk(\023)1701
1100 y Fr(2)1747 1160 y Ft(:)121 b FB(\(B)p Ft(:)p FB(3\))0
1300 y(The)22 b(corresp)q(onding)h(in)o(tegrals)f Ft(I)654
1273 y Fr(\(2\))650 1315 y Fu(i)727 1300 y FB(o)o(v)o(er)f(the)h
(cycles)f Ft(\015)1098 1307 y Fr(2)1142 1300 y FB(are)h(obtained)h
(from)e(equations)h(\(B.2\))g(and)0 1362 y(\(B.3\))e(b)o(y)g(exc)o
(hanging)h(ev)o(erywhere)e(in)h(these)g(equations)h(the)g(ro)q(ots)h
Ft(e)1371 1369 y Fr(1)1412 1362 y FB(and)g Ft(e)1535
1369 y Fr(3)1556 1362 y FB(.)34 b(In)21 b(particular,)g(this)0
1424 y(exc)o(hanges)c Ft(k)i FB(and)f Ft(k)396 1406 y
Fm(0)409 1424 y FB(,)f(and)h(results)f(in)g(the)g(exc)o(hange)g(of)i(~)
-26 b Ft(c)18 b FB(and)g(1)12 b Fs(\000)h FB(~)-25 b
Ft(c)p FB(,)17 b(so)h(that)f Ft(\027)s FB(\()p Ft(c)p
FB(\))h(gets)g(replaced)e(b)o(y)0 1497 y Fs(\000)47 1457
y Fk(\000)76 1478 y Fr(~)-20 b Fu(c)o Fr(+)p Fu(k)p 75
1486 68 2 v 76 1515 a Fr(~)g Fu(c)o Fm(\000)p Fu(k)147
1457 y Fk(\001)170 1465 y Fr(2)200 1457 y Fk(\000)228
1478 y Fr(1)p Fm(\000)p Fu(k)p 228 1486 71 2 v 228 1515
a Fr(1+)p Fu(k)303 1457 y Fk(\001)326 1465 y Fr(2)347
1497 y FB(.)83 1577 y(T)l(o)17 b(con)o(v)o(ert)e(the)i
Ft(I)434 1584 y Fu(j)470 1577 y FB(in)o(to)f(the)g Ft(K)q(;)8
b(E)s(;)g FB(\005)815 1584 y Fr(1)853 1577 y FB(one)16
b(needs)h(to)g(transform)f(the)g(cubic)g(curv)o(e)f(in)o(to)h(a)h
(quartic)0 1651 y(curv)o(e.)j(Let's)c(demonstrate)g(this)g(for)g
Ft(I)744 1624 y Fr(\(1\))740 1665 y(1)795 1651 y FB(:)76
1833 y Ft(I)102 1807 y Fr(\(1\))98 1848 y(1)167 1833
y FB(=)e(2)270 1755 y Fu(e)288 1759 y Fn(2)251 1765 y
Fk(Z)248 1906 y Fu(e)266 1910 y Fn(3)314 1799 y FB(d)p
Ft(\030)p 314 1822 51 2 v 327 1867 a(\021)384 1833 y
FB(=)454 1755 y Fu(e)472 1759 y Fn(2)436 1765 y Fk(Z)432
1906 y Fu(e)450 1910 y Fn(3)766 1799 y FB(d)p Ft(\030)p
499 1822 586 2 v 499 1870 a FB([\()p Ft(\030)f Fs(\000)e
Ft(e)639 1877 y Fr(1)660 1870 y FB(\)\()p Ft(\030)i Fs(\000)e
Ft(e)805 1877 y Fr(2)826 1870 y FB(\)\()p Ft(\030)j Fs(\000)d
Ft(e)972 1877 y Fr(3)993 1870 y FB(\)])1026 1856 y Fr(1)p
Fu(=)p Fr(2)1104 1833 y FB(=)1271 1799 y(1)p 1160 1822
247 2 v 1160 1870 a(\()p Ft(e)1202 1877 y Fr(1)1234 1870
y Fs(\000)g Ft(e)1307 1877 y Fr(3)1328 1870 y FB(\))1347
1856 y Fr(1)p Fu(=)p Fr(2)1437 1755 y Fu(k)1458 1740
y Fn(2)1420 1765 y Fk(Z)1424 1908 y Fr(0)1672 1799 y
FB(d)1704 1786 y(~)1699 1799 y Ft(\030)p 1483 1822 429
2 v 1483 1874 a FB([\()1521 1861 y(~)1516 1874 y Ft(\030)i
Fs(\000)e FB(1\)\()1667 1861 y(~)1662 1874 y Ft(\030)j
Fs(\000)d Ft(k)1774 1859 y Fr(2)1795 1874 y FB(\))1819
1861 y(~)1814 1874 y Ft(\030)s FB(])1852 1859 y Fr(1)p
Fu(=)p Fr(2)1882 1957 y FB(\(B)p Ft(:)p FB(4\))0 2020
y(where)24 b(w)o(e)g(c)o(hanged)g(v)m(ariables)h(,)681
2007 y(~)675 2020 y Ft(\030)31 b FB(=)c(\()p Ft(\030)20
b Fs(\000)c Ft(e)930 2027 y Fr(3)951 2020 y FB(\))p Ft(=)p
FB(\()p Ft(e)1036 2027 y Fr(1)1074 2020 y Fs(\000)g Ft(e)1152
2027 y Fr(3)1173 2020 y FB(\),)26 b(and)f(in)o(tro)q(duced)e
Ft(k)1613 2002 y Fr(2)1659 2020 y FB(as)i(ab)q(o)o(v)o(e.)46
b(The)0 2082 y(transformation)16 b(to)h(a)f(quartic)g(curv)o(e)f(is)h
(ac)o(hiev)o(ed)f(b)o(y)g(the)h(further)g(c)o(hange)h(of)f(v)m
(ariables)786 2198 y(~)781 2211 y Ft(\030)g FB(=)e(1)e(+)f
Ft(k)982 2190 y Fm(0)1005 2211 y FB(+)1121 2177 y(1)p
1059 2199 148 2 v 1059 2249 a Ft(\020)k Fs(\000)1166
2229 y Fr(1)p 1150 2238 52 2 v 1150 2266 a(2)p Fu(k)1190
2255 y Fj(0)1882 2211 y FB(\(B)p Ft(:)p FB(5\))0 2358
y(where)k(the)g(complem)o(en)o(tary)d(mo)q(dulus)j Ft(k)802
2340 y Fm(0)834 2358 y FB(is)g(giv)o(en)f(b)o(y)g(\(B.3\).)30
b(\(The)19 b(c)o(hoice)f(of)h(sign)h(for)f Ft(k)1777
2340 y Fm(0)1809 2358 y FB(do)q(es)h(not)0 2424 y(matter.\))g(A)c
(\014nal)g(rescaling)g Ft(x)d FB(=)h(2)p Ft(k)704 2406
y Fm(0)730 2405 y Fr(1+)p Fu(k)800 2389 y Fj(0)p 730
2413 82 2 v 730 2442 a Fr(1)p Fm(\000)p Fu(k)800 2431
y Fj(0)825 2424 y Ft(\020)20 b FB(yields)0 2605 y Ft(I)26
2578 y Fr(\(1\))22 2620 y(1)90 2605 y FB(=)258 2571 y(1)p
147 2593 247 2 v 147 2642 a(\()p Ft(e)189 2649 y Fr(1)221
2642 y Fs(\000)11 b Ft(e)294 2649 y Fr(3)315 2642 y FB(\))334
2627 y Fr(1)p Fu(=)p Fr(2)461 2571 y FB(2)p 412 2593
125 2 v 412 2639 a(1)g(+)g Ft(k)523 2625 y Fm(0)575 2527
y Fr(1)549 2537 y Fk(Z)538 2680 y Fm(\000)p Fr(1)908
2571 y FB(d)p Ft(x)p 612 2593 648 2 v 612 2616 a Fk(h\020)665
2671 y FB(1)h Fs(\000)751 2631 y Fk(\000)778 2652 y Fr(1)p
Fm(\000)p Fu(k)848 2641 y Fj(0)p 778 2660 82 2 v 778
2689 a Fr(1+)p Fu(k)848 2678 y Fj(0)865 2631 y Fk(\001)888
2639 y Fr(2)917 2671 y Ft(x)945 2657 y Fr(2)966 2616
y Fk(\021)1004 2671 y FB(\(1)g Fs(\000)e Ft(x)1136 2657
y Fr(2)1157 2671 y FB(\))1176 2616 y Fk(i)1200 2627 y
Fr(1)p Fu(=)p Fr(2)1278 2605 y FB(=)1446 2571 y(2)p 1335
2593 247 2 v 1335 2642 a(\()p Ft(e)1377 2649 y Fr(1)1409
2642 y Fs(\000)h Ft(e)1482 2649 y Fr(3)1503 2642 y FB(\))1522
2627 y Fr(1)p Fu(=)p Fr(2)1649 2571 y FB(2)p 1600 2593
125 2 v 1600 2639 a(1)g(+)g Ft(k)1711 2625 y Fm(0)1737
2605 y Ft(K)1790 2535 y Fk(\022)1832 2571 y FB(1)g Fs(\000)g
Ft(k)1944 2553 y Fm(0)p 1832 2593 V 1832 2639 a FB(1)h(+)f
Ft(k)1944 2625 y Fm(0)1962 2535 y Fk(\023)2018 2605 y
Ft(:)1882 2746 y FB(\(B)p Ft(:)p FB(6\))976 2883 y Fp(47)p
eop
%%Page: 49 49
49 48 bop 0 160 a FB(Using)16 b(one)h(of)f(the)g(standard)i(relations)e
(b)q(et)o(w)o(een)f(elliptic)f(in)o(tegrals)i(with)g(di\013eren)o(t)f
(mo)q(duli)g([14])284 283 y(2)p 234 305 125 2 v 234 351
a(1)d(+)f Ft(k)346 336 y Fm(0)372 317 y Ft(K)425 246
y Fk(\022)467 283 y FB(1)g Fs(\000)g Ft(k)579 265 y Fm(0)p
467 305 V 467 351 a FB(1)h(+)f Ft(k)579 336 y Fm(0)597
246 y Fk(\023)647 317 y FB(=)j Ft(K)t FB(\()p Ft(k)r
FB(\))49 b Ft(;)56 b FB(\(1)12 b(+)f Ft(k)1059 296 y
Fm(0)1071 317 y FB(\))d Ft(E)1146 246 y Fk(\022)1188
283 y FB(1)j Fs(\000)g Ft(k)1300 265 y Fm(0)p 1188 305
V 1188 351 a FB(1)g(+)g Ft(k)1299 336 y Fm(0)1317 246
y Fk(\023)1368 317 y FB(=)j Ft(E)s FB(\()p Ft(k)r FB(\))d(+)g
Ft(k)1611 296 y Fm(0)1623 317 y Ft(K)t FB(\()p Ft(k)r
FB(\))17 b Ft(;)118 b FB(\(B)p Ft(:)p FB(7\))0 483 y(one)16
b(obtains)h(the)f(\014rst)h(equation)f(\(B.2\).)760 453
y Fu(?)83 580 y FB(Going)h(through)g(exactly)e(the)h(same)f(steps)i
(for)f(the)g(in)o(tegral)g Ft(I)1270 553 y Fr(\(1\))1266
595 y(2)1337 580 y FB(leads)g(to)79 836 y Ft(I)105 809
y Fr(\(1\))101 851 y(2)169 836 y FB(=)337 802 y(1)p 226
824 247 2 v 226 873 a(\()p Ft(e)268 880 y Fr(1)300 873
y Fs(\000)10 b Ft(e)372 880 y Fr(3)393 873 y FB(\))412
858 y Fr(1)p Fu(=)p Fr(2)540 802 y FB(2)p 490 824 125
2 v 490 870 a(1)i(+)f Ft(k)602 856 y Fm(0)654 758 y Fr(1)627
768 y Fk(Z)617 911 y Fm(\000)p Fr(1)686 836 y FB(d)p
Ft(x)746 754 y FB(\()p Ft(e)788 761 y Fr(1)819 754 y
Fs(\000)g Ft(e)892 761 y Fr(3)913 754 y FB(\))940 669
y Fk(")969 754 y FB(1)h(+)f Ft(k)1081 736 y Fm(0)1104
754 y Fs(\000)g FB(2)p Ft(k)1205 736 y Fm(0)1226 684
y Fk(\022)1263 754 y FB(1)h Fs(\000)1348 699 y Fk(\020)1383
734 y Fr(1)p Fm(\000)p Fu(k)1453 719 y Fj(0)p 1383 743
82 2 v 1383 771 a Fr(1+)p Fu(k)1453 760 y Fj(0)1469 699
y Fk(\021)1499 710 y Fr(2)1529 754 y Ft(x)1557 736 y
Fr(2)1578 684 y Fk(\023)1614 695 y Fm(\000)p Fr(1)1666
669 y Fk(#)1706 754 y FB(+)f Ft(e)1778 761 y Fr(3)p 746
824 1054 2 v 948 847 a Fk(h\020)1002 902 y FB(1)g Fs(\000)1087
862 y Fk(\000)1115 883 y Fr(1)p Fm(\000)p Fu(k)1185 872
y Fj(0)p 1115 891 82 2 v 1115 920 a Fr(1+)p Fu(k)1185
909 y Fj(0)1201 862 y Fk(\001)1224 870 y Fr(2)1253 902
y Ft(x)1281 888 y Fr(2)1302 847 y Fk(\021)1340 902 y
FB(\(1)h Fs(\000)f Ft(x)1473 888 y Fr(2)1494 902 y FB(\))1513
847 y Fk(i)1536 858 y Fr(1)p Fu(=)p Fr(2)169 1039 y FB(=)337
1005 y(2)p 226 1028 247 2 v 226 1076 a(\()p Ft(e)268
1083 y Fr(1)300 1076 y Fs(\000)f Ft(e)372 1083 y Fr(3)393
1076 y FB(\))412 1062 y Fr(1)p Fu(=)p Fr(2)540 1005 y
FB(2)p 490 1028 125 2 v 490 1073 a(1)i(+)f Ft(k)602 1059
y Fm(0)619 954 y Fk(")657 999 y(\000)679 1039 y FB(\()p
Ft(e)721 1046 y Fr(1)753 1039 y Fs(\000)g Ft(e)826 1046
y Fr(3)847 1039 y FB(\)\(1)g(+)g Ft(k)996 1019 y Fm(0)1009
1039 y FB(\))g(+)g Ft(e)1111 1046 y Fr(3)1132 999 y Fk(\001)1163
1039 y Ft(K)1216 969 y Fk(\022)1258 1005 y FB(1)g Fs(\000)g
Ft(k)1370 987 y Fm(0)p 1258 1028 V 1258 1073 a FB(1)h(+)f
Ft(k)1370 1059 y Fm(0)1388 969 y Fk(\023)653 1206 y Fs(\000)f
FB(2)p Ft(k)753 1185 y Fm(0)766 1206 y FB(\()p Ft(e)808
1213 y Fr(1)840 1206 y Fs(\000)h Ft(e)913 1213 y Fr(3)934
1206 y FB(\))16 b(\005)1006 1213 y Fr(1)1035 1120 y Fk( )1075
1206 y Fs(\000)1122 1135 y Fk(\022)1163 1172 y FB(1)c
Fs(\000)f Ft(k)1276 1154 y Fm(0)p 1163 1194 V 1163 1240
a FB(1)h(+)f Ft(k)1275 1225 y Fm(0)1293 1135 y Fk(\023)1330
1146 y Fr(2)1359 1206 y Ft(;)1395 1172 y FB(1)g Fs(\000)g
Ft(k)1507 1154 y Fm(0)p 1395 1194 V 1395 1240 a FB(1)g(+)g
Ft(k)1506 1225 y Fm(0)1524 1120 y Fk(!)e(#)1617 1206
y Ft(:)1882 980 y FB(\(B)p Ft(:)p FB(8\))0 1382 y(Using)k(the)g
(relation)g(\(1)5 b Fs(\000)484 1369 y FB(\026)483 1382
y Ft(k)510 1364 y Fr(2)532 1382 y FB(\)\005)588 1389
y Fr(1)609 1382 y FB(\()p Fs(\000)668 1369 y FB(\026)667
1382 y Ft(k)694 1364 y Fr(2)715 1382 y Ft(;)738 1369
y FB(\026)737 1382 y Ft(k)r FB(\))14 b(=)f Ft(E)s FB(\()907
1369 y(\026)906 1382 y Ft(k)r FB(\))h(with)1075 1369
y(\026)1074 1382 y Ft(k)i FB(=)e(\(1)5 b Fs(\000)g Ft(k)1286
1364 y Fm(0)1299 1382 y FB(\))p Ft(=)p FB(\(1)g(+)g Ft(k)1460
1364 y Fm(0)1473 1382 y FB(\),)14 b(as)g(w)o(ell)e(as)i(the)f
(relations)0 1445 y(\(B.7\),)i(one)i(arriv)o(es)e(at)i(the)f(second)g
(equation)g(\(B.2\).)83 1537 y(Finally)f(for)i Ft(I)350
1510 y Fr(\(1\))346 1552 y(3)400 1537 y FB(\()p Ft(c)p
FB(\),)f(going)h(through)g(the)f(same)f(steps)i(leads)f(to)122
1731 y Ft(I)148 1704 y Fr(\(1\))144 1746 y(3)199 1731
y FB(\()p Ft(c)p FB(\))d(=)439 1697 y(1)p 328 1719 247
2 v 328 1768 a(\()p Ft(e)370 1775 y Fr(1)402 1768 y Fs(\000)e
Ft(e)475 1775 y Fr(3)496 1768 y FB(\))515 1753 y Fr(3)p
Fu(=)p Fr(2)643 1697 y FB(2)p 593 1719 125 2 v 593 1765
a(1)g(+)g Ft(k)704 1750 y Fm(0)756 1653 y Fr(1)730 1663
y Fk(Z)719 1806 y Fm(\000)p Fr(1)1081 1697 y FB(d)p Ft(x)p
785 1719 648 2 v 785 1742 a Fk(h)o(\020)838 1797 y FB(1)h
Fs(\000)923 1757 y Fk(\000)951 1778 y Fr(1)p Fm(\000)p
Fu(k)1021 1767 y Fj(0)p 951 1786 82 2 v 951 1815 a Fr(1+)p
Fu(k)1021 1804 y Fj(0)1037 1757 y Fk(\001)1060 1765 y
Fr(2)1090 1797 y Ft(x)1118 1783 y Fr(2)1139 1742 y Fk(\021)1177
1797 y FB(\(1)f Fs(\000)g Ft(x)1309 1783 y Fr(2)1330
1797 y FB(\))1349 1742 y Fk(i)1373 1753 y Fr(1)p Fu(=)p
Fr(2)791 1934 y Fs(\002)936 1900 y FB(1)p 846 1923 206
2 v 846 1968 a(1)g(+)g Ft(k)957 1954 y Fm(0)981 1968
y Fs(\000)h FB(~)-25 b Ft(c)1065 1849 y Fk(")1094 1934
y FB(1)11 b Fs(\000)1255 1900 y FB(2)p Ft(k)1306 1882
y Fm(0)p 1184 1923 V 1184 1968 a FB(1)h(+)f Ft(k)1296
1954 y Fm(0)1319 1968 y Fs(\000)h FB(~)-25 b Ft(c)1555
1900 y FB(1)p 1408 1923 318 2 v 1413 1955 a Fr(1)p Fm(\000)p
Fu(k)1483 1944 y Fj(0)p 1413 1963 82 2 v 1413 1991 a
Fr(1+)p Fu(k)1483 1981 y Fj(0)1500 1974 y Ft(x)10 b Fs(\000)1593
1955 y Fr(1)p Fm(\000)p Fu(k)1663 1944 y Fj(0)1675 1955
y Fm(\000)q Fr(~)-20 b Fu(c)p 1593 1963 128 2 v 1593
1991 a Fr(1+)p Fu(k)1663 1981 y Fj(0)1675 1991 y Fm(\000)q
Fr(~)g Fu(c)1731 1849 y Fk(#)1882 1823 y FB(\(B)p Ft(:)p
FB(9\))0 2114 y(where)15 b(~)-25 b Ft(c)13 b FB(=)h(\()p
Ft(c)6 b Fs(\000)g Ft(e)339 2121 y Fr(3)360 2114 y FB(\))p
Ft(=)p FB(\()p Ft(e)445 2121 y Fr(1)473 2114 y Fs(\000)g
Ft(e)541 2121 y Fr(3)562 2114 y FB(\).)20 b(The)14 b(last)g(term)e(in)i
(this)f(expression)h(is)g(of)g(the)f(t)o(yp)q(e)1625
2094 y Fr(1)p 1591 2102 89 2 v 1591 2131 a Fu(ax)p Fm(\000)p
Fu(b)1698 2114 y FB(=)1781 2094 y Fu(ax)p Fr(+)p Fu(b)p
1755 2102 141 2 v 1755 2131 a(a)1775 2120 y Fn(2)1792
2131 y Fu(x)1814 2120 y Fn(2)1831 2131 y Fm(\000)p Fu(b)1877
2120 y Fn(2)1914 2114 y FB(and)0 2185 y(can)j(b)q(e)h(replaced)e(b)o(y)
483 2165 y Fu(b)p 421 2174 V 421 2202 a(a)441 2192 y
Fn(2)458 2202 y Fu(x)480 2192 y Fn(2)498 2202 y Fm(\000)p
Fu(b)544 2192 y Fn(2)566 2185 y FB(.)21 b(It)16 b(is)g(then)g(clear,)f
(using)i(again)g(\(B.7\))f(that)g(one)h(gets)f(the)g(third)g(relation)0
2248 y(\(B.2\).)83 2340 y(The)i(in)o(tegrals)f Ft(I)409
2314 y Fr(\()p Fu(j)r Fr(\))405 2355 y(3)458 2340 y FB(\()p
Ft(c)p FB(\))g(can)h(b)q(e)g(simpli\014ed)d(if)i Ft(c)g
FB(is)g(one)h(of)g(the)f(ro)q(ots)i Ft(e)1429 2347 y
Fu(i)1444 2340 y FB(.)25 b(W)l(e)17 b(will)f(alw)o(a)o(ys)i(consider)0
2414 y Ft(I)26 2388 y Fr(\(1\))22 2429 y(3)77 2414 y
FB(\()p Ft(c)p FB(\).)j(Ev)o(erything)15 b(can)h(b)q(e)h(translated)f
(for)h Ft(I)909 2388 y Fr(\(2\))905 2429 y(3)959 2414
y FB(\()p Ft(c)p FB(\))f(if)g(w)o(e)g(p)q(erm)o(ute)e(ev)o(erywhere)g
Ft(k)19 b FB(and)d Ft(k)1761 2396 y Fm(0)1790 2414 y
FB(as)h(w)o(ell)e(as)p 0 2509 698 2 v 58 2558 a Fq(?)37
b Fp(Note)16 b(that)g(it)g(is)g(quite)g(non-trivial)e(to)i(k)o(eep)h
(trac)o(k)f(of)g(the)g(correct)i(o)o(v)o(erall)d(sign.)24
b(F)m(or)16 b(example,)f(to)h(get)g(the)h(last)100 2608
y(equalit)o(y)d(of)h(eq.)23 b(\(B.6\))15 b(one)h(needs)h(to)e(de\014ne)
i(carefully)e(where)h(the)g(cuts)h(of)e(the)h(di\013eren)o(ts)h(square)
f(ro)q(ots)g(lie.)22 b(F)m(or)100 2658 y(real)17 b(masses)f
Fq(m)359 2664 y Fh(i)391 2658 y Fp(and)g(real)h(\003,)g(all)f(one)h
(can)h(get)f(is)g(a)f(sign)h(am)o(biguit)o(y)d(that)j(ma)o(y)e(dep)q
(end)j(on)f(sign\()p Fi(=)p Fq(m)7 b(u)p Fp(\).)28 b(This)100
2708 y(am)o(biguit)o(y)9 b(is)j(the)h(same)f(for)g(all)f(three)j(in)o
(tegrals)e Fq(I)913 2714 y Fd(1)932 2708 y Fq(;)h(I)975
2714 y Fd(2)1006 2708 y Fp(and)g Fq(I)1104 2714 y Fd(3)1123
2708 y Fp(,)f(so)g(that)h(it)f(is)g(most)f(easily)h(\014xed)h(b)o(y)f
(comparing)f(the)100 2758 y(resulting)j Fq(a)f Fp(and)h
Fq(a)409 2764 y Fh(D)453 2758 y Fp(with)g(the)g(required)h(asymptotics)
e(\(2.25\).)976 2883 y(48)p eop
%%Page: 50 50
50 49 bop 0 186 a Ft(e)23 193 y Fr(3)59 186 y FB(and)16
b Ft(e)176 193 y Fr(1)197 186 y FB(.)k(Let)c(\014rst)f
Ft(c)f FB(=)g Ft(e)527 193 y Fr(1)548 186 y FB(.)20 b(Then)d(~)-25
b Ft(c)14 b FB(=)f(1)j(and)g Ft(\027)s FB(\()p Ft(c)p
FB(\))e(=)f Fs(\000)1127 131 y Fk(\020)1162 167 y Fr(1)p
Fm(\000)p Fu(k)1232 151 y Fj(0)p 1162 175 82 2 v 1162
204 a Fr(1+)p Fu(k)1232 193 y Fj(0)1248 131 y Fk(\021)1278
142 y Fr(2)1313 186 y Fs(\021)h(\000)1406 173 y FB(~)1405
186 y Ft(k)1432 168 y Fr(2)1468 186 y FB(\(see)h(\(B.3\)\).)20
b(One)15 b(has)h([14])417 342 y(\005)454 349 y Fr(1)475
342 y FB(\()p Fs(\000)534 329 y FB(~)533 342 y Ft(k)560
322 y Fr(2)581 342 y Ft(;)604 329 y FB(~)603 342 y Ft(k)r
FB(\))e(=)774 308 y(1)p 719 331 134 2 v 719 383 a(1)e
Fs(\000)806 370 y FB(~)805 383 y Ft(k)832 369 y Fr(2)866
342 y Ft(E)s FB(\()925 329 y(~)924 342 y Ft(k)r FB(\))i(=)1041
308 y(1)d(+)g Ft(k)1152 290 y Fm(0)p 1041 331 125 2 v
1071 376 a FB(4)p Ft(k)1122 362 y Fm(0)1178 302 y Fk(\000)1201
342 y Ft(E)s FB(\()p Ft(k)r FB(\))g(+)g Ft(k)1392 322
y Fm(0)1405 342 y Ft(K)t FB(\()p Ft(k)r FB(\))1515 302
y Fk(\001)1562 342 y Ft(:)282 b FB(\(B)p Ft(:)p FB(10\))0
472 y(Hence)665 566 y Ft(I)691 540 y Fr(\(1\))687 581
y(3)742 566 y FB(\()p Ft(e)784 573 y Fr(1)805 566 y FB(\))14
b(=)1005 533 y(2)p 894 555 247 2 v 894 604 a(\()p Ft(e)936
611 y Fr(1)968 604 y Fs(\000)d Ft(e)1041 611 y Fr(3)1062
604 y FB(\))1081 589 y Fr(3)p Fu(=)p Fr(2)1174 533 y
Ft(E)s FB(\()p Ft(k)r FB(\))p 1159 555 134 2 v 1159 600
a Ft(k)1186 586 y Fr(2)1218 600 y Fs(\000)g FB(1)1314
566 y Ft(:)530 b FB(\(B)p Ft(:)p FB(11\))0 708 y(This)19
b(can)g(also)g(b)q(e)g(directly)e(obtained)i(since)f
Ft(I)906 681 y Fr(\(1\))902 722 y(3)956 708 y FB(\()p
Ft(e)998 715 y Fr(1)1019 708 y FB(\))g(=)g(2)1159 688
y Fr(d)p 1141 696 57 2 v 1141 725 a(d)p Fu(e)1180 729
y Fn(1)1203 708 y Ft(I)1229 681 y Fr(\(1\))1225 722 y(1)1280
708 y FB(.)28 b(Using)19 b Ft(k)1489 689 y Fr(2)1534
688 y(d)p 1515 696 60 2 v 1515 725 a(d)p Fu(k)1557 714
y Fn(2)1580 708 y Ft(K)t FB(\()p Ft(k)r FB(\))f(=)g Fs(\000)1808
688 y Fr(1)p 1808 696 20 2 v 1808 725 a(2)1832 708 y
Ft(K)t FB(\()p Ft(k)r FB(\))13 b(+)5 767 y Fr(1)p 5 775
V 5 803 a(2)37 761 y Fu(E)r Fr(\()p Fu(k)q Fr(\))p 34
775 88 2 v 34 803 a(1)p Fm(\000)p Fu(k)104 793 y Fn(2)147
786 y FB(this)20 b(giv)o(es)f(again)j(\(B.11\).)33 b(Ob)o(viously)l(,)
19 b(this)h(constitutes)h(a)f(consistency)g(c)o(hec)o(k)e(for)j(the)f
(third)0 854 y(equation)d(\(B.2\).)23 b(Let)17 b(no)o(w)h
Ft(c)d FB(=)g Ft(e)651 861 y Fr(2)672 854 y FB(.)24 b(Then)18
b(~)-25 b Ft(c)15 b FB(=)h Ft(k)955 836 y Fr(2)993 854
y FB(and)i Ft(\027)s FB(\()p Ft(c)p FB(\))d(=)g Fs(\000)p
FB(1.)24 b(\005)1381 861 y Fr(1)1419 854 y FB(is)17 b(singular)g(for)h
Ft(\027)g FB(=)d Fs(\000)p FB(1,)i(but)0 925 y Ft(I)26
899 y Fr(\(1\))22 940 y(3)77 925 y FB(\()p Ft(e)119 932
y Fr(2)139 925 y FB(\))i(can)g(b)q(e)f(obtained)h(in)f(exactly)f(the)i
(same)e(w)o(a)o(y)h(since)g Ft(I)1229 899 y Fr(\(1\))1225
940 y(3)1280 925 y FB(\()p Ft(e)1322 932 y Fr(2)1343
925 y FB(\))f(=)h(2)1482 905 y Fr(d)p 1464 914 57 2 v
1464 942 a(d)p Fu(e)1503 946 y Fn(2)1526 925 y Ft(I)1552
899 y Fr(\(1\))1548 940 y(1)1621 925 y FB(pro)o(vided)g(w)o(e)g(k)o
(eep)0 988 y(the)e(in)o(tegration)g(cycle)f Ft(\015)478
995 y Fr(1)515 988 y FB(\014xed)h(and)h(a)o(w)o(a)o(y)f(from)f
Ft(e)988 995 y Fr(2)1025 988 y FB(\(and)i Ft(e)1162 995
y Fr(3)1183 988 y FB(\).)k(W)l(e)16 b(then)g(immedi)o(ately)d(get)506
1124 y Ft(I)532 1097 y Fr(\(1\))528 1139 y(3)582 1124
y FB(\()p Ft(e)624 1131 y Fr(2)645 1124 y FB(\))h(=)846
1090 y(2)p 735 1112 247 2 v 735 1161 a(\()p Ft(e)777
1168 y Fr(1)809 1161 y Fs(\000)c Ft(e)881 1168 y Fr(3)902
1161 y FB(\))921 1146 y Fr(3)p Fu(=)p Fr(2)1011 1090
y FB(1)p 999 1112 49 2 v 999 1158 a Ft(k)1026 1144 y
Fr(2)1061 1054 y Fk(\022)1117 1090 y Ft(E)s FB(\()p Ft(k)r
FB(\))p 1102 1112 134 2 v 1102 1158 a(1)i Fs(\000)f Ft(k)1215
1144 y Fr(2)1252 1124 y Fs(\000)g Ft(K)t FB(\()p Ft(k)r
FB(\))1412 1054 y Fk(\023)1473 1124 y Ft(:)371 b FB(\(B)p
Ft(:)p FB(12\))0 1262 y(Finally)l(,)14 b(if)i Ft(c)d
FB(=)h Ft(e)329 1269 y Fr(3)350 1262 y FB(,)i(one)g(has)i(~)-25
b Ft(c)13 b FB(=)h(0)j(and)f(also)h Ft(\027)s FB(\()p
Ft(c)p FB(\))d(=)f Fs(\000)p FB(1,)j(and)h(again)f(\005)1380
1269 y Fr(1)1417 1262 y FB(is)g(singular,)g(but)g(w)o(e)g(can)g(still)0
1333 y(use)g Ft(I)110 1307 y Fr(\(1\))106 1348 y(3)161
1333 y FB(\()p Ft(e)203 1340 y Fr(3)224 1333 y FB(\))d(=)h(2)355
1314 y Fr(d)p 337 1322 57 2 v 337 1351 a(d)p Fu(e)376
1355 y Fn(3)399 1333 y Ft(I)425 1307 y Fr(\(1\))421 1348
y(1)492 1333 y FB(whic)o(h)h(readily)h(giv)o(es)543 1471
y Ft(I)569 1445 y Fr(\(1\))565 1486 y(3)620 1471 y FB(\()p
Ft(e)662 1478 y Fr(3)683 1471 y FB(\))d(=)883 1438 y(2)p
772 1460 247 2 v 772 1509 a(\()p Ft(e)814 1516 y Fr(1)846
1509 y Fs(\000)e Ft(e)919 1516 y Fr(3)940 1509 y FB(\))959
1494 y Fr(3)p Fu(=)p Fr(2)1049 1438 y FB(1)p 1037 1460
49 2 v 1037 1506 a Ft(k)1064 1491 y Fr(2)1098 1471 y
FB(\()p Ft(K)t FB(\()p Ft(k)r FB(\))g Fs(\000)g Ft(E)s
FB(\()p Ft(k)r FB(\)\))25 b Ft(:)408 b FB(\(B)p Ft(:)p
FB(13\))0 1609 y(Of)18 b(course,)h(using)f(the)h(\014rst)f(t)o(w)o(o)g
(equations)h(\(B.2\),)f(one)g(can)h(reexpress)f Ft(K)t
FB(\()p Ft(k)r FB(\))g(and)h Ft(E)s FB(\()p Ft(k)r FB(\))f(in)g(terms)f
(of)0 1681 y Ft(I)26 1654 y Fr(\(1\))22 1696 y(1)93 1681
y FB(and)g Ft(I)214 1654 y Fr(\(1\))210 1696 y(2)280
1681 y FB(and)g(hence)f(w)o(e)g(ha)o(v)o(e)f(sho)o(wn)i(ho)o(w)g(to)f
(express)g Ft(I)1200 1654 y Fr(\(1\))1196 1696 y(3)1251
1681 y FB(\()p Ft(e)1293 1688 y Fu(j)1312 1681 y FB(\))g(in)g(terms)f
(of)i Ft(I)1622 1654 y Fr(\(1\))1618 1696 y(1)1688 1681
y FB(and)g Ft(I)1809 1654 y Fr(\(1\))1805 1696 y(2)1860
1681 y FB(.)83 1772 y(W)l(e)22 b(also)h(need)f(to)g(T)l(a)o(ylor)g
(expand)h Ft(I)823 1745 y Fr(\()p Fu(j)r Fr(\))819 1787
y(3)872 1772 y FB(\()p Ft(c)15 b FB(+)g Ft(\016)r(c)p
FB(\),)23 b(hence)f(w)o(e)f(w)o(an)o(t)i(to)f(compute)f(the)h(deriv)m
(ativ)o(e)13 1826 y Fr(d)p 5 1834 38 2 v 5 1863 a(d)p
Fu(c)48 1846 y Ft(I)74 1819 y Fr(\()p Fu(j)r Fr(\))70
1861 y(3)123 1846 y FB(\()p Ft(c)p FB(\).)f(F)l(or)c(an)o(y)f(cycle)e
Ft(\015)542 1853 y Fu(j)579 1846 y FB(w)o(e)i(ha)o(v)o(e)739
1949 y(d)p 728 1971 49 2 v 728 2016 a(d)p Ft(c)781 1982
y(I)807 1956 y Fr(\()p Fu(j)r Fr(\))803 1997 y(3)856
1982 y FB(\()p Ft(c)p FB(\))e(=)981 1914 y Fk(I)977 2055
y Fu(\015)997 2059 y Fl(j)1114 1949 y FB(d)p Ft(\030)p
1044 1971 191 2 v 1044 2016 a(\021)r FB(\()p Ft(\030)g
Fs(\000)c Ft(c)p FB(\))1213 2002 y Fr(2)1256 1982 y Ft(:)588
b FB(\(B)p Ft(:)p FB(14\))0 2155 y(No)o(w)16 b(observ)o(e)g(that)404
2281 y(0)e(=)494 2214 y Fk(I)552 2281 y FB(d)p Ft(\030)628
2248 y FB(d)p 616 2270 51 2 v 616 2315 a(d)p Ft(\030)717
2248 y(\021)p 677 2270 106 2 v 677 2315 a(\030)g Fs(\000)d
Ft(c)802 2281 y FB(=)853 2214 y Fk(I)911 2281 y FB(d)p
Ft(\030)976 2248 y FB(12)p Ft(\030)1047 2230 y Fr(2)1080
2248 y Fs(\000)g Ft(g)1153 2255 y Fr(2)p 976 2270 200
2 v 979 2315 a FB(2)p Ft(\021)r FB(\()p Ft(\030)i Fs(\000)e
Ft(c)p FB(\))1191 2281 y Fs(\000)1241 2214 y Fk(I)1299
2281 y FB(d)p Ft(\030)1435 2248 y(\021)1461 2230 y Fr(2)p
1363 2270 191 2 v 1363 2315 a Ft(\021)r FB(\()p Ft(\030)i
Fs(\000)e Ft(c)p FB(\))1532 2301 y Fr(2)1575 2281 y Ft(:)269
b FB(\(B)p Ft(:)p FB(15\))0 2416 y(This)18 b(is)f(a)h(sum)f(of)h(in)o
(tegrals)f(con)o(taining)h Ft(I)826 2423 y Fr(1)846 2416
y Ft(;)8 b(I)890 2423 y Fr(2)929 2416 y FB(and)18 b Ft(I)1047
2423 y Fr(3)1068 2416 y FB(,)f(as)i(w)o(ell)d(as)i(the)g(in)o(tegral)f
(\(B.14\).)25 b(Solving)17 b(for)0 2478 y(the)f(latter)g(giv)o(es)291
2607 y(\(4)p Ft(c)355 2587 y Fr(3)388 2607 y Fs(\000)11
b Ft(cg)482 2614 y Fr(2)515 2607 y Fs(\000)f Ft(g)587
2614 y Fr(3)609 2607 y FB(\))636 2539 y Fk(I)769 2574
y FB(d)p Ft(\030)p 699 2596 V 699 2641 a(\021)r FB(\()p
Ft(\030)k Fs(\000)d Ft(c)p FB(\))869 2627 y Fr(2)909
2607 y FB(=)j Fs(\000)p FB(2)p Ft(c)8 b(I)1075 2614 y
Fr(1)1107 2607 y FB(+)j(2)d Ft(I)1210 2614 y Fr(2)1243
2607 y Fs(\000)1297 2574 y FB(1)p 1297 2596 25 2 v 1297
2641 a(2)1327 2607 y(\(12)p Ft(c)1415 2587 y Fr(2)1448
2607 y Fs(\000)j Ft(g)1521 2614 y Fr(2)1542 2607 y FB(\))d
Ft(I)1591 2614 y Fr(3)1612 2607 y FB(\()p Ft(c)p FB(\))16
b Ft(:)157 b FB(\(B)p Ft(:)p FB(16\))0 2742 y(Inserting)17
b(no)o(w)g(the)g(appropriate)g(v)m(alues)g(of)g Ft(g)881
2749 y Fr(2)920 2742 y FB(and)h Ft(g)1039 2749 y Fr(3)1077
2742 y FB(for)g(the)e Ft(N)1276 2751 y Fu(f)1316 2742
y FB(=)f(1)j(curv)o(e)d(and)j(taking)f Ft(c)e FB(=)g
Fs(\000)p Ft(u=)p FB(3)976 2883 y Fp(49)p eop
%%Page: 51 51
51 50 bop 0 164 a FB(yields)15 b(the)h(desired)g(relation)g(for)g(the)g
(deriv)m(ativ)o(e)f Ft(I)974 146 y Fm(0)970 178 y Fr(3)990
164 y FB(\()p Ft(c)p FB(\))f Fs(\021)1129 144 y Fr(d)p
1121 152 38 2 v 1121 181 a(d)p Fu(c)1164 164 y Ft(I)1186
171 y Fr(3)1206 164 y FB(\()p Ft(c)p FB(\):)529 293 y
Fs(\000)573 259 y FB(\003)607 241 y Fr(6)607 273 y(1)p
573 281 56 2 v 576 327 a FB(32)633 293 y Ft(I)659 272
y Fm(0)655 305 y Fr(3)684 237 y Fk(\020)714 293 y Fs(\000)758
259 y Ft(u)p 758 281 28 2 v 760 327 a FB(3)791 237 y
Fk(\021)834 293 y FB(=)891 259 y Ft(u)p 891 281 V 893
327 a FB(3)924 293 y Ft(I)946 300 y Fr(1)978 293 y FB(+)d
Ft(I)1049 300 y Fr(2)1080 293 y Fs(\000)1135 259 y Ft(m)p
FB(\003)1212 241 y Fr(3)1212 273 y(1)p 1135 281 98 2
v 1172 327 a FB(4)1238 293 y Ft(I)1260 300 y Fr(3)1289
237 y Fk(\020)1319 293 y Fs(\000)1363 259 y Ft(u)p 1363
281 28 2 v 1365 327 a FB(3)1395 237 y Fk(\021)1450 293
y Ft(:)394 b FB(\(B)p Ft(:)p FB(17\))83 416 y(A)14 b(w)o(ord)i(of)f
(caution)g(is)f(in)h(order:)20 b(in)15 b(eq.)20 b(\(B.2\))14
b(w)o(e)h(ha)o(v)o(e)f(replaced)g(the)g(in)o(tegrals)g(o)o(v)o(er)g
(the)h(cycle)e Ft(\015)1971 423 y Fr(1)0 477 y FB(b)o(y)18
b(t)o(wice)e(the)i(in)o(tegrals)g(from)e Ft(e)621 484
y Fr(3)660 477 y FB(to)j Ft(e)745 484 y Fr(2)766 477
y FB(.)26 b(Dep)q(ending)18 b(on)h(the)f(detailed)f(form)g(of)h(the)g
(cycle,)e(these)i(t)o(w)o(o)0 540 y(de\014nitions)g(ma)o(y)f(di\013er)h
(for)g Ft(I)572 547 y Fr(3)593 540 y FB(,)g(whic)o(h)g(has)h(a)g(p)q
(ole)f(at)h Ft(\030)h FB(=)d Ft(c)p FB(,)h(b)o(y)g(terms)f(2)p
Ft(\031)r(i)8 b FB(res)1567 517 y Fr(d)p Fu(\030)p 1567
529 40 2 v 1577 557 a(\021)1612 540 y FB(.)27 b(So)19
b(w)o(e)f(allo)o(w)g(the)0 604 y(freedom)d(to)i(add)h(suc)o(h)e(terms)g
(\\b)o(y)g(hand",)i(this)e(b)q(eing)h(equiv)m(alen)o(t)f(to)h(c)o
(hanging)g(the)f(de\014nition)h(of)g(the)0 666 y(cycle)e
Ft(\015)146 673 y Fr(1)185 666 y FB(with)h(resp)q(ect)h(to)g(the)g(p)q
(osition)g(of)g(the)g(p)q(ole.)23 b(A)17 b(related)f(p)q(oin)o(t)h(is)f
(that)i(for)f Ft(c)e FB(=)f Ft(e)1748 673 y Fr(2)1786
666 y FB(or)j Ft(c)e FB(=)g Ft(e)1958 673 y Fr(3)1979
666 y FB(,)0 727 y(one)h(has)h Ft(\027)s FB(\()p Ft(c)p
FB(\))d(=)f Fs(\000)p FB(1)k(and)f(\005)538 734 y Fr(1)559
727 y FB(\()p Fs(\000)p FB(1)p Ft(;)664 714 y FB(~)663
727 y Ft(k)r FB(\))g(div)o(erges.)k(Nev)o(ertheless,)13
b(w)o(e)j(can)g(remo)o(v)o(e)d(the)j(div)o(ergence)e(b)o(y)h(an)0
799 y(appropriate)f(c)o(hoice)e(of)h(in)o(tegration)g(con)o(tour.)865
770 y Fm(y)904 799 y FB(With)g(this)g(c)o(hoice)f(\005)1298
806 y Fr(1)1319 799 y FB(\()p Fs(\000)p FB(1)p Ft(;)1424
786 y FB(~)1423 799 y Ft(k)r FB(\))h(should)h(b)q(e)f(understo)q(o)q(d)
i(as)0 867 y Ft(K)t FB(\()65 854 y(~)64 867 y Ft(k)r
FB(\))10 b Fs(\000)h Ft(E)s FB(\()229 854 y(~)228 867
y Ft(k)r FB(\))p Ft(=)p FB(\(1)g Fs(\000)402 854 y FB(~)401
867 y Ft(k)428 849 y Fr(2)449 867 y FB(\).)21 b(Then,)16
b(eqs.)21 b(\(B.12\))15 b(and)i(\(B.13\))e(also)i(follo)o(w)f(in)f(a)h
(straigh)o(tforw)o(ard)h(manner,)0 939 y(using)j(\(B.7\),)f(from)f(the)
h(third)g(equation)g(\(B.2\).)30 b(Similar)17 b(remarks)h(apply)h(to)h
(the)f(in)o(tegrals)g Ft(I)1835 912 y Fr(\(2\))1831 954
y Fu(i)1904 939 y FB(o)o(v)o(er)0 1001 y(the)d(cycles)f
Ft(\015)249 1008 y Fr(2)270 1001 y FB(.)701 1725 y @beginspecial
0 @llx 0 @lly 314 @urx 342 @ury 1417 @rwi @setspecial
%%BeginDocument: rgf4.eps
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-71.0 413.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 842 m 0 0 l 595 0 l 595 842 l cp clip
 0.06000 0.06000 sc
/Symbol ff 360.00 scf sf
1650 4200 m
gs 1 -1 sc (2) col-1 sh gr
/Symbol ff 360.00 scf sf
1875 4050 m
gs 1 -1 sc (/ 2) col-1 sh gr
/Symbol ff 360.00 scf sf
3075 2400 m
gs 1 -1 sc (w) col-1 sh gr
7.500 slw
% Polyline
gs  clippath
5853 5970 m 5973 6000 l 5853 6030 l 6015 6030 l 6015 5970 l  cp clip
n 1200 6000 m 1200 6000 l 6000 6000 l gs col-1 s gr gr

% arrowhead
n 5853 5970 m 5973 6000 l 5853 6030 l 5853 6000 l 5853 5970 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 3000 5850 m 3000 6150 l gs col-1 s gr 
% Polyline
n 4800 5850 m 4800 6150 l gs col-1 s gr 
7.500 slw
% Polyline
gs  clippath
4688 1300 m 4783 1221 l 4736 1336 l 4833 1206 l 4785 1170 l  cp clip
n 1200 6000 m 4800 1200 l gs col-1 s gr gr

% arrowhead
n 4688 1300 m 4783 1221 l 4736 1336 l 4712 1318 l 4688 1300 l  cp gs 0.00 setgray ef gr  col-1 s
30.000 slw
% Polyline
n 2400 4050 m 2700 4350 l gs col-1 s gr 
% Polyline
n 3750 2250 m 4050 2550 l gs col-1 s gr 
% Polyline
n 2100 4800 m 5700 4800 l gs col-1 s gr 
% Polyline
n 3600 6000 m 6300 2400 l gs col-1 s gr 
/Symbol ff 360.00 scf sf
1425 4050 m
gs 1 -1 sc (w) col-1 sh gr
% Polyline
gs  clippath
3159 4710 m 3519 4800 l 3159 4890 l 3645 4890 l 3645 4710 l  cp clip
n 3300 4800 m 3600 4800 l gs col-1 s gr gr

% arrowhead
n 3159 4710 m 3519 4800 l 3159 4890 l 3159 4800 l 3159 4710 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
3300 2550 m
gs 1 -1 sc (2) col-1 sh gr
% Polyline
gs  clippath
5288 3599 m 5576 3364 l 5432 3707 l 5724 3318 l 5580 3210 l  cp clip
n 5400 3600 m 5625 3300 l gs col-1 s gr gr

% arrowhead
n 5288 3599 m 5576 3364 l 5432 3707 l 5360 3653 l 5288 3599 l  cp gs 0.00 setgray ef gr  col-1 s
/Symbol ff 360.00 scf sf
4650 6600 m
gs 1 -1 sc (w) col-1 sh gr
/Symbol ff 360.00 scf sf
4875 6825 m
gs 1 -1 sc (1) col-1 sh gr
/Symbol ff 360.00 scf sf
2700 6600 m
gs 1 -1 sc (w) col-1 sh gr
/Symbol ff 360.00 scf sf
2925 6825 m
gs 1 -1 sc (1) col-1 sh gr
/Symbol ff 360.00 scf sf
3150 6600 m
gs 1 -1 sc (/ 2) col-1 sh gr
/Symbol ff 360.00 scf sf
5100 5175 m
gs 1 -1 sc (g) col-1 sh gr
/Symbol ff 360.00 scf sf
5325 5325 m
gs 1 -1 sc (1) col-1 sh gr
/Symbol ff 360.00 scf sf
6000 3300 m
gs 1 -1 sc (g) col-1 sh gr
/Symbol ff 360.00 scf sf
6225 3450 m
gs 1 -1 sc (2) col-1 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 118 1840 a Fo(Fig.)25 b(21:)d FB(The)17
b(elliptic)d(curv)o(e)h(in)h(the)h Ft(z)r FB(-plane)f(where)g(it)g(is)h
(simply)d(a)j(parallelogram)f(with)118 1889 y(sides)g
Ft(!)265 1896 y Fr(1)303 1889 y FB(and)h Ft(!)428 1896
y Fr(2)449 1889 y FB(.)k(The)c(cycles)d Ft(\015)749 1896
y Fr(1)787 1889 y FB(and)j Ft(\015)907 1896 y Fr(2)945
1889 y FB(are)f(straigh)o(t)g(lines)f(parallel)h(to)g(the)g(sides)g(of)
h(the)118 1937 y(parallelogram.)83 2082 y(T)l(o)e(gain)f(a)h(somewhat)e
(b)q(etter)h(con)o(trol)g(o)o(v)o(er)f(the)h(in)o(tegration)g(cycles)e
Ft(\015)1417 2089 y Fr(1)1453 2082 y FB(and)j Ft(\015)1571
2089 y Fr(2)1592 2082 y FB(,)f(in)g(particular)g(with)0
2144 y(resp)q(ect)d(to)i(the)e(p)q(ositions)i(of)f(the)f(p)q(oles,)i
(it)e(is)g(sometimes)e(adv)m(an)o(tageous)14 b(to)e(in)o(tro)q(duce)f
(the)h(uniformizing)0 2206 y(v)m(ariable)i Ft(z)j FB(via)e(the)f
(doubly)h(p)q(erio)q(dic)f(W)l(eierstra\031)h Ft(})g
FB(function)f([19])h(as)h Ft(\030)g FB(=)e Ft(})p FB(\()p
Ft(z)r FB(\),)g Ft(\021)i FB(=)e Ft(})1689 2188 y Fm(0)1701
2206 y FB(\()p Ft(z)r FB(\).)21 b(Then)15 b(the)0 2278
y(in)o(tegrals)h Ft(I)223 2251 y Fr(\()p Fu(i)p Fr(\))219
2293 y(1)283 2278 y FB(are)h(simply)579 2427 y Ft(I)605
2401 y Fr(\()p Fu(i)p Fr(\))601 2442 y(1)664 2427 y FB(=)715
2359 y Fk(I)713 2500 y Fu(\015)733 2504 y Fl(i)779 2394
y FB(d)p Ft(\030)p 779 2416 51 2 v 791 2461 a(\021)848
2427 y FB(=)900 2359 y Fk(Z)897 2500 y Fu(\015)917 2504
y Fl(i)963 2394 y Ft(})994 2375 y Fm(0)1007 2394 y FB(\()p
Ft(z)r FB(\)d)p Ft(z)p 963 2416 159 2 v 989 2461 a(})1020
2447 y Fm(0)1033 2461 y FB(\()p Ft(z)r FB(\))1140 2427
y(=)1209 2349 y Fu(!)1233 2353 y Fl(i)1192 2359 y Fk(Z)1196
2503 y Fr(0)1250 2427 y FB(d)p Ft(z)f FB(=)e Ft(!)1398
2434 y Fu(i)1858 2427 y FB(\(B)p Ft(:)p FB(18\))0 2590
y(where)20 b Ft(!)175 2597 y Fr(1)217 2590 y FB(and)h
Ft(!)346 2597 y Fr(2)388 2590 y FB(are)g(the)f(t)o(w)o(o)g(p)q(erio)q
(ds)h(of)g Ft(})g FB(and)g(are)f(suc)o(h)g(that)h Ft(e)1376
2597 y Fr(1)1418 2590 y FB(=)g Ft(})1516 2550 y Fk(\000)1544
2571 y Fu(!)1568 2575 y Fn(1)p 1544 2579 42 2 v 1555
2608 a Fr(2)1590 2550 y Fk(\001)1613 2590 y FB(,)g Ft(e)1671
2597 y Fr(2)1713 2590 y FB(=)g Ft(})1811 2550 y Fk(\000)1839
2571 y Fu(!)1863 2575 y Fn(1)1880 2571 y Fr(+)p Fu(!)1934
2575 y Fn(2)p 1839 2579 113 2 v 1885 2608 a Fr(2)1956
2550 y Fk(\001)1979 2590 y FB(,)p 0 2652 698 2 v 60 2702
a Fi(y)40 b Fp(This)18 b(is)g(so)g(b)q(ecause)i Fq(\027)h
Fi(!)d Fp(1)g(t)o(ypically)e(o)q(ccurs)k(under)f(the)g(R)o(G)e(\015o)o
(w)g(as)i(some)e(bare)h(mass)g Fq(m)1694 2708 y Fh(j)1730
2702 y Fi(!)g(1)g Fp(and)g(the)100 2752 y(div)o(ergen)o(t)c(part)g(of)f
(\005)449 2758 y Fd(1)482 2752 y Fp(precisely)i(is)e(some)g(in)o(teger)
i(m)o(ultiple)c(of)1157 2731 y Fh(m)1186 2735 y Fa(j)p
1149 2743 61 2 v 1149 2771 a Fd(2)1166 2747 y Ff(p)p
1193 2747 17 2 v 24 x Fd(2)1215 2752 y Fp(.)976 2883
y(50)p eop
%%Page: 52 52
52 51 bop 0 160 a Ft(e)23 167 y Fr(3)63 160 y FB(=)19
b Ft(})159 120 y Fk(\000)187 141 y Fu(!)211 145 y Fn(2)p
187 149 42 2 v 198 178 a Fr(2)233 120 y Fk(\001)256 160
y FB(.)30 b(The)19 b(cycle)f Ft(\015)552 167 y Fr(1)593
160 y FB(is)h(mapp)q(ed)g(in)g(the)g Ft(z)r FB(-plane)g(to)g(a)h
(straigh)o(t)g(line)e(from)g(0)i(to)f Ft(!)1794 167 y
Fr(1)1835 160 y FB(\(or)h(an)o(y)0 222 y(shifted)c(cop)o(y)g(of)g(it\))
g(while)f Ft(\015)548 229 y Fr(2)586 222 y FB(is)h(mapp)q(ed)g(to)g
(the)g(straigh)o(t)h(line)e(from)g(0)i(to)f Ft(!)1482
229 y Fr(2)1504 222 y FB(,)g(see)g(Fig.)21 b(21.)83 310
y(Ob)o(viously)g(one)h(has)g Ft(\034)29 b FB(=)621 290
y Fu(!)645 294 y Fn(2)p 621 299 V 621 327 a Fu(!)645
331 y Fn(1)667 310 y FB(.)37 b(Giv)o(en)21 b(the)g Ft(e)977
317 y Fr(1)998 310 y Ft(;)8 b(e)1043 317 y Fr(2)1064
310 y Ft(;)g(e)1109 317 y Fr(3)1130 310 y FB(,)22 b(one)g(can)g(obtain)
g Ft(!)1543 317 y Fr(1)1587 310 y FB(and)g Ft(!)1717
317 y Fr(2)1738 310 y FB(,)h(hence)e Ft(I)1942 284 y
Fr(\(1\))1938 325 y(1)0 390 y FB(and)c Ft(I)121 364 y
Fr(\(2\))117 405 y(1)188 390 y FB(using)g(the)f(in)o(v)o(erse)e(of)j
(the)f Ft(})g FB(function.)22 b(The)16 b(latter)g(is)g(con)o(v)o(enien)
o(tly)e(expressed)h(through)j(the)0 452 y(in)o(v)o(erse)c(of)j(the)f
(Jacobi)g(elliptic)e(function)i(sn)q(:)425 591 y Ft(z)448
599 y Fu(\030)482 591 y Fs(\021)e Ft(})566 570 y Fm(\000)p
Fr(1)617 591 y FB(\()p Ft(\030)r FB(\))g(=)860 557 y(1)p
749 579 247 2 v 749 628 a(\()p Ft(e)791 635 y Fr(1)823
628 y Fs(\000)d Ft(e)896 635 y Fr(3)917 628 y FB(\))936
613 y Fr(1)p Fu(=)p Fr(2)1017 591 y FB(sn)1063 570 y
Fm(\000)p Fr(1)1122 505 y Fk(")1151 520 y(\022)1193 557
y Ft(e)1216 564 y Fr(1)1248 557 y Fs(\000)g Ft(e)1321
564 y Fr(3)p 1193 579 149 2 v 1203 625 a Ft(\030)j Fs(\000)d
Ft(e)1311 632 y Fr(3)1347 520 y Fk(\023)1383 532 y Fr(1)p
Fu(=)p Fr(2)1451 591 y Ft(;)d(k)1500 505 y Fk(#)1554
591 y Ft(:)290 b FB(\(B)p Ft(:)p FB(19\))0 749 y(F)l(or)19
b(a)g(n)o(umerical)d(computation)i(of)g(the)h Ft(!)820
756 y Fu(i)853 749 y FB(=)f Ft(I)935 722 y Fr(\()p Fu(i)p
Fr(\))931 764 y(1)980 749 y FB(,)g(eq.)28 b(\(B.2\))18
b(is)h(of)f(course)h(simplest.)26 b(Next)18 b(one)h(has)0
811 y(\(do)e(not)f(confuse)h(the)f Ft(\021)454 818 y
Fu(i)485 811 y FB(with)g Ft(\021)r FB(\))773 915 y Ft(I)799
888 y Fr(\()p Fu(i)p Fr(\))795 930 y(2)857 915 y FB(=)909
847 y Fk(I)906 988 y Fu(\015)926 992 y Fl(i)972 881 y
Ft(\030)r FB(d)p Ft(\030)p 972 903 75 2 v 996 949 a(\021)1065
915 y FB(=)e Fs(\000)p FB(2)p Ft(\021)1204 922 y Fu(i)1858
915 y FB(\(B)p Ft(:)p FB(20\))0 1070 y(where)i(again)h(n)o(umerical)d
(computation)h(of)i(the)f Ft(\021)943 1077 y Fu(i)974
1070 y FB(is)g(easiest)g(done)h(via)f(\(B.2\).)k(Finally)l(,)15
b(one)h(has)522 1192 y Ft(I)548 1165 y Fr(\()p Fu(i)p
Fr(\))544 1207 y(3)607 1192 y FB(=)659 1124 y Fk(I)656
1265 y Fu(\015)676 1269 y Fl(i)781 1158 y FB(d)p Ft(\030)p
722 1180 170 2 v 722 1226 a(\021)r FB(\()p Ft(\030)d
Fs(\000)e Ft(c)p FB(\))910 1192 y(=)1016 1158 y(1)p 967
1180 123 2 v 967 1226 a Ft(})998 1212 y Fm(0)1010 1226
y FB(\()p Ft(z)1052 1233 y Fu(c)1070 1226 y FB(\))1103
1192 y([)o(2)p Ft(!)1170 1199 y Fu(i)1186 1192 y Ft(\020)t
FB(\()p Ft(z)1253 1199 y Fu(c)1272 1192 y FB(\))g Fs(\000)g
FB(4)p Ft(\021)1400 1199 y Fu(i)1415 1192 y Ft(z)1438
1199 y Fu(c)1457 1192 y FB(])387 b(\(B)p Ft(:)p FB(21\))0
1356 y(where)16 b Ft(z)164 1363 y Fu(c)199 1356 y FB(is)g(giv)o(en)f(b)
o(y)h(\(B.19\))g(with)g Ft(\030)g FB(=)e Ft(c)p FB(,)i(and)666
1482 y Ft(\020)t FB(\()p Ft(z)r FB(\))d(=)824 1448 y(2)p
Ft(\021)872 1455 y Fr(1)p 824 1471 70 2 v 833 1516 a
Ft(!)863 1523 y Fr(1)899 1482 y Ft(z)g FB(+)1000 1448
y Ft(\031)p 989 1471 52 2 v 989 1516 a(!)1019 1523 y
Fr(1)1050 1448 y Ft(\022)1074 1430 y Fm(0)1073 1462 y
Fr(1)p 1050 1471 45 2 v 1050 1516 a Ft(\022)1073 1523
y Fr(1)1108 1412 y Fk(\022)1149 1448 y Ft(\031)r(z)p
1149 1471 55 2 v 1150 1516 a(!)1180 1523 y Fr(1)1209
1425 y Fk(\014)1209 1455 y(\014)1209 1485 y(\014)1225
1482 y Ft(\034)1252 1412 y Fk(\023)1313 1482 y Ft(:)531
b FB(\(B)p Ft(:)p FB(22\))774 1691 y Fz(APPENDIX)19 b(C)83
1792 y FB(In)c(this)g(app)q(endix)g(w)o(e)f(giv)o(e)g(the)h(di\013eren)
o(tials)f Ft(\025)h FB(for)g(the)g(di\013eren)o(t)f(massiv)o(e)f
(theories)i(as)h(w)o(ell)d(as)j(the)0 1854 y(decomp)q(osition)i(of)h
(the)g(p)q(erio)q(d)g(in)o(tegrals)g(in)f(terms)g(of)h(the)f(three)h
(basic)f(elliptic)f(in)o(tegrals)h Ft(I)1801 1861 y Fr(1)1822
1854 y Ft(;)e(I)1874 1861 y Fr(2)1914 1854 y FB(and)0
1916 y Ft(I)22 1923 y Fr(3)43 1916 y FB(.)21 b(W)l(e)16
b(also)h(c)o(hec)o(k)d(some)h(R)o(G)i(\015o)o(ws)f(at)h(the)f(lev)o(el)
e(of)j(these)f(in)o(tegrals.)0 2006 y(One)g(\015a)o(v)o(our:)21
b Ft(N)322 2015 y Fu(f)361 2006 y FB(=)14 b(1)p 0 2028
437 2 v 83 2086 a(A)i(one-form)f Ft(\025)i FB(satisfying)f(\(2.4\))h
(ob)o(viously)f(is)328 2219 y Ft(\025)e FB(=)g Fs(\000)466
2144 y(p)p 507 2144 25 2 v 507 2185 a FB(2)p 466 2208
66 2 v 472 2253 a(4)p Ft(\031)541 2185 y(y)c FB(d)p Ft(x)p
541 2208 89 2 v 561 2253 a(x)589 2239 y Fr(2)649 2219
y FB(=)706 2144 y Fs(p)p 747 2144 25 2 v 747 2185 a FB(2)p
706 2208 66 2 v 712 2253 a(4)p Ft(\031)785 2149 y Fk(\024)811
2219 y FB(d)p Ft(x)885 2185 y FB(d)p 871 2208 55 2 v
871 2253 a(d)p Ft(x)939 2149 y Fk(\022)981 2185 y Ft(x)p
981 2208 28 2 v 982 2253 a(y)1013 2149 y Fk(\023)1061
2219 y Fs(\000)1111 2149 y Fk(\022)1148 2219 y FB(3)p
Ft(x)h Fs(\000)g FB(2)p Ft(u)g FB(+)1378 2185 y(\003)1412
2167 y Fr(3)1412 2199 y(1)p 1378 2208 56 2 v 1393 2253
a FB(4)1443 2185 y Ft(m)p 1443 2208 43 2 v 1450 2253
a(x)1491 2149 y Fk(\023)1541 2185 y FB(d)p Ft(x)p 1541
2208 55 2 v 1543 2253 a FB(2)p Ft(y)1600 2149 y Fk(\025)1651
2219 y Ft(:)216 b FB(\(C)p Ft(:)p FB(1\))0 2342 y(The)21
b(\014rst)h(term)e(in)g(the)i(brac)o(k)o(et)e(is)h(an)h(exact)e(form)h
(and)h(v)m(anishes)f(up)q(on)i(in)o(tegration)e(o)o(v)o(er)f(a)i
(cycle.)0 2404 y(Con)o(v)o(erting)16 b(to)g(W)l(eierstra\031)g(normal)g
(form)f(\(2.21\))i(b)o(y)e Ft(\021)h FB(=)e(2)p Ft(y)r(;)24
b(\030)17 b FB(=)c Ft(x)e Fs(\000)1406 2385 y Fu(u)p
1406 2393 23 2 v 1407 2422 a Fr(3)1449 2404 y FB(w)o(e)16
b(get)543 2474 y Fk(Z)601 2542 y Ft(\025)f FB(=)700 2467
y Fs(p)p 742 2467 25 2 v 41 x FB(2)p 700 2531 66 2 v
706 2576 a(4)p Ft(\031)779 2472 y Fk(\024)806 2542 y
Ft(u)8 b(I)864 2549 y Fr(1)896 2542 y Fs(\000)j FB(3)d
Ft(I)1000 2549 y Fr(2)1032 2542 y Fs(\000)1087 2508 y
FB(\003)1121 2490 y Fr(3)1121 2522 y(1)p 1087 2531 56
2 v 1102 2576 a FB(4)1147 2542 y Ft(m)g(I)1220 2549 y
Fr(3)1249 2487 y Fk(\020)1279 2542 y Fs(\000)1323 2508
y Ft(u)p 1323 2531 28 2 v 1325 2576 a FB(3)1355 2487
y Fk(\021)1385 2472 y(\025)1436 2542 y Ft(:)431 b FB(\(C)p
Ft(:)p FB(2\))0 2675 y(W)l(e)14 b(see)g(from)f(\(C.1\))h(that)g
Ft(\025)h FB(has)g(p)q(oles)f(at)g(\()p Ft(x)g FB(=)g(0)p
Ft(;)8 b(y)15 b FB(=)f Fs(\007)p Ft(i)p FB(\003)1146
2656 y Fr(3)1146 2688 y(1)1167 2675 y Ft(=)p FB(8\))g(with)g(residues)g
Fs(\006)1602 2655 y Fr(1)p 1584 2663 56 2 v 1584 2692
a(2)p Fu(\031)q(i)1658 2655 y(m)p 1649 2663 52 2 v 1649
2668 a Fm(p)p 1681 2668 20 2 v 31 x Fr(2)1720 2675 y
FB(in)f(agreemen)o(t)0 2746 y(with)j(eq.)21 b(\(2.10\).)976
2883 y Fp(51)p eop
%%Page: 53 53
53 52 bop 0 160 a FB(Tw)o(o)17 b(\015a)o(v)o(ours:)k
Ft(N)348 168 y Fu(f)387 160 y FB(=)14 b(2)p 0 181 464
2 v 83 246 a(W)l(e)i(ha)o(v)o(e)f([2])366 422 y Ft(\025)f
FB(=)g Fs(\000)504 347 y(p)p 545 347 25 2 v 545 388 a
FB(2)p 504 411 66 2 v 510 456 a(4)p Ft(\031)617 388 y(y)c
FB(d)p Ft(x)p 580 411 164 2 v 580 471 a(x)608 456 y Fr(2)640
471 y Fs(\000)695 445 y Fr(\003)722 433 y Fn(4)722 455
y(2)p 695 459 44 2 v 698 488 a Fr(64)762 422 y FB(=)k
Fs(\000)858 347 y(p)p 899 347 25 2 v 899 388 a FB(2)p
858 411 66 2 v 864 456 a(4)p Ft(\031)934 388 y FB(d)p
Ft(x)p 934 411 55 2 v 948 456 a(y)998 388 y FB(4)p Ft(y)1048
370 y Fr(2)p 998 411 72 2 v 1006 458 a FB(\003)1040 441
y Fr(2)1040 473 y(2)1083 337 y Fk( )1186 388 y FB(1)p
1127 411 143 2 v 1127 471 a Ft(x)d Fs(\000)1221 445 y
Fr(\003)1248 433 y Fn(2)1248 455 y(2)p 1221 459 44 2
v 1233 488 a Fr(8)1286 422 y Fs(\000)1399 388 y FB(1)p
1341 411 142 2 v 1341 471 a Ft(x)f FB(+)1433 445 y Fr(\003)1460
433 y Fn(2)1460 455 y(2)p 1433 459 44 2 v 1446 488 a
Fr(8)1487 337 y Fk(!)408 592 y FB(=)k Fs(\000)504 517
y(p)p 545 517 25 2 v 545 558 a FB(2)p 504 581 66 2 v
510 626 a(4)p Ft(\031)580 558 y FB(d)p Ft(x)p 580 581
55 2 v 594 626 a(y)648 507 y Fk(")677 592 y Ft(x)d Fs(\000)f
Ft(u)h Fs(\000)859 558 y FB(\003)893 540 y Fr(2)893 572
y(2)p 859 581 56 2 v 862 626 a FB(16)924 558 y(\()p Ft(m)986
565 y Fr(1)1018 558 y Fs(\000)g Ft(m)1111 565 y Fr(2)1132
558 y FB(\))1151 540 y Fr(2)p 924 581 248 2 v 977 641
a Ft(x)g Fs(\000)1070 616 y Fr(\003)1097 603 y Fn(2)1097
625 y(2)p 1070 629 44 2 v 1083 658 a Fr(8)1188 592 y
FB(+)1242 558 y(\003)1276 540 y Fr(2)1276 572 y(2)p 1242
581 56 2 v 1245 626 a FB(16)1307 558 y(\()p Ft(m)1369
565 y Fr(1)1401 558 y FB(+)g Ft(m)1493 565 y Fr(2)1514
558 y FB(\))1533 540 y Fr(2)p 1307 581 248 2 v 1360 641
a Ft(x)g FB(+)1453 616 y Fr(\003)1480 603 y Fn(2)1480
625 y(2)p 1453 629 44 2 v 1465 658 a Fr(8)1559 507 y
Fk(#)1613 592 y Ft(:)1881 509 y FB(\(C)p Ft(:)p FB(3\))0
770 y(Con)o(v)o(erting)16 b(to)g(W)l(eierstra\031)g(normal)g(form)f(of)
h(the)g(cubic,)f(again)i(b)o(y)f Ft(\021)g FB(=)e(2)p
Ft(y)r(;)24 b(\030)16 b FB(=)e Ft(x)d Fs(\000)1676 750
y Fu(u)p 1676 759 23 2 v 1677 787 a Fr(3)1719 770 y FB(w)o(e)16
b(arriv)o(e)f(at)19 875 y Fk(Z)77 942 y Ft(\025)f FB(=)176
868 y Fs(p)p 218 868 25 2 v 41 x FB(2)p 176 931 66 2
v 182 977 a(4)p Ft(\031)255 872 y Fk(\024)287 909 y FB(4)p
287 931 25 2 v 287 977 a(3)316 942 y Ft(u)8 b(I)374 949
y Fr(1)406 942 y Fs(\000)j FB(2)d Ft(I)510 949 y Fr(2)542
942 y FB(+)596 909 y(\003)630 891 y Fr(2)630 923 y(2)p
596 931 56 2 v 612 977 a FB(8)656 942 y(\()p Ft(m)718
949 y Fr(1)750 942 y Fs(\000)j Ft(m)843 949 y Fr(2)864
942 y FB(\))883 922 y Fr(2)913 942 y Ft(I)935 949 y Fr(3)964
872 y Fk(\022)1005 909 y FB(\003)1039 891 y Fr(2)1039
923 y(2)p 1005 931 V 1021 977 a FB(8)1077 942 y Fs(\000)1131
909 y Ft(u)p 1131 931 28 2 v 1133 977 a FB(3)1164 872
y Fk(\023)1212 942 y Fs(\000)1267 909 y FB(\003)1301
891 y Fr(2)1301 923 y(2)p 1267 931 56 2 v 1282 977 a
FB(8)1327 942 y(\()p Ft(m)1389 949 y Fr(1)1421 942 y
FB(+)g Ft(m)1513 949 y Fr(2)1534 942 y FB(\))1553 922
y Fr(2)1582 942 y Ft(I)1604 949 y Fr(3)1633 872 y Fk(\022)1670
942 y Fs(\000)1714 909 y FB(\003)1748 891 y Fr(2)1748
923 y(2)p 1714 931 V 1729 977 a FB(8)1785 942 y Fs(\000)1840
909 y Ft(u)p 1840 931 28 2 v 1842 977 a FB(3)1872 872
y Fk(\023\025)1960 942 y Ft(:)1881 1032 y FB(\(C)p Ft(:)p
FB(4\))0 1104 y(One)24 b(sees)g(from)e(\(C.3\))j(that)f
Ft(\025)g FB(has)h(p)q(oles)f(at)h(\()p Ft(x)h FB(=)1077
1081 y Fr(\003)1104 1065 y Fn(2)1104 1088 y(2)p 1077
1092 44 2 v 1090 1121 a Fr(8)1126 1104 y Ft(;)8 b(y)29
b FB(=)e Fs(\006)p Ft(i)p FB(\003)1356 1085 y Fr(2)1356
1117 y(2)1376 1104 y FB(\()p Ft(m)1438 1111 y Fr(1)1475
1104 y Fs(\000)17 b Ft(m)1574 1111 y Fr(2)1594 1104 y
FB(\))p Ft(=)p FB(8\))25 b(with)f(residues)0 1180 y Fs(\006)62
1160 y Fr(1)p 44 1168 56 2 v 44 1197 a(2)p Fu(\031)q(i)109
1160 y(m)143 1164 y Fn(1)160 1160 y Fm(\000)p Fu(m)224
1164 y Fn(2)p 109 1168 133 2 v 140 1204 a Fr(2)159 1173
y Fm(p)p 191 1173 20 2 v 31 x Fr(2)271 1180 y FB(and)h(at)f(\()p
Ft(x)k FB(=)f Fs(\000)625 1157 y Fr(\003)652 1142 y Fn(2)652
1164 y(2)p 625 1168 44 2 v 637 1197 a Fr(8)674 1180 y
Ft(;)8 b(y)29 b FB(=)e Fs(\007)p Ft(i)p FB(\003)904 1162
y Fr(2)904 1194 y(2)925 1180 y FB(\()p Ft(m)987 1187
y Fr(1)1024 1180 y FB(+)17 b Ft(m)1122 1187 y Fr(2)1143
1180 y FB(\))p Ft(=)p FB(8\))25 b(with)f(residues)g Fs(\006)1628
1160 y Fr(1)p 1610 1168 56 2 v 1610 1197 a(2)p Fu(\031)q(i)1675
1160 y(m)1709 1164 y Fn(1)1727 1160 y Fr(+)p Fu(m)1791
1164 y Fn(2)p 1675 1168 133 2 v 1706 1204 a Fr(2)1725
1173 y Fm(p)p 1757 1173 20 2 v 31 x Fr(2)1837 1180 y
FB([2].)45 b(In)0 1268 y(particular,)22 b(for)f Ft(m)367
1275 y Fr(1)410 1268 y FB(=)h Ft(m)513 1275 y Fr(2)556
1268 y FB(=)g Ft(m)p FB(,)g(there)e(are)i(only)f(the)f(p)q(oles)i(at)f
(\()p Ft(x)h FB(=)g Fs(\000)1477 1246 y Fr(\003)1504
1230 y Fn(2)1504 1253 y(2)p 1477 1257 44 2 v 1489 1285
a Fr(8)1526 1268 y Ft(;)8 b(y)24 b FB(=)e Fs(\007)p Ft(i)p
FB(\003)1746 1250 y Fr(2)1746 1282 y(2)1766 1268 y Ft(m=)p
FB(4\))g(with)0 1334 y(residues)16 b Fs(\006)247 1314
y Fr(1)p 229 1323 56 2 v 229 1351 a(2)p Fu(\031)q(i)303
1314 y(m)p 294 1323 52 2 v 294 1328 a Fm(p)p 326 1328
20 2 v 31 x Fr(2)350 1334 y FB(.)0 1445 y(Three)g(\015a)o(v)o(ours:)21
b Ft(N)379 1453 y Fu(f)418 1445 y FB(=)14 b(3)p 0 1466
495 2 v 83 1536 a(This)20 b(case)g(is)f(more)g(complicated)e(since)i
(the)g Ft(y)993 1518 y Fr(2)1034 1536 y FB(is)h(no)g(longer)g(linear)f
(in)g Ft(u)p FB(,)h(see)f(eq.)31 b(\(2.1\),)21 b(\(2.2\).)0
1598 y(There)d(exist)f(expressions)h(for)g Ft(\025)h
FB(in)e(the)h(literature)f(using)h(a)h(quartic)e(curv)o(e)g([21])h
(instead.)26 b(Pro)q(ceeding)0 1661 y(along)17 b(the)f(same)f(lines)h
(as)h(in)e([21])i(w)o(e)e(can)i(obtain)g Ft(\025)f FB(also)h(for)g(the)
f(cubic)f(curv)o(e)g(\(2.1\),)h(\(2.2\):)22 b(w)o(e)15
b(write)382 1826 y Ft(y)408 1805 y Fr(2)443 1826 y FB(=)e
Ft(G)p FB(\()p Ft(x)p FB(\))f Fs(\000)e Ft(F)698 1805
y Fr(2)719 1826 y FB(\()p Ft(x)p FB(\))48 b Ft(;)57 b(F)7
b FB(\()p Ft(x)p FB(\))13 b(=)1074 1787 y Fs(p)p 1115
1787 26 2 v 1115 1826 a Ft(a)1149 1755 y Fk(\022)1186
1826 y Ft(x)e Fs(\000)f Ft(u)h Fs(\000)1369 1792 y Ft(x)1397
1774 y Fr(2)p 1368 1814 50 2 v 1368 1860 a FB(2)p Ft(a)1434
1826 y FB(+)1492 1792 y Ft(b)1513 1774 y Fr(2)p 1488
1814 V 1488 1860 a FB(2)p Ft(a)1543 1755 y Fk(\023)904
1966 y Ft(G)p FB(\()p Ft(x)p FB(\))j(=)1079 1932 y Ft(x)1107
1914 y Fr(4)p 1079 1954 V 1079 2000 a FB(4)p Ft(a)1145
1966 y Fs(\000)1200 1932 y Ft(b)1221 1914 y Fr(2)1242
1932 y Ft(x)1270 1914 y Fr(2)p 1200 1954 92 2 v 1220
2000 a FB(2)p Ft(a)1307 1966 y FB(+)1365 1932 y Ft(b)1386
1914 y Fr(4)p 1361 1954 50 2 v 1361 2000 a FB(4)p Ft(a)1427
1966 y FB(+)d Ft(cx)f Fs(\000)h Ft(d)1881 1887 y FB(\(C)p
Ft(:)p FB(5\))0 2131 y(where)17 b(w)o(e)f(ha)o(v)o(e)g(set)h
Ft(a)d FB(=)502 2108 y Fr(\003)529 2092 y Fn(2)529 2115
y(3)p 502 2119 44 2 v 505 2148 a Fr(64)551 2131 y FB(,)j
Ft(b)603 2113 y Fr(2)639 2131 y FB(=)e Ft(a)726 2093
y Fk(P)786 2131 y Ft(m)829 2113 y Fr(2)829 2145 y Fu(i)850
2131 y FB(,)i Ft(c)e FB(=)975 2111 y Fr(1)p 975 2119
20 2 v 975 2148 a(4)999 2131 y FB(\003)1033 2138 y Fr(3)1062
2093 y Fk(Q)1118 2131 y Ft(m)1161 2138 y Fu(i)1193 2131
y FB(and)i Ft(d)e FB(=)g Ft(a)1415 2093 y Fk(P)1468 2145
y Fu(i<j)1539 2131 y Ft(m)1582 2113 y Fr(2)1582 2145
y Fu(i)1603 2131 y Ft(m)1646 2113 y Fr(2)1646 2145 y
Fu(j)1667 2131 y FB(.)23 b(One)17 b(can)g(then)0 2195
y(c)o(hec)o(k)d(that)j(the)f(follo)o(wing)g(di\013eren)o(tial)f(indeed)
g(satis\014es)i(\(2.4\))573 2362 y Ft(\025)d FB(=)g Fs(\000)711
2287 y(p)p 752 2287 25 2 v 752 2329 a FB(2)p 711 2351
66 2 v 717 2396 a(8)p Ft(\031)791 2329 y(x)8 b FB(d)p
Ft(x)p 786 2351 101 2 v 786 2361 a Fs(p)p 828 2361 26
2 v 36 x Ft(a)g(y)901 2292 y Fk(\022)942 2329 y Ft(F)f
FB(\()p Ft(x)p FB(\))p Ft(G)1085 2311 y Fm(0)1097 2329
y FB(\()p Ft(x)p FB(\))p 942 2351 221 2 v 988 2396 a(2)p
Ft(G)p FB(\()p Ft(x)p FB(\))1179 2362 y Fs(\000)k Ft(F)1268
2342 y Fm(0)1280 2362 y FB(\()p Ft(x)p FB(\))1346 2292
y Fk(\023)1406 2362 y Ft(:)461 b FB(\(C)p Ft(:)p FB(6\))83
2548 y(In)14 b(general,)h(to)f(express)549 2508 y Fk(R)590
2548 y Ft(\025)h FB(in)f(terms)g(of)g(the)h(three)f(elliptic)e(in)o
(tegrals)i Ft(I)1457 2555 y Fu(i)1486 2548 y FB(one)h(needs)f(to)h
(decomp)q(ose)0 2611 y(the)23 b(quartic)g(p)q(olynomial)g
Ft(G)p FB(\()p Ft(x)p FB(\))h(in)o(to)f(linear)g(factors.)44
b(While)22 b(this)i(can)g(b)q(e)g(done)f(in)h(general,)h(it)e(is)0
2674 y(cum)o(b)q(ersome)10 b(and)k(the)f(result)g(not)h(v)o(ery)e
(illuminating.)17 b(Here)c(w)o(e)f(will)g(restrict)h(ourselv)o(es)f(to)
i(the)f(simpler)0 2738 y(case)i Ft(m)145 2745 y Fr(1)180
2738 y FB(=)f Ft(m)275 2745 y Fr(2)310 2738 y FB(=)f(0,)j
Ft(m)458 2745 y Fr(3)493 2738 y Fs(\021)d Ft(m)p FB(.)21
b(Then,)15 b(since)g Ft(c)f FB(=)f Ft(d)i FB(=)e(0:)22
b Ft(G)p FB(\()p Ft(x)p FB(\))14 b(=)1304 2718 y Fr(1)p
1293 2726 40 2 v 1293 2755 a(4)p Fu(a)1338 2738 y FB(\()p
Ft(x)1385 2719 y Fr(2)1415 2738 y Fs(\000)9 b Ft(b)1484
2719 y Fr(2)1505 2738 y FB(\))1524 2719 y Fr(2)1561 2738
y FB(and)1664 2718 y Fu(G)1694 2702 y Fj(0)p 1660 2726
50 2 v 1660 2755 a Fr(2)p Fu(G)1728 2738 y FB(=)1809
2718 y Fr(1)p 1785 2726 69 2 v 1785 2755 a Fu(x)p Fr(+)p
Fu(b)1867 2738 y FB(+)1944 2718 y Fr(1)p 1919 2726 V
1919 2755 a Fu(x)p Fm(\000)p Fu(b)976 2883 y Fp(52)p
eop
%%Page: 54 54
54 53 bop 0 160 a FB(where)16 b(no)o(w)h Ft(b)c FB(=)h(\003)363
167 y Fr(3)384 160 y Ft(m=)p FB(8.)22 b(It)15 b(is)i(then)f(easy)g(to)h
(see)e(that)538 294 y Ft(\025)f FB(=)g Fs(\000)676 219
y(p)p 717 219 25 2 v 717 260 a FB(2)p 676 282 66 2 v
682 328 a(8)p Ft(\031)751 260 y FB(d)p Ft(x)p 751 282
55 2 v 766 328 a(y)819 223 y Fk(\024)846 294 y Ft(x)d
Fs(\000)f FB(2)p Ft(u)i FB(+)1052 260 y Ft(b)1073 242
y Fr(2)1105 260 y FB(+)f Ft(bu)p 1052 282 151 2 v 1073
328 a(x)f FB(+)h Ft(b)1218 294 y FB(+)1272 260 y Ft(b)1293
242 y Fr(2)1325 260 y Fs(\000)g Ft(bu)p 1272 282 152
2 v 1293 328 a(x)g Fs(\000)g Ft(b)1429 223 y Fk(\025)1881
294 y FB(\(C)p Ft(:)p FB(7\))0 438 y(so)17 b(that)g(after)f(in)o(tro)q
(ducing)g Ft(\021)g FB(=)d(2)p Ft(y)19 b FB(and)d Ft(\030)h
FB(=)d Ft(x)c Fs(\000)976 418 y Fu(u)p 976 426 23 2 v
977 455 a Fr(3)1014 438 y Fs(\000)1076 416 y Fr(\003)1103
400 y Fn(2)1103 422 y(3)p 1069 426 58 2 v 1069 455 a
Fr(192)1148 438 y FB(w)o(e)16 b(get)112 517 y Fk(Z)170
585 y Ft(\025)e FB(=)269 510 y Fs(p)p 310 510 25 2 v
310 551 a FB(2)p 269 573 66 2 v 275 619 a(4)p Ft(\031)340
500 y Fk(")377 515 y(\022)419 551 y FB(5)p 419 573 25
2 v 419 619 a(3)448 585 y Ft(u)d Fs(\000)551 551 y FB(\003)585
533 y Fr(2)585 565 y(3)p 542 573 74 2 v 542 619 a FB(192)620
515 y Fk(\023)665 585 y Ft(I)687 592 y Fr(1)719 585 y
Fs(\000)f Ft(I)790 592 y Fr(2)822 585 y Fs(\000)877 551
y FB(\003)911 558 y Fr(3)932 551 y Ft(m)p 877 573 98
2 v 902 619 a FB(64)980 585 y(\(8)p Ft(u)h FB(+)g(\003)1145
592 y Fr(3)1166 585 y Ft(m)p FB(\))p Ft(I)1250 592 y
Fr(3)1279 515 y Fk(\022)1316 585 y Fs(\000)1360 551 y
FB(\003)1394 558 y Fr(3)1414 551 y Ft(m)p 1360 573 V
1396 619 a FB(8)1473 585 y Fs(\000)1537 551 y FB(\003)1571
533 y Fr(2)1571 565 y(3)p 1528 573 74 2 v 1528 619 a
FB(192)1617 585 y Fs(\000)1672 551 y Ft(u)p 1672 573
28 2 v 1674 619 a FB(3)1705 515 y Fk(\023)822 752 y FB(+)876
718 y(\003)910 725 y Fr(3)931 718 y Ft(m)p 876 740 98
2 v 901 786 a FB(64)979 752 y(\(8)p Ft(u)g Fs(\000)g
FB(\003)1145 759 y Fr(3)1166 752 y Ft(m)p FB(\))p Ft(I)1250
759 y Fr(3)1279 681 y Fk(\022)1321 718 y FB(\003)1355
725 y Fr(3)1376 718 y Ft(m)p 1321 740 V 1357 786 a FB(8)1434
752 y Fs(\000)1498 718 y FB(\003)1532 700 y Fr(2)1532
732 y(3)p 1489 740 74 2 v 1489 786 a FB(192)1578 752
y Fs(\000)1633 718 y Ft(u)p 1633 740 28 2 v 1635 786
a FB(3)1666 681 y Fk(\023)1711 666 y(#)1756 752 y Ft(:)1881
668 y FB(\(C)p Ft(:)p FB(8\))0 894 y(W)l(e)24 b(see)g(from)f(\(C.7\))i
(that)g Ft(\025)g FB(has)g(p)q(oles)f(at)h(\()p Ft(x)j
FB(=)f(\003)1073 901 y Fr(3)1094 894 y Ft(m=)p FB(8)8
b Ft(;)33 b(y)d FB(=)d Fs(\007)p Ft(i)p FB(\(\003)1468
901 y Fr(3)1489 894 y Ft(m=)p FB(8)17 b Fs(\000)f Ft(u)p
FB(\)\003)1733 901 y Fr(3)1754 894 y Ft(=)p FB(8\))25
b(and)g(at)0 956 y(\()p Ft(x)14 b FB(=)f Fs(\000)p FB(\003)185
963 y Fr(3)206 956 y Ft(m=)p FB(8)8 b Ft(;)24 b(y)15
b FB(=)f Fs(\006)p Ft(i)p FB(\()p Fs(\000)p FB(\003)582
963 y Fr(3)602 956 y Ft(m=)p FB(8)c Fs(\000)f Ft(u)p
FB(\)\003)832 963 y Fr(3)853 956 y Ft(=)p FB(8\))16 b(with)f(residues)g
Fs(\006)1292 936 y Fr(1)p 1274 944 56 2 v 1274 973 a(2)p
Fu(\031)q(i)1357 936 y(m)p 1339 944 71 2 v 1339 981 a
Fr(2)1358 950 y Fm(p)p 1390 950 20 2 v 31 x Fr(2)1414
956 y FB(.)21 b(Note)15 b(that)h(the)f(in)o(tegrals)g
Ft(I)1972 963 y Fr(3)0 1024 y FB(cancel)g(in)h(the)g
Ft(m)e Fs(!)f FB(0)k(limit.)0 1115 y(The)f(pure)g(gauge)i(theory:)j
Ft(N)561 1123 y Fu(f)599 1115 y FB(=)14 b(0)p 0 1137
676 2 v 83 1195 a(Finally)h(let)g(us)i(note)f(that)h(for)g(the)f(pure)g
(gauge)h(theory)f(in)g(the)g(con)o(v)o(en)o(tions)f(of)i([2])e(w)o(e)h
(ha)o(v)o(e)577 1261 y Fk(Z)635 1329 y Ft(\025)e FB(=)734
1254 y Fs(p)p 776 1254 25 2 v 41 x FB(2)p 734 1317 66
2 v 740 1363 a(4)p Ft(\031)813 1258 y Fk(\024)840 1329
y Ft(uI)890 1336 y Fr(1)921 1329 y Fs(\000)d FB(3)p Ft(I)1017
1336 y Fr(2)1049 1329 y Fs(\000)1104 1295 y FB(\003)1138
1277 y Fr(4)1138 1309 y(0)p 1104 1317 56 2 v 1119 1363
a FB(4)1164 1329 y Ft(I)1186 1336 y Fr(3)1215 1273 y
Fk(\020)1245 1329 y Fs(\000)1289 1295 y Ft(u)p 1289 1317
28 2 v 1291 1363 a FB(3)1321 1273 y Fk(\021)1351 1258
y(\025)1402 1329 y Ft(:)465 b FB(\(C)p Ft(:)p FB(9\))0
1461 y(Since)15 b Fs(\000)171 1441 y Fu(u)p 171 1450
23 2 v 172 1478 a Fr(3)215 1461 y FB(is)h(one)g(of)h(the)f(ro)q(ots)i
Ft(e)640 1468 y Fu(i)671 1461 y FB(one)e(can)h(use)f(relations)h
(\(B.11\))f(to)g(\(B.13\))h(to)f(reexpress)g Ft(I)1787
1468 y Fr(3)1816 1421 y Fk(\000)1839 1461 y Fs(\000)1883
1441 y Fu(u)p 1883 1450 V 1884 1478 a Fr(3)1910 1421
y Fk(\001)1949 1461 y FB(as)0 1523 y(a)k(com)o(bination)f(of)h
Ft(I)407 1530 y Fr(1)447 1523 y FB(and)h Ft(I)568 1530
y Fr(2)588 1523 y FB(.)32 b(This)20 b(m)o(ust)f(b)q(e)h(so)g(for)g
Ft(N)1124 1532 y Fu(f)1169 1523 y FB(=)g(0)g(since)f
Ft(\025)h FB(has)h(no)f(p)q(oles)g(and)h(th)o(us)f(its)0
1585 y(in)o(tegral)15 b(m)o(ust)g(b)q(e)i(expressible)d(through)k
Ft(I)817 1592 y Fr(1)854 1585 y FB(and)f Ft(I)971 1592
y Fr(2)1008 1585 y FB(only)l(.)0 1675 y(R)o(G)f(\015o)o(ws)h(of)f(the)g
(in)o(tegrals)p 0 1691 530 2 v 83 1754 a(One)k(can)g(c)o(hec)o(k)e(the)
h(di\013eren)o(t)g(R)o(G)h(\015o)o(ws)h(at)f(the)g(lev)o(el)d(of)k(the)
e(p)q(erio)q(d)i(in)o(tegrals.)31 b(F)l(or)20 b(example,)0
1816 y(starting)d(with)f(the)g Ft(N)416 1824 y Fu(f)455
1816 y FB(=)e(1)j(p)q(erio)q(ds)g(\(C.2\))f(and)h(letting)f
Ft(m)e Fs(!)f(1)p FB(,)j(\003)1330 1823 y Fr(1)1365 1816
y Fs(!)e FB(0)j(while)e(k)o(eeping)h Ft(m)p FB(\003)1851
1798 y Fr(3)1851 1830 y(1)1885 1816 y FB(=)e(\003)1971
1798 y Fr(4)1971 1830 y(0)0 1878 y FB(\014xed,)20 b(w)o(e)g(imm)o
(ediatel)o(y)d(\014nd)j(that)h(\(C.2\))f(\015o)o(ws)h(to)f(\(C.9\).)32
b(The)20 b(\015o)o(w)h(from)e Ft(N)1548 1886 y Fu(f)1593
1878 y FB(=)h(2,)h(eq.)32 b(\(C.4\),)20 b(to)0 1940 y
Ft(N)39 1949 y Fu(f)79 1940 y FB(=)15 b(1,)i(eq.)23 b(\(C.2\),)17
b(as)h Ft(m)518 1947 y Fr(2)554 1940 y Fs(!)c(1)p FB(,)j(\003)733
1947 y Fr(2)769 1940 y Fs(!)e FB(0,)i Ft(m)932 1947 y
Fr(2)953 1940 y FB(\003)987 1922 y Fr(2)987 1954 y(2)1024
1940 y FB(=)e(\003)1111 1922 y Fr(3)1111 1954 y(1)1149
1940 y FB(\014xed,)h(is)h(less)g(trivial:)k(starting)d(with)e(\(C.4\))0
2002 y(w)o(e)g(ha)o(v)o(e)200 2064 y Fk(Z)259 2132 y
Ft(\025)287 2075 y Fk(\014)287 2105 y(\014)287 2135 y(\014)304
2167 y Fu(N)335 2171 y Fl(f)354 2167 y Fr(=2)435 2132
y Fs(!)520 2057 y(p)p 562 2057 25 2 v 42 x FB(2)p 520
2121 66 2 v 526 2166 a(4)p Ft(\031)591 2047 y Fk(")625
2099 y FB(4)p 625 2121 25 2 v 625 2166 a(3)655 2132 y
Ft(uI)705 2139 y Fr(1)736 2132 y Fs(\000)11 b FB(2)p
Ft(I)832 2139 y Fr(2)864 2132 y FB(+)918 2099 y(\003)952
2080 y Fr(3)952 2113 y(1)p 918 2121 56 2 v 934 2166 a
FB(8)978 2132 y(\()p Ft(m)1040 2139 y Fr(2)1072 2132
y Fs(\000)g FB(2)p Ft(m)1189 2139 y Fr(1)1210 2132 y
FB(\))p Ft(I)1251 2139 y Fr(3)1281 2062 y Fk(\022)1317
2132 y Fs(\000)1361 2099 y Ft(u)p 1361 2121 28 2 v 1363
2166 a FB(3)1405 2132 y(+)1475 2099 y(\003)1509 2080
y Fr(3)1509 2113 y(1)p 1459 2121 89 2 v 1459 2166 a FB(8)p
Ft(m)1526 2173 y Fr(2)1552 2062 y Fk(\023)864 2299 y
Fs(\000)919 2265 y FB(\003)953 2247 y Fr(3)953 2279 y(1)p
919 2287 56 2 v 934 2333 a FB(8)979 2299 y(\()p Ft(m)1041
2306 y Fr(2)1073 2299 y FB(+)g(2)p Ft(m)1189 2306 y Fr(1)1210
2299 y FB(\))p Ft(I)1251 2306 y Fr(3)1281 2229 y Fk(\022)1317
2299 y Fs(\000)1361 2265 y Ft(u)p 1361 2287 28 2 v 1363
2333 a FB(3)1405 2299 y Fs(\000)1476 2265 y FB(\003)1510
2247 y Fr(3)1510 2279 y(1)p 1460 2287 89 2 v 1460 2333
a FB(8)p Ft(m)1527 2340 y Fr(2)1553 2229 y Fk(\023)1598
2214 y(#)1643 2299 y Ft(:)1857 2216 y FB(\(C)p Ft(:)p
FB(10\))0 2438 y(Here,)23 b(the)g(in)o(tegrals)f Ft(I)453
2445 y Fu(i)491 2438 y FB(on)h(the)g(r.h.s.)41 b(are)23
b(mean)o(t)e(to)j(b)q(e)f(those)g(of)g Ft(N)1421 2447
y Fu(f)1472 2438 y FB(=)i(1.)42 b(T)l(a)o(ylor)22 b(expanding)0
2500 y Ft(I)22 2507 y Fr(3)43 2500 y FB(\()p Ft(c)11
b FB(+)h Ft(\016)r(c)p FB(\))i(=)h Ft(I)297 2507 y Fr(3)318
2500 y FB(\()p Ft(c)p FB(\))c(+)h Ft(I)464 2482 y Fm(0)460
2514 y Fr(3)480 2500 y FB(\()p Ft(c)p FB(\))p Ft(\016)r(c)f
FB(+)h Ft(:)c(:)g(:)o FB(,)17 b(and)g(using)g(the)g(relation)f
(\(B.17\))h(for)g(the)g(deriv)m(ativ)o(e)e(of)i Ft(I)1834
2507 y Fr(3)1872 2500 y FB(\(v)m(alid)0 2562 y(for)g
Ft(N)114 2571 y Fu(f)155 2562 y FB(=)e(1\),)i(the)g(r.h.s)g(of)g(eq.)24
b(\(C.10\))17 b(b)q(ecomes)f(exactly)g(the)h(r.h.s.)24
b(of)17 b(eq.)23 b(\(C.2\),)18 b(up)f(to)g(terms)f(that)0
2624 y(v)m(anish)i(as)g Ft(m)256 2631 y Fr(2)293 2624
y Fs(!)e(1)p FB(.)25 b(Similarly)15 b(one)i(can)h(c)o(hec)o(k)e(that)i
(as)g Ft(m)e Fs(!)g(1)p FB(,)h(the)g Ft(N)1469 2633 y
Fu(f)1510 2624 y FB(=)f(3)i(p)q(erio)q(ds)g(\(C.8\))g(\015o)o(w)0
2686 y(to)g(the)f Ft(N)185 2695 y Fu(f)225 2686 y FB(=)f(2)h(p)q(erio)q
(ds)h(\(C.4\))g(with)f Ft(m)776 2693 y Fr(1)812 2686
y FB(=)f Ft(m)909 2693 y Fr(2)945 2686 y FB(=)g(0.)24
b(This)18 b(requires)e(to)h(reexpress)g Ft(I)1652 2693
y Fr(3)1673 2686 y FB(\()p Ft(c)p FB(\))g(for)h Ft(c)f
FB(a)g(ro)q(ot)0 2749 y Ft(e)23 2756 y Fu(i)54 2749 y
FB(in)f(terms)f(of)h Ft(I)324 2756 y Fr(1)361 2749 y
FB(and)h Ft(I)478 2756 y Fr(2)515 2749 y FB(through)g(the)f(form)o
(ulae)f(giv)o(en)g(in)h(app)q(endix)h(B.)976 2883 y Fp(53)p
eop
%%Page: 55 55
55 54 bop 773 160 a Fz(APPENDIX)18 b(D)83 273 y FB(In)g(this)g(app)q
(endix)g(w)o(e)f(p)q(erform)g(some)g(c)o(hec)o(ks)g(on)h(our)h
(equations)f(\(2.27\))h(that)f(express)g Ft(a)f FB(and)i
Ft(a)1958 282 y Fu(D)0 345 y FB(for)e Ft(N)114 354 y
Fu(f)152 345 y FB(=)d(2,)j Ft(m)302 352 y Fr(1)336 345
y FB(=)d Ft(m)431 352 y Fr(2)466 345 y FB(=)g Ft(m)i
FB(in)g(terms)f(of)h(the)h Ft(I)936 318 y Fr(\()p Fu(j)r
Fr(\))932 360 y Fu(i)1001 345 y FB(and)g(hence)e(of)i(the)f(complete)e
(elliptic)g(in)o(tegrals)i Ft(K)t FB(,)0 407 y Ft(E)k
FB(and)d(\005)188 414 y Fr(1)209 407 y FB(.)22 b(In)16
b(particular,)g(w)o(e)g(will)f(sho)o(w)j(that)f(one)f(indeed)g(reco)o
(v)o(ers)f(the)i(correct)e(expressions)i(of)g(the)0 469
y(massless)d Ft(N)231 478 y Fu(f)269 469 y FB(=)g(2)h(theory)f([4])g
(as)h Ft(m)e Fs(!)h FB(0,)g(and)h(that)g(one)f(gets)h(the)f
(appropriate)h(expressions)f(of)h Ft(N)1878 478 y Fu(f)1916
469 y FB(=)f(0)0 532 y(in)i(the)g Ft(m)d Fs(!)h(1)i FB(limit.)83
613 y(First)g(w)o(e)h(examine)d(the)j(limit)d Ft(m)g
Fs(!)h FB(0.)23 b(Then)16 b(the)h(extra)f(term)1320 593
y Fu(m)p 1311 601 52 2 v 1311 606 a Fm(p)p 1343 606 20
2 v 31 x Fr(2)1384 613 y FB(in)h(\(2.27\))g(disapp)q(ears)h(and)f(one)0
681 y(has)460 717 y Fk(I)458 858 y Fu(\015)478 862 y
Fl(i)518 785 y Ft(\025)e Fs(!)615 710 y(p)p 657 710 25
2 v 41 x FB(2)p 615 774 66 2 v 621 819 a(4)p Ft(\031)695
715 y Fk(\024)726 751 y FB(4)p 726 774 25 2 v 726 819
a(3)755 785 y Ft(u)8 b(I)817 759 y Fr(\()p Fu(i)p Fr(\))813
800 y(1)873 785 y Fs(\000)j FB(2)p Ft(I)973 759 y Fr(\()p
Fu(i)p Fr(\))969 800 y(2)1018 715 y Fk(\025)1058 785
y FB(=)1114 710 y Fs(p)p 1156 710 V 41 x FB(2)p 1114
774 66 2 v 1120 819 a(4)p Ft(\031)1194 717 y Fk(I)1191
858 y Fu(\015)1211 862 y Fl(i)1257 748 y FB(d)p Ft(\030)1316
708 y Fk(\000)1344 729 y Fr(4)p 1344 737 20 2 v 1344
766 a(3)1368 748 y Ft(u)g Fs(\000)f FB(2)p Ft(\030)1503
708 y Fk(\001)p 1257 774 271 2 v 1379 819 a Ft(\021)572
966 y FB(=)615 891 y Fs(p)p 657 891 25 2 v 42 x FB(2)p
615 955 66 2 v 621 1000 a(4)p Ft(\031)695 898 y Fk(I)692
1039 y Fu(\015)712 1043 y Fl(i)758 933 y FB(d)p Ft(x)p
FB(\()p Ft(u)g Fs(\000)h Ft(x)p FB(\))p 758 955 210 2
v 849 1000 a Ft(y)986 966 y FB(=)i Fs(\000)1081 891 y(p)p
1123 891 25 2 v 42 x FB(2)p 1081 955 66 2 v 1087 1000
a(4)p Ft(\031)1160 898 y Fk(I)1158 1039 y Fu(\015)1178
1043 y Fl(i)1224 933 y FB(d)p Ft(x)1279 895 y Fs(p)p
1320 895 117 2 v 1320 933 a Ft(x)e Fs(\000)g Ft(u)p 1223
955 214 2 v 1223 965 a Fk(q)p 1273 965 164 2 v 63 x Ft(x)1301
1014 y Fr(2)1333 1028 y Fs(\000)1388 1003 y Fr(\003)1415
990 y Fn(4)1415 1013 y(2)p 1388 1017 44 2 v 1391 1046
a Fr(64)1458 966 y Ft(:)1879 891 y FB(\(D)p Ft(:)p FB(1\))0
1151 y(Since)19 b Ft(e)154 1158 y Fr(1)195 1151 y Fs(!)269
1132 y Fr(2)p Fu(u)p 269 1140 42 2 v 280 1168 a Fr(3)316
1151 y FB(,)h Ft(e)373 1158 y Fr(2)413 1151 y Fs(!)g(\000)527
1132 y Fu(u)p 527 1140 23 2 v 528 1168 a Fr(3)567 1151
y FB(+)624 1129 y Fr(\003)651 1113 y Fn(2)651 1136 y(2)p
624 1140 44 2 v 636 1168 a Fr(8)673 1151 y FB(,)g Ft(e)730
1158 y Fr(3)771 1151 y Fs(!)f(\000)884 1132 y Fu(u)p
884 1140 23 2 v 885 1168 a Fr(3)925 1151 y Fs(\000)982
1129 y Fr(\003)1009 1113 y Fn(2)1009 1136 y(2)p 982 1140
44 2 v 994 1168 a Fr(8)1051 1151 y FB(\(or)h(in)f(terms)f(of)i(the)g(v)
m(ariable)f Ft(x)h FB(the)f(ro)q(ots)i(are)0 1227 y Ft(x)28
1234 y Fr(1)69 1227 y FB(=)f Ft(u)p FB(,)g Ft(x)217 1234
y Fr(2)258 1227 y FB(=)321 1205 y Fr(\003)348 1189 y
Fn(2)348 1212 y(2)p 321 1216 V 333 1244 a Fr(8)370 1227
y FB(\),)g(these)g(are)g(precisely)e(the)h(in)o(tegral)g(expressions)h
(for)g Ft(a)1470 1236 y Fu(D)1525 1227 y FB(and)g Ft(a)g
FB(of)g(the)f(massless)0 1293 y Ft(N)39 1302 y Fu(f)78
1293 y FB(=)13 b(2)k(theory)f(\(whic)o(h)g(equal)615
1273 y Fr(1)p 615 1281 20 2 v 615 1310 a(2)656 1293 y
FB(times)e(the)i Ft(a)896 1301 y Fu(D)947 1293 y FB(and)h
Ft(a)f FB(of)g(the)g Ft(N)1262 1302 y Fu(f)1301 1293
y FB(=)e(0)i(theory\))g([1,)g(4].)83 1374 y(No)o(w)24
b(let)g Ft(m)j Fs(6)p FB(=)g(0.)46 b(It)24 b(is)g(then)g(straigh)o
(tforw)o(ard)h(to)g(explicitly)c(c)o(hec)o(k)h(that)j(at)g(the)f(righ)o
(tmost)0 1442 y(singularit)o(y)l(,)d Ft(u)h FB(=)g Ft(m)410
1424 y Fr(2)445 1442 y FB(+)503 1420 y Fr(\003)530 1404
y Fn(2)530 1427 y(2)p 503 1431 44 2 v 515 1459 a Fr(8)552
1442 y FB(,)f(w)o(e)g(ha)o(v)o(e)g(the)f(follo)o(wing:)31
b(if)21 b Ft(m)g(<)1285 1423 y Fr(\003)1312 1427 y Fn(2)p
1285 1431 V 1297 1459 a Fr(2)1355 1442 y FB(one)g(has)h
Ft(e)1564 1449 y Fr(1)1607 1442 y FB(=)g Ft(e)1690 1449
y Fr(2)1711 1442 y FB(,)g Ft(k)1774 1424 y Fm(0)1808
1442 y FB(=)g(0)g(and)0 1509 y(th)o(us)e(it)f(follo)o(ws)h(that)g
Ft(a)462 1518 y Fu(D)497 1509 y FB(\()p Ft(u)p FB(\))f(=)h(0)8
b(;)22 b(if)e Ft(m)f(>)882 1490 y Fr(\003)909 1494 y
Fn(2)p 882 1498 V 895 1526 a Fr(2)931 1509 y FB(,)h(ho)o(w)o(ev)o(er,)f
(one)h(has)h Ft(e)1377 1516 y Fr(2)1418 1509 y FB(=)f
Ft(e)1499 1516 y Fr(3)1540 1509 y FB(so)g(that)g Ft(k)i
FB(=)e(0)h(and)f(it)0 1571 y(then)g(follo)o(ws)g(that)g
Ft(a)p FB(\()p Ft(u)p FB(\))g(=)572 1552 y Fu(m)p 563
1560 52 2 v 563 1565 a Fm(p)p 595 1565 20 2 v 31 x Fr(2)619
1571 y FB(.)33 b(Hence)18 b(w)o(e)i(see)g(that)g(the)g(massless)f(BPS)h
(state)g(at)g(this)g(singularit)o(y)0 1660 y Ft(u)f FB(=)g
Ft(m)147 1642 y Fr(2)181 1660 y FB(+)237 1638 y Fr(\003)264
1622 y Fn(2)264 1644 y(2)p 237 1648 44 2 v 249 1677 a
Fr(8)305 1660 y FB(is)g(a)h(magnetic)d(monop)q(ole)i(\()p
Ft(n)884 1667 y Fu(e)904 1660 y Ft(;)8 b(n)955 1667 y
Fu(m)991 1660 y FB(\))1010 1667 y Fu(s)1049 1660 y FB(=)19
b(\(0)p Ft(;)8 b FB(1\))1214 1667 y Fr(0)1255 1660 y
FB(if)18 b Ft(m)h(<)1426 1640 y Fr(\003)1453 1644 y Fn(2)p
1426 1648 V 1438 1677 a Fr(2)1475 1660 y FB(,)g(while)g(for)g
Ft(m)g(>)1840 1640 y Fr(\003)1867 1644 y Fn(2)p 1840
1648 V 1852 1677 a Fr(2)1908 1660 y FB(it)g(is)0 1722
y(a)h(quark)f(\()p Ft(n)233 1729 y Fu(e)253 1722 y Ft(;)8
b(n)304 1729 y Fu(m)339 1722 y FB(\))358 1729 y Fu(s)397
1722 y FB(=)19 b(\(1)p Ft(;)8 b FB(0\))562 1729 y Fr(1)584
1722 y FB(.)30 b(This)19 b(p)q(erfectly)f(agrees)h(with)g(the)g
(discussion)g(of)h(Section)e(2)i(and)f(th)o(us)0 1784
y(justi\014es)d(the)g(c)o(hoice)f(of)i(adding)f(the)720
1765 y Fu(m)p 711 1773 52 2 v 711 1778 a Fm(p)p 743 1778
20 2 v 31 x Fr(2)784 1784 y FB(term)e(in)i(the)g(\014rst)h(equation)f
(\(2.27\).)83 1879 y(Let)j(us)f(no)o(w)h(examine)d(the)i(R)o(G)h(\015o)
o(w)f(to)h(the)f Ft(N)1002 1888 y Fu(f)1045 1879 y FB(=)f(0)i(theory)f
(as)h Ft(m)e Fs(!)h(1)p FB(,)g(\003)1604 1886 y Fr(2)1642
1879 y Fs(!)g FB(0,)h Ft(m)p FB(\003)1844 1886 y Fr(2)1882
1879 y FB(=)e(\003)1971 1861 y Fr(2)1971 1893 y(0)0 1941
y FB(\014xed.)k(The)16 b(\015o)o(w)h(of)f(the)g(ro)q(ots)i
Ft(e)625 1948 y Fu(i)656 1941 y FB(of)e(eq.)21 b(\(A.9\))16
b(is)591 2086 y Ft(e)614 2093 y Fr(1)649 2086 y Fs(!)717
2052 y Ft(u)p 717 2074 28 2 v 719 2120 a FB(6)761 2086
y(+)815 2052 y(1)p 815 2074 25 2 v 815 2120 a(2)844 2025
y Fk(q)p 894 2025 143 2 v 61 x Ft(u)11 b FB(+)g(\003)1016
2069 y Fr(2)1016 2101 y(0)1037 2025 y Fk(q)p 1087 2025
144 2 v 61 x Ft(u)g Fs(\000)g FB(\003)1210 2069 y Fr(2)1210
2101 y(0)1245 2086 y Fs(\021)i Ft(e)1320 2059 y Fr(\(0\))1320
2101 y(1)591 2192 y Ft(e)614 2199 y Fr(2)649 2192 y Fs(!)g(\000)756
2158 y Ft(u)p 756 2181 28 2 v 758 2226 a FB(3)803 2192
y Fs(\021)g Ft(e)878 2166 y Fr(\(0\))878 2207 y(3)591
2309 y Ft(e)614 2316 y Fr(3)649 2309 y Fs(!)717 2276
y Ft(u)p 717 2298 V 719 2343 a FB(6)761 2309 y Fs(\000)816
2276 y FB(1)p 816 2298 25 2 v 816 2343 a(2)845 2249 y
Fk(q)p 895 2249 143 2 v 60 x Ft(u)e FB(+)g(\003)1017
2292 y Fr(2)1017 2324 y(0)1038 2249 y Fk(q)p 1088 2249
144 2 v 60 x Ft(u)g Fs(\000)f FB(\003)1210 2292 y Fr(2)1210
2324 y(0)1245 2309 y Fs(\021)k Ft(e)1321 2283 y Fr(\(0\))1321
2324 y(2)1388 2309 y Ft(:)1879 2194 y FB(\(D)p Ft(:)p
FB(2\))0 2464 y(where)k Ft(e)166 2438 y Fr(\(0\))166
2479 y Fu(i)236 2464 y FB(is)g(the)g(standard)i(lab)q(eling)e(of)h(the)
f(ro)q(ots)i(for)f Ft(N)1150 2473 y Fu(f)1193 2464 y
FB(=)f(0.)28 b(W)l(e)18 b(see)h(that)g(the)f(\015o)o(w)h(exc)o(hanges)0
2526 y(the)c(lab)q(elling)f(of)h Ft(e)355 2533 y Fr(2)390
2526 y FB(and)h Ft(e)507 2533 y Fr(3)528 2526 y FB(.)k(Let)15
b(us)g(\014rst)g(consider)g(the)g(\015o)o(w)g(of)g Ft(a)p
FB(\()p Ft(u)p FB(\))f(as)h(giv)o(en)f(b)o(y)h(the)f(\014rst)h(eq.)20
b(\(2.27\).)0 2589 y(Since)15 b(the)h Ft(N)250 2597 y
Fu(f)289 2589 y FB(=)e(2)j(curv)o(e)e(\015o)o(ws)h(to)h(the)f
Ft(N)815 2597 y Fu(f)854 2589 y FB(=)e(0)i(curv)o(e,)f(the)h(in)o
(tegrands)g(\015o)o(w)h(appropriately)l(.)k(Clearly)l(,)0
2664 y(the)c(cycle)e Ft(\015)234 2637 y Fr(\()p Fu(N)280
2641 y Fl(f)299 2637 y Fr(=2\))231 2679 y(1)382 2664
y FB(encircling)g Ft(e)625 2671 y Fr(2)663 2664 y FB(and)j
Ft(e)782 2671 y Fr(3)819 2664 y FB(\015o)o(ws)g(to)f(the)g(cycle)e
Ft(\015)1235 2637 y Fr(\()p Fu(N)1281 2641 y Fl(f)1300
2637 y Fr(=0\))1232 2679 y(1)1366 2664 y FB(.)23 b(Hence)16
b Ft(I)1575 2637 y Fr(\(1\))1571 2679 y(1)1640 2664 y
Fs(!)f Ft(I)1731 2637 y Fr(\(1\))1727 2679 y(1)1782 2664
y Fs(j)1796 2672 y Fu(N)1827 2676 y Fl(f)1846 2672 y
Fr(=0)1914 2664 y FB(and)0 2741 y Ft(I)26 2714 y Fr(\(1\))22
2755 y(2)92 2741 y Fs(!)f Ft(I)182 2714 y Fr(\(1\))178
2755 y(2)233 2741 y Fs(j)247 2749 y Fu(N)278 2753 y Fl(f)297
2749 y Fr(=0)348 2741 y FB(.)24 b(The)17 b(in)o(tegral)f
Ft(I)691 2714 y Fr(\(1\))687 2755 y(3)758 2741 y FB(is)h(more)f(subtle)
g(since)g(it)h(is)g(the)f(one)h(that)h(in)o(v)o(olv)o(es)d(the)h(p)q
(ole)h(at)976 2883 y Fp(54)p eop
%%Page: 56 56
56 55 bop 0 173 a Ft(c)16 b FB(=)h Fs(\000)136 153 y
Fu(u)p 136 161 23 2 v 137 190 a Fr(3)175 173 y Fs(\000)231
150 y Fr(\003)258 134 y Fn(2)258 157 y(2)p 231 161 44
2 v 243 190 a Fr(8)296 173 y FB(=)f Ft(e)373 146 y Fr(\(0\))373
188 y(3)436 173 y Fs(\000)492 150 y Fr(\003)519 134 y
Fn(2)519 157 y(2)p 492 161 V 505 190 a Fr(8)541 173 y
FB(.)26 b(As)18 b(\003)689 180 y Fr(2)726 173 y Fs(!)e
FB(0,)j(this)e(p)q(ole)h(approac)o(hes)h Ft(e)1327 146
y Fr(\(0\))1327 188 y(3)1377 173 y FB(.)26 b(Hence,)17
b(for)h(non-zero)1858 150 y Fr(\003)1885 134 y Fn(2)1885
157 y(2)p 1858 161 V 1870 190 a Fr(8)1925 173 y FB(the)0
235 y(p)q(ole)f(at)g Ft(\030)g FB(=)d Ft(c)j FB(is)f(outside)h(the)f
(in)o(tegration)g(con)o(tour.)23 b(As)16 b(\003)1147
242 y Fr(2)1183 235 y Fs(!)e FB(0,)j(the)f(p)q(ole)h(crosses)g(the)f
(con)o(tour)h(and)0 304 y Ft(I)26 277 y Fr(\(1\))22 319
y(3)92 304 y FB(pic)o(ks)e(up)h(a)g(con)o(tribution)g(from)e(the)i
(residue)f(whic)o(h)g(is)g Ft(\016)r(I)1202 277 y Fr(\(1\))1198
319 y(3)1266 304 y FB(=)1341 284 y Fr(4)p Fu(\031)p 1323
292 78 2 v 1323 323 a Fr(\003)1350 310 y Fn(2)1350 333
y(2)1367 323 y Fu(m)1422 304 y FB(whic)o(h)g(precisely)f(cancels)h(the)
0 375 y(additional)h(term)361 355 y Fu(m)p 352 364 52
2 v 352 369 a Fm(p)p 384 369 20 2 v 31 x Fr(2)424 375
y FB(in)g(eq.)21 b(\(2.27\).)h(Hence)445 559 y Ft(a)p
FB(\()p Ft(u)p FB(\))14 b Fs(!)619 484 y(p)p 661 484
25 2 v 41 x FB(2)p 619 547 66 2 v 625 593 a(4)p Ft(\031)698
488 y Fk(\024)730 525 y FB(4)p 730 547 25 2 v 730 593
a(3)767 559 y Ft(uI)821 532 y Fr(\(1\))817 574 y(1)883
559 y Fs(\000)d FB(2)d Ft(I)991 532 y Fr(\(1\))987 574
y(2)1053 559 y Fs(\000)1108 525 y FB(\003)1142 507 y
Fr(4)1142 539 y(0)p 1108 547 56 2 v 1123 593 a FB(2)1176
559 y Ft(I)1202 532 y Fr(\(1\))1198 574 y(3)1253 559
y FB(\()p Ft(e)1295 532 y Fr(\(0\))1295 574 y(3)1345
559 y FB(\))1364 488 y Fk(\025)1399 471 y(\014)1399 501
y(\014)1399 531 y(\014)1399 561 y(\014)1399 591 y(\014)1416
623 y Fu(N)1447 627 y Fl(f)1466 623 y Fr(=0)1534 559
y Ft(:)331 b FB(\(D)p Ft(:)p FB(3\))0 756 y(Using)15
b(the)g(relation)f Ft(I)422 730 y Fr(\(1\))418 771 y(3)473
756 y FB(\()p Ft(e)515 730 y Fr(\(0\))515 771 y(3)565
756 y FB(\))584 699 y Fk(\014)584 729 y(\014)584 759
y(\014)601 791 y Fu(N)632 795 y Fl(f)652 791 y Fr(=0)717
756 y FB(=)786 737 y Fr(4)p 773 745 44 2 v 773 776 a(\003)800
763 y Fn(4)800 786 y(0)831 701 y Fk(\020)860 756 y Ft(I)886
730 y Fr(\(1\))882 771 y(2)948 756 y FB(+)1002 737 y
Fu(u)p 1002 745 23 2 v 1003 774 a Fr(3)1037 756 y Ft(I)1063
730 y Fr(\(1\))1059 771 y(1)1114 701 y Fk(\021)1152 699
y(\014)1152 729 y(\014)1152 759 y(\014)1169 791 y Fu(N)1200
795 y Fl(f)1219 791 y Fr(=0)1285 756 y FB(from)g(app)q(endix)h(B,)f(w)o
(e)h(see)f(that)i(the)0 842 y(r.h.s.)32 b(of)20 b(eq.)32
b(\(D.3\))21 b(indeed)e(coincides)g(with)h(the)g(corresp)q(onding)h(in)
o(tegral)e(for)h Ft(N)1612 851 y Fu(f)1657 842 y FB(=)h(0,)g(and)f
(hence)0 920 y Ft(a)p FB(\()p Ft(u)p FB(\))f Fs(!)g Ft(a)p
FB(\()p Ft(u)p FB(\))272 863 y Fk(\014)272 893 y(\014)272
923 y(\014)288 955 y Fu(N)319 959 y Fl(f)338 955 y Fr(=0)409
920 y Fs(\021)g Ft(a)493 902 y Fr(\(0\))544 920 y FB(\()p
Ft(u)p FB(\).)31 b(Next,)18 b(let)h(us)h(discuss)g(the)f(\015o)o(w)h
(of)g Ft(a)1375 929 y Fu(D)1409 920 y FB(\()p Ft(u)p
FB(\).)31 b(The)19 b(cycle)f Ft(\015)1772 927 y Fr(2)1813
920 y FB(encircles)0 1023 y Ft(e)23 1030 y Fr(1)67 1023
y FB(and)23 b Ft(e)191 1030 y Fr(2)235 1023 y FB(whic)o(h)f(\015o)o(w)h
(to)g Ft(e)578 997 y Fr(\(0\))578 1038 y(1)652 1023 y
FB(and)g Ft(e)776 997 y Fr(\(0\))776 1038 y(3)827 1023
y FB(.)41 b(The)23 b(corresp)q(onding)h(in)o(tegral)e(th)o(us)h(is)f
(the)h(sum)f(of)h(the)0 1097 y(in)o(tegral)17 b(o)o(v)o(er)g(a)i(cycle)
d Ft(\015)478 1071 y Fr(\(0\))475 1112 y(2)547 1097 y
FB(around)j Ft(e)737 1071 y Fr(\(0\))737 1112 y(1)806
1097 y FB(and)f Ft(e)925 1071 y Fr(\(0\))925 1112 y(2)994
1097 y FB(and)h(one)f(o)o(v)o(er)f(a)h(cycle)f Ft(\015)1481
1071 y Fr(\(0\))1478 1112 y(1)1550 1097 y FB(around)i
Ft(e)1740 1071 y Fr(\(0\))1740 1112 y(2)1809 1097 y FB(and)f
Ft(e)1928 1071 y Fr(\(0\))1928 1112 y(3)1979 1097 y FB(:)0
1171 y Ft(\015)25 1178 y Fr(2)62 1171 y Fs(!)e Ft(\015)156
1145 y Fr(\(0\))153 1186 y(2)219 1171 y FB(+)c Ft(\017\015)317
1145 y Fr(\(0\))314 1186 y(1)385 1171 y FB(where)17 b
Ft(\017)f FB(=)g(sign\()p Fs(=)p Ft(m)8 b(u)p FB(\).)24
b(Again,)18 b(the)f(p)q(ole)g(crossing)h(the)f(cycle)f
Ft(\015)1661 1145 y Fr(\(0\))1658 1186 y(1)1730 1171
y FB(giv)o(es)g(a)i(term)0 1234 y Fs(\000)p Ft(\017)72
1214 y Fu(m)p 64 1222 52 2 v 64 1227 a Fm(p)p 95 1227
20 2 v 95 1258 a Fr(2)120 1234 y FB(.)j(As)16 b(a)h(result)e(w)o(e)h
(ha)o(v)o(e)810 1379 y Ft(a)p FB(\()p Ft(u)p FB(\))d
Fs(!)h Ft(a)1005 1358 y Fr(\(0\))1055 1379 y FB(\()p
Ft(u)p FB(\))611 1468 y Ft(a)637 1477 y Fu(D)672 1468
y FB(\()p Ft(u)p FB(\))c(+)h Ft(\017)842 1435 y(m)p 830
1457 66 2 v 830 1467 a Fs(p)p 872 1467 25 2 v 41 x FB(2)915
1468 y Fs(!)j Ft(a)1005 1442 y Fr(\(0\))1005 1485 y Fu(D)1055
1468 y FB(\()p Ft(u)p FB(\))d(+)g Ft(\017)d(a)1235 1448
y Fr(\(0\))1286 1468 y FB(\()p Ft(u)p FB(\))16 b Ft(:)1879
1435 y FB(\(D)p Ft(:)p FB(4\))0 1639 y(This)g(motiv)m(ates)g(us)g(to)h
(de\014ne)g(~)-25 b Ft(a)622 1647 y Fu(D)657 1639 y FB(\()p
Ft(u)p FB(\))13 b(=)h Ft(a)814 1647 y Fu(D)849 1639 y
FB(\()p Ft(u)p FB(\))c Fs(\000)h Ft(\017)1003 1584 y
Fk(\020)1033 1639 y Ft(a)p FB(\()p Ft(u)p FB(\))f Fs(\000)1199
1619 y Fu(m)p 1190 1627 52 2 v 1190 1633 a Fm(p)p 1222
1633 20 2 v 30 x Fr(2)1246 1584 y Fk(\021)1293 1639 y
FB(whic)o(h)15 b(is)h(suc)o(h)h(that)f(under)h(the)f(R)o(G)0
1730 y(\015o)o(w)h(as)f Ft(m)e Fs(!)g(1)i FB(one)g(has)i(~)-25
b Ft(a)p FB(\()p Ft(u)p FB(\))13 b Fs(!)h Ft(a)719 1712
y Fr(\(0\))770 1730 y FB(\()p Ft(u)p FB(\))i(and)h(~)-25
b Ft(a)972 1739 y Fu(D)1007 1730 y FB(\()p Ft(u)p FB(\))13
b Fs(!)h Ft(a)1176 1704 y Fr(\(0\))1176 1747 y Fu(D)1227
1730 y FB(\()p Ft(u)p FB(\).)0 1827 y(Ac)o(kno)o(wledgemen)n(ts:)p
0 1842 417 2 v 83 1908 a(W)l(e)f(are)g(grateful)g(to)g(E.)g(Br)o(\023)
-23 b(ezin)11 b(for)j(an)f(in)o(teresting)f(discussion,)h(as)h(w)o(ell)
d(as)j(to)f(I.)g(Bak)m(as)g(for)g(p)q(oin)o(ting)0 1970
y(out)k(to)f(us)h(some)e(prop)q(erties)h(of)h(the)f(elliptic)e(in)o
(tegral)h(of)i(the)f(third)g(kind.)976 2883 y Fp(55)p
eop
%%Page: 57 57
57 56 bop 791 160 a Fx(REFERENCES)62 263 y FB(1.)25 b(N.)16
b(Seib)q(erg)h(and)h(E.)g(Witten,)e Fv(Ele)n(ctric-magnetic)22
b(duality,)d(monop)n(ole)g(c)n(ondensation,)h(and)f(c)n(on-)125
325 y(\014nement)k(in)f Ft(N)k FB(=)21 b(2)h Fv(sup)n(ersymmetric)f(Y)l
(ang-Mil)r(ls)j(the)n(ory)p FB(,)c(Nucl.)f(Ph)o(ys.)h
Fo(B426)g FB(\(1994\))i(19,)125 387 y FA(hep-th/94)o(07)o(087)p
 [[102 624 189 636] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9407087) pdfm 
-1 w FB(.)62 466 y(2.)j(N.)17 b(Seib)q(erg)h(and)g(E.)g(Witten,)f
Fv(Monop)n(oles,)j(duality)f(and)g(chir)n(al)g(symmetry)f(br)n(e)n
(aking)i(in)f Ft(N)k FB(=)16 b(2)125 528 y Fv(sup)n(ersymmetric)g(QCD)p
FB(,)g(Nucl.)f(Ph)o(ys.)g Fo(B431)i FB(\(1994\))g(484,)g
FA(hep-th/9408)o(099)p
 [[377 590 463 602] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9408099) pdfm 
-1 w FB(.)62 606 y(3.)25 b(F.)18 b(F)l(errari)h(and)h(A.)f(Bilal,)f
Fv(The)j(str)n(ong-c)n(oupling)h(sp)n(e)n(ctrum)e(of)g(Seib)n(er)n
(g-Witten)i(the)n(ory)p FB(,)d(Nucl.)125 669 y(Ph)o(ys.)c
Fo(B469)h FB(\(1996\))i(387,)f FA(hep-th/960)o(208)o(2)p
 [[229 556 316 568] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9602082) pdfm 
FB(.)62 747 y(4.)25 b(A.)15 b(Bilal)f(and)j(F.)e(F)l(errari,)g
Fv(Curves)i(of)g(mar)n(ginal)g(stability,)h(and)f(we)n(ak)h(and)g(str)n
(ong)f(c)n(oupling)h(BPS)125 809 y(sp)n(e)n(ctr)n(a)e(in)i(N=2)f(sup)n
(ersymmetric)g(QCD)p FB(,)f(Nucl.)f(Ph)o(ys.)g Fo(B480)i
FB(\(1996\))g(589,)g FA(hep-th/9605)o(101)p
 [[457 523 544 535] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9605101) pdfm 
-1 w FB(.)62 888 y(5.)25 b(A.)15 b(Bilal,)g Fv(Disc)n(ontinuous)j(BPS)h
(sp)n(e)n(ctr)n(a)e(in)h Ft(N)h FB(=)c(2)j Fv(susy)g(QCD)p
FB(,)e(Nucl.)f(Ph)o(ys.)h(B)g(\(Pro)q(c.)h(Suppl.\))125
950 y Fo(52A)f FB(\(1997\))i(305-313,)g FA(hep-th/9606)o(192)p
 [[212 489 299 501] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9606192) pdfm 
-1 w FB(.)62 1029 y(6.)25 b(P)l(.C.)12 b(Argyres)g(and)h(M.R.)f
(Douglas,)i Fv(New)h(phenomena)g(in)g FB(SU\(3\))f Fv(sup)n
(ersymmetric)f(gauge)j(the)n(ory)p FB(,)125 1091 y(Nucl.)e(Ph)o(ys.)i
Fo(B448)g FB(\(1995\))i(93,)p FA(hep-th/950)o(506)o(2)p
 [[250 455 337 467] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9505062) pdfm 
FB(.)62 1169 y(7.)25 b(P)l(.C.)15 b(Argyres,)h(M.R.)f(Plesser,)h(N.)f
(Seib)q(erg)h(and)h(E.)g(Witten,)e Fv(New)k Ft(N)g FB(=)14
b(2)k Fv(sup)n(er)n(c)n(onformal)e(\014eld)125 1231 y(the)n(ories)h(in)
h(four)e(dimensions)p FB(,)h(Nucl.)e(Ph)o(ys.)g Fo(B461)h
FB(\(1996\))i(71,)f FA(hep-th/951)o(11)o(54)p
 [[401 422 487 434] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9511154) pdfm 
FB(.)62 1310 y(8.)25 b(F.)16 b(F)l(errari,)h Fv(Char)n(ge)h(fr)n
(actionisation)g(in)h Ft(N)i FB(=)15 b(2)k Fv(sup)n(ersymmetric)f(QCD)p
FB(,)e(Ph)o(ys.)h(Rev.)f(Lett.)h Fo(78)125 1372 y FB(\(1997\))g(795,)g
FA(hep-th/9609)o(10)o(1)p
 [[163 388 250 400] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9609101) pdfm 
FB(.)62 1451 y(9.)25 b(A.)15 b(Brandh)o(ub)q(er)h(and)g(S.)g(Stieb)q
(erger,)f Fv(Self-dual)k(strings)f(and)f(stability)h(of)f(BPS)h(states)
g(in)f Ft(N)i FB(=)14 b(2)125 1513 y(SU)o(\(2\))k Fv(gauge)h(the)n
(ories)p FB(,)c(Nucl.)g(Ph)o(ys.)h Fo(B488)g FB(\(1997\))i(199,)f
FA(hep-th/96)o(100)o(53)p
 [[373 354 460 366] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9610053) pdfm 
-1 w FB(.)38 1591 y(10.)25 b(A.)19 b(Klemm,)f(W.)i(Lerc)o(he,)g(P)l(.)g
(Ma)o(yr,)h(C.)f(V)l(afa)h(and)g(N.)f(W)l(arner,)h Fv(Self-dual)i
(strings)f(and)g(N=2)125 1653 y(sup)n(ersymmetric)16
b(\014eld)j(the)n(ory)p FB(,)c(Nucl.)f(Ph)o(ys.)i Fo(B477)g
FB(\(1996\))i(746,)f FA(hep-th/960)o(403)o(4)p
 [[407 320 494 332] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9604034) pdfm 
FB(;)125 1715 y(J.)f(Sc)o(h)o(ulze)f(and)j(N.P)l(.)e(W)l(arner,)h
Fv(BPS)i(ge)n(o)n(desics)f(in)h(N=2)g(sup)n(ersymmetric)e(Y)l(ang-Mil)r
(ls)k(the)n(ory)p FB(,)125 1777 y FA(hep-th/97)o(02)o(012)p
 [[102 291 189 303] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9702012) pdfm 
-1 w FB(;)125 1840 y(J.)15 b(Rabin,)h Fv(Ge)n(o)n(desics)h(and)h(BPS)g
(states)g(in)g(N=2)g(sup)n(ersymmetric)e(QCD)p FB(,)g
FA(hep-th/9703)o(14)o(5)p
 [[448 275 535 287] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9703145) pdfm 
FB(.)38 1918 y(11.)25 b(F.)14 b(F)l(errari,)g Fv(The)i(dyon)g(sp)n(e)n
(ctr)n(a)f(of)h(\014nite)i(gauge)f(the)n(ories)p FB(,)e(LPTENS)h
(preprin)o(t)e(96/67,)i(to)g(app)q(ear)125 1980 y(in)f(Nucl.)g(Ph)o
(ys.)h(B,)f FA(hep-th/9702)o(16)o(6)p
 [[194 242 281 254] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9702166) pdfm 
FB(.)38 2059 y(12.)25 b(L.)16 b(Alv)m(arez-Gaum)o(\023)-23
b(e,)14 b(M.)h(Marino,)h(F.)g(Zamora,)f Fv(Softly)j(br)n(oken)g(N=2)g
(QCD)f(with)h(massive)g(quark)125 2121 y(hyp)n(ermultiplets)f(\(I\))p
FB(,)f FA(hep-th/970)o(30)o(72)p
 [[204 208 291 220] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9703072) pdfm 
FB(.)38 2200 y(13.)25 b(H.)31 b(Ao)o(y)o(ama,)k(T.)d(Harano,)37
b(M.)32 b(Sato)h(and)h(S.)e(W)l(ada,)37 b Fv(Multi-instanton)d(c)n
(alculus)g(in)125 2262 y Ft(N)44 b FB(=)38 b(2)31 b Fv(sup)n
(ersymmetric)g(QCD)p FB(,)f(Ph)o(ys.)g(Lett.)h Fo(B388)g
FB(\(1996\))h(331,)p FA(hep-th/96070)o(76)p
 [[443 174 530 186] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9607076) pdfm 
125 2324 a FB(T.)21 b(Harano)h(and)f(M.)g(Sato,)i Fv(Multi-instanton)h
(c)n(alculus)f(versus)g(exact)g(r)n(esults)f(in)h Ft(N)k
FB(=)c(2)f Fv(su-)125 2386 y(p)n(ersymmetric)16 b(QCD)p
FB(,)g FA(hep-th/960)o(806)o(0)p
 [[208 144 295 156] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9608060) pdfm 
FB(.)38 2464 y(14.)25 b(A.)13 b(Erdelyi)f(et)i(al,)g
Fv(Higher)i(T)l(r)n(ansc)n(endental)h(F)l(unctions)p
FB(,)e(V)l(ol)f(1,)g(McGra)o(w-Hill,)e(New)i(Y)l(ork,)f(1953.)38
2543 y(15.)25 b(G.)18 b(Mac)o(k,)g Fv(A)o(l)r(l)j(unitary)e(r)n(ay)f(r)
n(epr)n(esentations)i(of)f(the)h(c)n(onformal)f(gr)n(oup)f
FB(SU\(2,2\))h Fv(with)h(p)n(ositive)125 2605 y(ener)n(gy)p
FB(,)c(Comm.)d(Math.)j(Ph)o(ys.)g Fo(55)g FB(\(1977\))i(1.)38
2684 y(16.)25 b(T.)16 b(Eguc)o(hi,)f(K.)h(Hori,)f(K.)h(Ito)g(and)h
(S.K.)e(Y)l(ang,)i Fv(Study)g(of)h Ft(N)h FB(=)14 b(2)k
Fv(sup)n(er)n(c)n(onformal)e(\014eld)j(the)n(ories)125
2746 y(in)e(4)h(dimensions)p FB(,)e(Nucl.)f(Ph)o(ys.)g
Fo(B471)i FB(\(1996\))g(430,)g FA(hep-th/9603)o(002)p
 [[348 58 435 70] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9603002) pdfm 
-1 w FB(.)976 2883 y Fp(56)p eop
%%Page: 58 58
58 57 bop 38 160 a FB(17.)25 b(P)l(.C.)19 b(Argyres,)g
Fv(S-duality)j(and)f(glob)n(al)g(symmetries)g(in)f Ft(N)25
b FB(=)20 b(2)h Fv(sup)n(ersymmetric)f(\014eld)h(the)n(ory)p
FB(,)125 222 y FA(hep-th/97)o(06)o(095)p
 [[102 664 189 676] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9706095) pdfm 
-1 w FB(.)38 303 y(18.)k(M.)i(Douglas)j(and)g(S.)e(Shenk)o(er,)i
Fv(Dynamics)f(of)g FB(SU)o(\()p Ft(n)p FB(\))g Fv(sup)n(ersymmetric)f
(gauge)i(the)n(ory)p FB(,)125 365 y(Nucl.)14 b(Ph)o(ys.)i
Fo(B447)g FB(\(1995\))i(271.)38 446 y(19.)25 b(E.T.)16
b(Whittak)o(er)h(and)h(G.N.)e(W)l(atson,)i Fv(A)h(c)n(ourse)f(of)g(mo)n
(dern)g(analysis)p FB(,)f(Cam)o(bridge)f(Univ)o(ersit)o(y)125
508 y(Press)g(\(1963\).)38 589 y(20.)25 b(K.)15 b(Chandrasekhara,)j
Fv(El)r(liptic)h(functions)p FB(,)e(Springer-V)l(erlag)f(\(Berlin,)e
(1985\).)38 670 y(21.)25 b(Y)l(uji)20 b(Oh)o(ta,)j Fv(Pr)n(ep)n
(otentials)g(of)f Ft(N)28 b FB(=)c(2)e Ft(S)s(U)5 b FB(\(2\))23
b Fv(Y)l(ang-Mil)r(ls)j(the)n(ories)c(c)n(ouple)n(d)g(with)h(massive)
125 732 y(matter)17 b(multiplets)p FB(,)g(J.)f(Math.)g(Ph)o(ys.)g
Fo(38)g FB(\(1997\))i(682,)f FA(hep-th/960)o(40)o(59)p
 [[355 541 442 553] [1 1 1 [3 3]] [0 0 1]] (http://lanl.arXiv.org/abs/hep-th/9604059) pdfm 
FB(.)38 813 y(22.)25 b(J.L.)15 b(Cardy)l(,)i(Nucl.)d(Ph)o(ys.)i
Fo(B170)g FB(\(1980\))i(369and)g(Nucl.)d(Ph)o(ys.)g Fo(B205)h
FB(\(1982\))i(17.)976 2883 y Fp(57)p eop
%%Trailer
end 
end

userdict /end-hook known{end-hook}if
%%EOF
